--
-- PostgreSQL database dump
--

-- Dumped from database version 10.0
-- Dumped by pg_dump version 10.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

SET search_path = public, pg_catalog;

--
-- Data for Name: SequelizeMeta; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY "SequelizeMeta" (name) FROM stdin;
20171023163837-create-smartSiteResources.js
\.


--
-- Data for Name: resources; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY resources (id, name, created_at, updated_at, admin_settings) FROM stdin;
1	admin_pages	2017-11-20 12:08:49.145-05	2017-11-20 12:08:49.145-05	\N
2	wysiwyg	2017-11-20 15:05:01.664-05	2017-11-20 15:05:01.664-05	\N
3	page	2017-11-20 15:45:30.869-05	2017-11-20 15:45:30.869-05	\N
4	admin_components	2017-11-21 10:32:36.618-05	2017-11-21 10:32:36.618-05	\N
\.


--
-- Data for Name: admin_settings; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY admin_settings (id, resource_id, name, created_at, updated_at, permision, display) FROM stdin;
\.


--
-- Data for Name: fields; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY fields (id, resource_id, field_set, name, type, created_at, updated_at, input_template) FROM stdin;
1	1	items	path	text	2017-11-20 12:08:49.182-05	2017-11-20 12:08:49.182-05	text
6	3	items	path	text	2017-11-20 15:52:20.59-05	2017-11-20 15:52:20.59-05	text
4	1	templates	css	text	2017-11-20 12:13:05.222-05	2017-11-20 12:13:05.222-05	css_wysiwyg
9	3	templates	css	text	2017-11-20 16:05:29.239-05	2017-11-20 16:05:29.239-05	css_wysiwyg
12	2	templates	css	text	2017-11-20 16:05:33.677-05	2017-11-20 16:05:33.677-05	css_wysiwyg
15	4	templates	css	text	2017-11-21 10:33:06.904-05	2017-11-21 10:33:06.904-05	css_wysiwyg
3	1	templates	html	text	2017-11-20 12:13:05.222-05	2017-11-20 12:13:05.222-05	html_wysiwyg
8	3	templates	html	text	2017-11-20 16:05:29.239-05	2017-11-20 16:05:29.239-05	html_wysiwyg
11	2	templates	html	text	2017-11-20 16:05:33.677-05	2017-11-20 16:05:33.677-05	html_wysiwyg
14	4	templates	html	text	2017-11-21 10:33:06.904-05	2017-11-21 10:33:06.904-05	html_wysiwyg
5	1	templates	js	text	2017-11-20 12:13:05.222-05	2017-11-20 12:13:05.222-05	js_wysiwyg
10	3	templates	js	text	2017-11-20 16:05:29.239-05	2017-11-20 16:05:29.239-05	js_wysiwyg
13	2	templates	js	text	2017-11-20 16:05:33.677-05	2017-11-20 16:05:33.677-05	js_wysiwyg
16	4	templates	js	text	2017-11-21 10:33:06.904-05	2017-11-21 10:33:06.904-05	js_wysiwyg
2	1	items	template	text	2017-11-20 12:08:49.182-05	2017-11-20 12:08:49.182-05	template_select
7	3	items	template	text	2017-11-20 15:52:20.59-05	2017-11-20 15:52:20.59-05	template_select
17	2	items	wysiwyg	text	2017-11-22 10:12:42.889-05	2017-11-22 10:12:42.889-05	html_wysiwyg\n
19	2	items	title	text	2017-11-22 12:57:44.21-05	2017-11-22 12:57:44.21-05	text
20	2	items	keywords	text	2017-11-22 12:59:40.131-05	2017-11-22 12:59:40.131-05	text
\.


--
-- Data for Name: versions; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY versions (id, field_set_id, field_set_table, major_version, minor_version, created_at, updated_at) FROM stdin;
1	1	items	0	1	2017-11-20 12:22:53.945-05	2017-11-20 12:22:53.945-05
2	1	templates	0	1	2017-11-20 12:28:44.927-05	2017-11-20 12:28:44.927-05
3	1	templates	0	2	2017-11-20 12:51:26.965-05	2017-11-20 12:51:26.965-05
4	2	templates	0	1	2017-11-20 12:52:38.565-05	2017-11-20 12:52:38.565-05
5	1	templates	0	3	2017-11-20 12:53:05.222-05	2017-11-20 12:53:05.222-05
6	2	templates	0	2	2017-11-20 12:53:05.241-05	2017-11-20 12:53:05.241-05
7	1	templates	0	4	2017-11-20 12:53:24.087-05	2017-11-20 12:53:24.087-05
8	2	templates	0	3	2017-11-20 12:53:24.114-05	2017-11-20 12:53:24.114-05
10	2	templates	0	4	2017-11-20 13:06:54.004-05	2017-11-20 13:06:54.004-05
12	2	templates	0	5	2017-11-20 13:07:38.623-05	2017-11-20 13:07:38.623-05
13	1	templates	0	5	2017-11-20 13:11:32.044-05	2017-11-20 13:11:32.044-05
14	2	templates	0	6	2017-11-20 13:11:32.069-05	2017-11-20 13:11:32.069-05
15	1	templates	0	6	2017-11-20 13:11:52.037-05	2017-11-20 13:11:52.037-05
16	2	templates	0	7	2017-11-20 13:11:52.057-05	2017-11-20 13:11:52.057-05
17	1	templates	0	7	2017-11-20 13:13:33.366-05	2017-11-20 13:13:33.366-05
18	2	templates	0	8	2017-11-20 13:13:33.394-05	2017-11-20 13:13:33.394-05
19	1	templates	0	8	2017-11-20 13:14:40.72-05	2017-11-20 13:14:40.72-05
20	2	templates	0	9	2017-11-20 13:14:40.743-05	2017-11-20 13:14:40.743-05
21	1	templates	0	9	2017-11-20 13:19:23.422-05	2017-11-20 13:19:23.422-05
22	2	templates	0	10	2017-11-20 13:19:23.466-05	2017-11-20 13:19:23.466-05
23	1	templates	0	10	2017-11-20 13:20:00.282-05	2017-11-20 13:20:00.282-05
24	2	templates	0	11	2017-11-20 13:20:00.321-05	2017-11-20 13:20:00.321-05
25	2	items	0	1	2017-11-20 13:21:46.258-05	2017-11-20 13:21:46.258-05
26	1	templates	0	11	2017-11-20 13:22:10.916-05	2017-11-20 13:22:10.916-05
27	2	templates	0	12	2017-11-20 13:22:10.935-05	2017-11-20 13:22:10.935-05
28	3	items	0	1	2017-11-20 13:22:52.516-05	2017-11-20 13:22:52.516-05
29	4	items	0	1	2017-11-20 13:43:22.572-05	2017-11-20 13:43:22.572-05
30	5	items	0	1	2017-11-20 13:43:26.867-05	2017-11-20 13:43:26.867-05
31	1	templates	0	12	2017-11-20 14:53:43.299-05	2017-11-20 14:53:43.299-05
32	1	templates	0	13	2017-11-20 14:54:18.337-05	2017-11-20 14:54:18.337-05
33	3	templates	0	1	2017-11-20 14:58:39.033-05	2017-11-20 14:58:39.033-05
34	4	templates	0	1	2017-11-20 15:01:32.275-05	2017-11-20 15:01:32.275-05
35	5	templates	0	1	2017-11-20 15:02:02.977-05	2017-11-20 15:02:02.977-05
36	3	templates	0	2	2017-11-20 15:02:06.204-05	2017-11-20 15:02:06.204-05
37	2	templates	0	13	2017-11-20 15:02:06.205-05	2017-11-20 15:02:06.205-05
38	1	templates	0	14	2017-11-20 15:02:06.209-05	2017-11-20 15:02:06.209-05
39	6	templates	0	1	2017-11-20 15:13:26.325-05	2017-11-20 15:13:26.325-05
40	2	templates	0	14	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
41	3	templates	0	3	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
42	1	templates	0	15	2017-11-20 15:13:26.472-05	2017-11-20 15:13:26.472-05
43	5	templates	0	2	2017-11-20 15:13:26.533-05	2017-11-20 15:13:26.533-05
44	4	templates	0	2	2017-11-20 15:13:26.534-05	2017-11-20 15:13:26.534-05
45	3	templates	0	4	2017-11-20 15:13:56.49-05	2017-11-20 15:13:56.49-05
46	2	templates	0	15	2017-11-20 15:14:46.581-05	2017-11-20 15:14:46.581-05
47	3	templates	0	5	2017-11-20 15:14:51.591-05	2017-11-20 15:14:51.591-05
48	3	templates	0	6	2017-11-20 15:15:01.622-05	2017-11-20 15:15:01.622-05
49	7	templates	0	1	2017-11-20 15:15:27.65-05	2017-11-20 15:15:27.65-05
50	3	templates	0	7	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
51	2	templates	0	16	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
52	1	templates	0	16	2017-11-20 15:15:31.684-05	2017-11-20 15:15:31.684-05
53	4	templates	0	3	2017-11-20 15:15:31.772-05	2017-11-20 15:15:31.772-05
54	5	templates	0	3	2017-11-20 15:15:31.77-05	2017-11-20 15:15:31.77-05
55	6	templates	0	2	2017-11-20 15:17:26.882-05	2017-11-20 15:17:26.882-05
56	6	templates	0	3	2017-11-20 15:18:01.946-05	2017-11-20 15:18:01.946-05
57	6	templates	0	4	2017-11-20 15:18:57.052-05	2017-11-20 15:18:57.052-05
58	6	templates	0	5	2017-11-20 15:19:22.095-05	2017-11-20 15:19:22.095-05
59	6	templates	0	6	2017-11-20 15:19:27.104-05	2017-11-20 15:19:27.104-05
60	6	templates	0	7	2017-11-20 15:19:32.115-05	2017-11-20 15:19:32.115-05
61	6	templates	0	8	2017-11-20 15:19:37.125-05	2017-11-20 15:19:37.125-05
62	3	templates	0	8	2017-11-20 15:21:47.437-05	2017-11-20 15:21:47.437-05
63	3	templates	0	9	2017-11-20 15:22:12.429-05	2017-11-20 15:22:12.429-05
64	3	templates	0	10	2017-11-20 15:23:17.544-05	2017-11-20 15:23:17.544-05
65	3	templates	0	11	2017-11-20 15:23:47.59-05	2017-11-20 15:23:47.59-05
66	3	templates	0	12	2017-11-20 15:24:07.631-05	2017-11-20 15:24:07.631-05
67	3	templates	0	13	2017-11-20 15:24:22.662-05	2017-11-20 15:24:22.662-05
68	3	templates	0	14	2017-11-20 15:25:32.809-05	2017-11-20 15:25:32.809-05
69	3	templates	0	15	2017-11-20 15:25:42.819-05	2017-11-20 15:25:42.819-05
70	3	templates	0	16	2017-11-20 15:26:02.852-05	2017-11-20 15:26:02.852-05
71	3	templates	0	17	2017-11-20 15:26:12.868-05	2017-11-20 15:26:12.868-05
72	3	templates	0	18	2017-11-20 15:29:03.205-05	2017-11-20 15:29:03.205-05
73	3	templates	0	19	2017-11-20 15:30:08.329-05	2017-11-20 15:30:08.329-05
74	3	templates	0	20	2017-11-20 15:30:48.4-05	2017-11-20 15:30:48.4-05
75	3	templates	0	21	2017-11-20 15:30:58.416-05	2017-11-20 15:30:58.416-05
76	3	templates	0	22	2017-11-20 15:31:18.454-05	2017-11-20 15:31:18.454-05
77	3	templates	0	23	2017-11-20 15:31:38.49-05	2017-11-20 15:31:38.49-05
78	3	templates	0	24	2017-11-20 15:31:43.499-05	2017-11-20 15:31:43.499-05
79	3	templates	0	25	2017-11-20 15:33:33.713-05	2017-11-20 15:33:33.713-05
80	1	templates	0	17	2017-11-20 15:38:04.22-05	2017-11-20 15:38:04.22-05
81	2	templates	0	17	2017-11-20 15:38:59.335-05	2017-11-20 15:38:59.335-05
82	2	templates	0	18	2017-11-20 15:39:49.435-05	2017-11-20 15:39:49.435-05
83	2	templates	0	19	2017-11-20 15:40:14.479-05	2017-11-20 15:40:14.479-05
84	3	templates	0	26	2017-11-20 15:40:24.5-05	2017-11-20 15:40:24.5-05
85	3	templates	0	27	2017-11-20 15:40:29.507-05	2017-11-20 15:40:29.507-05
86	2	templates	0	20	2017-11-20 15:40:59.569-05	2017-11-20 15:40:59.569-05
87	2	templates	0	21	2017-11-20 15:41:04.576-05	2017-11-20 15:41:04.576-05
88	2	templates	0	22	2017-11-20 15:41:09.582-05	2017-11-20 15:41:09.582-05
89	2	templates	0	23	2017-11-20 15:41:34.634-05	2017-11-20 15:41:34.634-05
90	6	templates	0	9	2017-11-20 15:42:34.749-05	2017-11-20 15:42:34.749-05
91	3	templates	0	28	2017-11-20 15:45:30.089-05	2017-11-20 15:45:30.089-05
92	3	templates	0	29	2017-11-20 16:12:43.178-05	2017-11-20 16:12:43.178-05
93	8	templates	0	1	2017-11-20 16:13:26.773-05	2017-11-20 16:13:26.773-05
94	1	templates	0	18	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
95	2	templates	0	24	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
96	6	templates	0	10	2017-11-20 16:13:28.283-05	2017-11-20 16:13:28.283-05
97	3	templates	0	30	2017-11-20 16:13:28.282-05	2017-11-20 16:13:28.282-05
98	2	templates	0	25	2017-11-20 16:13:38.296-05	2017-11-20 16:13:38.296-05
99	1	templates	0	19	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
100	6	templates	0	11	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
101	3	templates	0	31	2017-11-20 16:13:38.298-05	2017-11-20 16:13:38.298-05
102	8	templates	0	2	2017-11-20 16:15:23.489-05	2017-11-20 16:15:23.489-05
103	9	templates	0	1	2017-11-20 16:15:47.638-05	2017-11-20 16:15:47.638-05
104	1	templates	0	20	2017-11-20 16:15:48.543-05	2017-11-20 16:15:48.543-05
105	2	templates	0	26	2017-11-20 16:15:48.544-05	2017-11-20 16:15:48.544-05
106	6	templates	0	12	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
107	3	templates	0	32	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
108	8	templates	0	3	2017-11-20 16:15:48.553-05	2017-11-20 16:15:48.553-05
109	1	templates	0	21	2017-11-20 16:15:53.557-05	2017-11-20 16:15:53.557-05
113	8	templates	0	4	2017-11-20 16:15:53.561-05	2017-11-20 16:15:53.561-05
236	13	templates	0	29	2017-11-21 11:38:48.275-05	2017-11-21 11:38:48.275-05
237	13	templates	0	30	2017-11-21 11:39:08.312-05	2017-11-21 11:39:08.312-05
239	13	templates	0	32	2017-11-21 11:39:28.351-05	2017-11-21 11:39:28.351-05
241	13	templates	0	34	2017-11-21 11:40:03.425-05	2017-11-21 11:40:03.425-05
364	15	templates	0	15	2017-11-21 13:22:16.532-05	2017-11-21 13:22:16.532-05
475	6	templates	0	25	2017-11-21 16:23:48.974-05	2017-11-21 16:23:48.974-05
110	2	templates	0	27	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
238	13	templates	0	31	2017-11-21 11:39:18.334-05	2017-11-21 11:39:18.334-05
240	13	templates	0	33	2017-11-21 11:39:38.375-05	2017-11-21 11:39:38.375-05
365	11	items	0	1	2017-11-21 13:23:54.207-05	2017-11-21 13:23:54.207-05
366	13	templates	0	73	2017-11-21 13:24:21.76-05	2017-11-21 13:24:21.76-05
476	11	templates	0	12	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
112	3	templates	0	33	2017-11-20 16:15:53.56-05	2017-11-20 16:15:53.56-05
242	3	templates	0	51	2017-11-21 11:42:43.731-05	2017-11-21 11:42:43.731-05
243	3	templates	0	52	2017-11-21 11:42:58.753-05	2017-11-21 11:42:58.753-05
244	3	templates	0	53	2017-11-21 11:43:08.771-05	2017-11-21 11:43:08.771-05
367	15	templates	0	16	2017-11-21 13:25:06.84-05	2017-11-21 13:25:06.84-05
368	15	templates	0	17	2017-11-21 13:25:26.874-05	2017-11-21 13:25:26.874-05
369	15	templates	0	18	2017-11-21 13:25:41.897-05	2017-11-21 13:25:41.897-05
477	2	templates	0	43	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
482	14	templates	0	22	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
115	9	templates	0	3	2017-11-20 16:16:33.626-05	2017-11-20 16:16:33.626-05
245	3	templates	0	54	2017-11-21 11:43:53.863-05	2017-11-21 11:43:53.863-05
370	15	templates	0	19	2017-11-21 13:32:37.647-05	2017-11-21 13:32:37.647-05
372	15	templates	0	21	2017-11-21 13:33:12.702-05	2017-11-21 13:33:12.702-05
374	15	templates	0	23	2017-11-21 13:33:32.742-05	2017-11-21 13:33:32.742-05
376	15	templates	0	25	2017-11-21 13:34:07.807-05	2017-11-21 13:34:07.807-05
478	9	templates	0	35	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
116	9	templates	0	4	2017-11-20 16:16:38.63-05	2017-11-20 16:16:38.63-05
117	9	templates	0	5	2017-11-20 16:16:43.64-05	2017-11-20 16:16:43.64-05
118	9	templates	0	6	2017-11-20 16:17:03.68-05	2017-11-20 16:17:03.68-05
246	3	templates	0	55	2017-11-21 11:45:39.06-05	2017-11-21 11:45:39.06-05
371	15	templates	0	20	2017-11-21 13:32:52.67-05	2017-11-21 13:32:52.67-05
373	15	templates	0	22	2017-11-21 13:33:22.72-05	2017-11-21 13:33:22.72-05
375	15	templates	0	24	2017-11-21 13:33:52.781-05	2017-11-21 13:33:52.781-05
377	15	templates	0	26	2017-11-21 13:34:32.86-05	2017-11-21 13:34:32.86-05
479	1	templates	0	36	2017-11-21 16:23:48.98-05	2017-11-21 16:23:48.98-05
119	9	templates	0	7	2017-11-20 16:18:19.197-05	2017-11-20 16:18:19.197-05
247	3	templates	0	56	2017-11-21 11:46:44.197-05	2017-11-21 11:46:44.197-05
248	3	templates	0	57	2017-11-21 11:46:59.218-05	2017-11-21 11:46:59.218-05
250	3	templates	0	59	2017-11-21 11:47:24.26-05	2017-11-21 11:47:24.26-05
251	3	templates	0	60	2017-11-21 11:47:44.316-05	2017-11-21 11:47:44.316-05
253	3	templates	0	62	2017-11-21 11:48:09.335-05	2017-11-21 11:48:09.335-05
255	3	templates	0	64	2017-11-21 11:48:44.4-05	2017-11-21 11:48:44.4-05
378	15	templates	0	27	2017-11-21 13:44:43.976-05	2017-11-21 13:44:43.976-05
379	15	templates	0	28	2017-11-21 13:44:58.995-05	2017-11-21 13:44:58.995-05
485	15	templates	0	56	2017-11-21 16:24:49.063-05	2017-11-21 16:24:49.063-05
486	15	templates	0	57	2017-11-21 16:24:54.068-05	2017-11-21 16:24:54.068-05
487	15	templates	0	58	2017-11-21 16:25:39.158-05	2017-11-21 16:25:39.158-05
489	18	templates	0	11	2017-11-21 16:26:09.195-05	2017-11-21 16:26:09.195-05
120	9	templates	0	8	2017-11-20 16:21:19.539-05	2017-11-20 16:21:19.539-05
249	3	templates	0	58	2017-11-21 11:47:14.246-05	2017-11-21 11:47:14.246-05
252	3	templates	0	61	2017-11-21 11:47:49.302-05	2017-11-21 11:47:49.302-05
254	3	templates	0	63	2017-11-21 11:48:19.353-05	2017-11-21 11:48:19.353-05
256	3	templates	0	65	2017-11-21 11:48:59.422-05	2017-11-21 11:48:59.422-05
257	3	templates	0	66	2017-11-21 11:49:14.459-05	2017-11-21 11:49:14.459-05
380	15	templates	0	29	2017-11-21 13:45:59.137-05	2017-11-21 13:45:59.137-05
488	18	templates	0	10	2017-11-21 16:26:04.192-05	2017-11-21 16:26:04.192-05
121	9	templates	0	9	2017-11-20 16:22:44.704-05	2017-11-20 16:22:44.704-05
258	3	templates	0	67	2017-11-21 11:49:59.55-05	2017-11-21 11:49:59.55-05
259	3	templates	0	68	2017-11-21 11:50:19.581-05	2017-11-21 11:50:19.581-05
381	15	templates	0	30	2017-11-21 14:32:54.815-05	2017-11-21 14:32:54.815-05
382	15	templates	0	31	2017-11-21 14:32:59.821-05	2017-11-21 14:32:59.821-05
383	15	templates	0	32	2017-11-21 14:33:29.878-05	2017-11-21 14:33:29.878-05
490	17	templates	0	13	2017-11-21 16:27:04.301-05	2017-11-21 16:27:04.301-05
122	9	templates	0	10	2017-11-20 16:25:30.014-05	2017-11-20 16:25:30.014-05
260	3	templates	0	69	2017-11-21 11:52:59.887-05	2017-11-21 11:52:59.887-05
384	15	templates	0	33	2017-11-21 14:50:06.757-05	2017-11-21 14:50:06.757-05
491	17	templates	0	14	2017-11-21 16:27:19.327-05	2017-11-21 16:27:19.327-05
123	9	templates	0	11	2017-11-20 16:26:55.174-05	2017-11-20 16:26:55.174-05
124	6	items	0	1	2017-11-20 16:26:59.228-05	2017-11-20 16:26:59.228-05
125	9	templates	0	12	2017-11-20 16:27:00.181-05	2017-11-20 16:27:00.181-05
261	3	templates	0	70	2017-11-21 11:53:09.908-05	2017-11-21 11:53:09.908-05
385	16	templates	0	1	2017-11-21 14:50:59.867-05	2017-11-21 14:50:59.867-05
386	6	templates	0	22	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
391	10	templates	0	6	2017-11-21 14:51:01.904-05	2017-11-21 14:51:01.904-05
397	16	templates	0	2	2017-11-21 14:51:21.925-05	2017-11-21 14:51:21.925-05
398	16	templates	0	3	2017-11-21 14:51:31.945-05	2017-11-21 14:51:31.945-05
399	17	templates	0	1	2017-11-21 14:51:35.814-05	2017-11-21 14:51:35.814-05
400	12	templates	0	15	2017-11-21 14:51:36.947-05	2017-11-21 14:51:36.947-05
402	10	templates	0	7	2017-11-21 14:51:36.966-05	2017-11-21 14:51:36.966-05
411	16	templates	0	4	2017-11-21 14:51:36.981-05	2017-11-21 14:51:36.981-05
492	17	templates	0	15	2017-11-21 16:27:59.407-05	2017-11-21 16:27:59.407-05
493	17	templates	0	16	2017-11-21 16:28:04.413-05	2017-11-21 16:28:04.413-05
494	17	templates	0	17	2017-11-21 16:28:29.458-05	2017-11-21 16:28:29.458-05
495	17	templates	0	18	2017-11-21 16:28:39.472-05	2017-11-21 16:28:39.472-05
114	9	templates	0	2	2017-11-20 16:15:53.567-05	2017-11-20 16:15:53.567-05
126	3	templates	0	34	2017-11-20 16:27:35.262-05	2017-11-20 16:27:35.262-05
262	3	templates	0	71	2017-11-21 11:55:35.19-05	2017-11-21 11:55:35.19-05
387	12	templates	0	14	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
395	11	templates	0	9	2017-11-21 14:51:01.911-05	2017-11-21 14:51:01.911-05
496	17	templates	0	19	2017-11-21 16:28:59.509-05	2017-11-21 16:28:59.509-05
127	6	items	0	2	2017-11-20 16:28:44.493-05	2017-11-20 16:28:44.493-05
128	3	templates	0	35	2017-11-20 16:29:10.437-05	2017-11-20 16:29:10.437-05
263	3	templates	0	72	2017-11-21 11:57:20.38-05	2017-11-21 11:57:20.38-05
388	9	templates	0	32	2017-11-21 14:51:01.893-05	2017-11-21 14:51:01.893-05
497	17	templates	0	20	2017-11-21 16:29:49.591-05	2017-11-21 16:29:49.591-05
498	17	templates	0	21	2017-11-21 16:30:04.612-05	2017-11-21 16:30:04.612-05
500	17	templates	0	23	2017-11-21 16:30:39.677-05	2017-11-21 16:30:39.677-05
129	9	templates	0	13	2017-11-20 16:33:30.936-05	2017-11-20 16:33:30.936-05
130	6	items	0	3	2017-11-20 16:33:45.64-05	2017-11-20 16:33:45.64-05
131	9	templates	0	14	2017-11-20 16:34:11.011-05	2017-11-20 16:34:11.011-05
132	9	templates	0	15	2017-11-20 16:34:26.038-05	2017-11-20 16:34:26.038-05
133	9	templates	0	16	2017-11-20 16:34:46.076-05	2017-11-20 16:34:46.076-05
264	3	templates	0	73	2017-11-21 11:57:25.389-05	2017-11-21 11:57:25.389-05
389	3	templates	0	82	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
499	17	templates	0	22	2017-11-21 16:30:14.632-05	2017-11-21 16:30:14.632-05
134	6	items	0	4	2017-11-20 16:35:38.51-05	2017-11-20 16:35:38.51-05
265	3	templates	0	74	2017-11-21 11:58:45.553-05	2017-11-21 11:58:45.553-05
266	3	templates	0	75	2017-11-21 11:58:55.567-05	2017-11-21 11:58:55.567-05
267	3	templates	0	76	2017-11-21 11:59:05.587-05	2017-11-21 11:59:05.587-05
268	13	templates	0	35	2017-11-21 11:59:35.644-05	2017-11-21 11:59:35.644-05
269	13	templates	0	36	2017-11-21 11:59:55.677-05	2017-11-21 11:59:55.677-05
270	13	templates	0	37	2017-11-21 12:00:05.692-05	2017-11-21 12:00:05.692-05
271	13	templates	0	38	2017-11-21 12:00:10.705-05	2017-11-21 12:00:10.705-05
272	13	templates	0	39	2017-11-21 12:00:20.719-05	2017-11-21 12:00:20.719-05
273	13	templates	0	40	2017-11-21 12:00:40.758-05	2017-11-21 12:00:40.758-05
274	13	templates	0	41	2017-11-21 12:00:45.77-05	2017-11-21 12:00:45.77-05
275	13	templates	0	42	2017-11-21 12:01:05.801-05	2017-11-21 12:01:05.801-05
276	13	templates	0	43	2017-11-21 12:01:20.833-05	2017-11-21 12:01:20.833-05
277	13	templates	0	44	2017-11-21 12:01:30.849-05	2017-11-21 12:01:30.849-05
390	2	templates	0	40	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
501	15	templates	0	59	2017-11-21 16:31:34.777-05	2017-11-21 16:31:34.777-05
135	7	items	0	1	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
136	10	templates	0	1	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
137	2	templates	0	28	2017-11-20 16:37:51.444-05	2017-11-20 16:37:51.444-05
138	3	templates	0	36	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
278	13	templates	0	45	2017-11-21 12:01:45.878-05	2017-11-21 12:01:45.878-05
279	13	templates	0	46	2017-11-21 12:02:30.961-05	2017-11-21 12:02:30.961-05
392	14	templates	0	19	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
502	15	templates	0	60	2017-11-21 16:32:09.841-05	2017-11-21 16:32:09.841-05
139	6	templates	0	14	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
280	13	templates	0	47	2017-11-21 12:03:26.059-05	2017-11-21 12:03:26.059-05
393	15	templates	0	34	2017-11-21 14:51:01.895-05	2017-11-21 14:51:01.895-05
503	15	templates	0	61	2017-11-21 16:34:10.102-05	2017-11-21 16:34:10.102-05
140	9	templates	0	17	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
281	13	templates	0	48	2017-11-21 12:05:16.268-05	2017-11-21 12:05:16.268-05
282	13	templates	0	49	2017-11-21 12:05:46.325-05	2017-11-21 12:05:46.325-05
283	13	templates	0	50	2017-11-21 12:06:11.367-05	2017-11-21 12:06:11.367-05
394	1	templates	0	33	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
504	15	templates	0	62	2017-11-21 16:35:10.195-05	2017-11-21 16:35:10.195-05
505	15	templates	0	63	2017-11-21 16:35:40.238-05	2017-11-21 16:35:40.238-05
141	8	templates	0	5	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
284	13	templates	0	51	2017-11-21 12:07:16.481-05	2017-11-21 12:07:16.481-05
396	13	templates	0	74	2017-11-21 14:51:01.897-05	2017-11-21 14:51:01.897-05
506	15	templates	0	64	2017-11-21 16:36:15.302-05	2017-11-21 16:36:15.302-05
507	15	templates	0	65	2017-11-21 16:36:20.312-05	2017-11-21 16:36:20.312-05
508	15	templates	0	66	2017-11-21 16:36:35.331-05	2017-11-21 16:36:35.331-05
142	1	templates	0	22	2017-11-20 16:37:51.454-05	2017-11-20 16:37:51.454-05
285	13	templates	0	52	2017-11-21 12:09:16.709-05	2017-11-21 12:09:16.709-05
401	6	templates	0	23	2017-11-21 14:51:36.946-05	2017-11-21 14:51:36.946-05
409	11	templates	0	10	2017-11-21 14:51:36.975-05	2017-11-21 14:51:36.975-05
509	15	templates	0	67	2017-11-21 16:38:00.493-05	2017-11-21 16:38:00.493-05
143	11	templates	0	1	2017-11-20 16:38:09.974-05	2017-11-20 16:38:09.974-05
144	8	templates	0	6	2017-11-20 16:38:36.536-05	2017-11-20 16:38:36.536-05
150	2	templates	0	30	2017-11-20 16:38:56.562-05	2017-11-20 16:38:56.562-05
152	11	templates	0	3	2017-11-20 16:39:11.599-05	2017-11-20 16:39:11.599-05
286	13	templates	0	53	2017-11-21 12:09:46.764-05	2017-11-21 12:09:46.764-05
403	9	templates	0	33	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
412	16	templates	0	5	2017-11-21 14:51:41.96-05	2017-11-21 14:51:41.96-05
510	15	templates	0	68	2017-11-21 16:38:55.599-05	2017-11-21 16:38:55.599-05
512	15	templates	0	70	2017-11-21 16:39:20.642-05	2017-11-21 16:39:20.642-05
145	2	templates	0	29	2017-11-20 16:38:36.543-05	2017-11-20 16:38:36.543-05
151	11	templates	0	2	2017-11-20 16:39:01.58-05	2017-11-20 16:39:01.58-05
153	11	templates	0	4	2017-11-20 16:39:26.62-05	2017-11-20 16:39:26.62-05
154	9	templates	0	19	2017-11-20 16:40:01.688-05	2017-11-20 16:40:01.688-05
155	9	templates	0	20	2017-11-20 16:40:16.713-05	2017-11-20 16:40:16.713-05
287	13	templates	0	54	2017-11-21 12:12:12.044-05	2017-11-21 12:12:12.044-05
404	1	templates	0	34	2017-11-21 14:51:36.961-05	2017-11-21 14:51:36.961-05
511	15	templates	0	69	2017-11-21 16:39:15.634-05	2017-11-21 16:39:15.634-05
513	15	templates	0	71	2017-11-21 16:39:35.669-05	2017-11-21 16:39:35.669-05
146	3	templates	0	37	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
288	13	templates	0	55	2017-11-21 12:13:02.144-05	2017-11-21 12:13:02.144-05
405	3	templates	0	83	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
514	15	templates	0	72	2017-11-21 16:40:40.788-05	2017-11-21 16:40:40.788-05
516	15	templates	0	74	2017-11-21 16:41:20.856-05	2017-11-21 16:41:20.856-05
147	9	templates	0	18	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
289	13	templates	0	56	2017-11-21 12:13:07.153-05	2017-11-21 12:13:07.153-05
290	13	templates	0	57	2017-11-21 12:13:22.179-05	2017-11-21 12:13:22.179-05
406	2	templates	0	41	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
515	15	templates	0	73	2017-11-21 16:41:00.818-05	2017-11-21 16:41:00.818-05
148	6	templates	0	15	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
291	13	templates	0	58	2017-11-21 12:14:22.292-05	2017-11-21 12:14:22.292-05
407	15	templates	0	35	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
517	15	templates	0	75	2017-11-21 16:42:20.992-05	2017-11-21 16:42:20.992-05
149	1	templates	0	23	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
292	13	templates	0	59	2017-11-21 12:14:57.361-05	2017-11-21 12:14:57.361-05
408	14	templates	0	20	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
518	12	items	0	1	2017-11-21 16:43:45.801-05	2017-11-21 16:43:45.801-05
156	9	templates	0	21	2017-11-20 16:43:17.084-05	2017-11-20 16:43:17.084-05
157	9	templates	0	22	2017-11-20 16:43:37.111-05	2017-11-20 16:43:37.111-05
158	9	templates	0	23	2017-11-20 16:43:42.119-05	2017-11-20 16:43:42.119-05
159	9	templates	0	24	2017-11-20 16:44:02.153-05	2017-11-20 16:44:02.153-05
160	9	templates	0	25	2017-11-20 16:44:12.169-05	2017-11-20 16:44:12.169-05
293	13	templates	0	60	2017-11-21 12:15:37.438-05	2017-11-21 12:15:37.438-05
294	13	templates	0	61	2017-11-21 12:15:57.474-05	2017-11-21 12:15:57.474-05
410	13	templates	0	75	2017-11-21 14:51:36.963-05	2017-11-21 14:51:36.963-05
519	15	templates	0	76	2017-11-21 16:46:46.461-05	2017-11-21 16:46:46.461-05
520	15	templates	0	77	2017-11-21 16:47:11.501-05	2017-11-21 16:47:11.501-05
522	15	templates	0	79	2017-11-21 16:48:11.623-05	2017-11-21 16:48:11.623-05
523	15	templates	0	80	2017-11-21 16:48:31.694-05	2017-11-21 16:48:31.694-05
161	12	templates	0	1	2017-11-21 10:33:53.859-05	2017-11-21 10:33:53.859-05
295	13	templates	0	62	2017-11-21 12:18:52.81-05	2017-11-21 12:18:52.81-05
413	16	templates	0	6	2017-11-21 14:51:56.994-05	2017-11-21 14:51:56.994-05
521	15	templates	0	78	2017-11-21 16:47:41.559-05	2017-11-21 16:47:41.559-05
524	13	items	0	1	2017-11-21 16:48:47.902-05	2017-11-21 16:48:47.902-05
525	14	items	0	1	2017-11-21 16:49:29.963-05	2017-11-21 16:49:29.963-05
162	3	templates	0	38	2017-11-21 10:42:12.284-05	2017-11-21 10:42:12.284-05
163	3	templates	0	39	2017-11-21 10:42:32.26-05	2017-11-21 10:42:32.26-05
164	3	templates	0	40	2017-11-21 10:42:37.265-05	2017-11-21 10:42:37.265-05
165	3	templates	0	41	2017-11-21 10:43:02.306-05	2017-11-21 10:43:02.306-05
166	6	templates	0	16	2017-11-21 10:43:12.334-05	2017-11-21 10:43:12.334-05
296	13	templates	0	63	2017-11-21 12:19:27.876-05	2017-11-21 12:19:27.876-05
414	15	templates	0	36	2017-11-21 15:06:23.585-05	2017-11-21 15:06:23.585-05
526	15	items	0	1	2017-11-22 12:40:03.247-05	2017-11-22 12:40:03.247-05
527	16	items	0	1	2017-11-22 12:40:06.821-05	2017-11-22 12:40:06.821-05
167	2	templates	0	31	2017-11-21 10:46:42.73-05	2017-11-21 10:46:42.73-05
168	2	templates	0	32	2017-11-21 10:46:47.73-05	2017-11-21 10:46:47.73-05
169	2	templates	0	33	2017-11-21 10:47:02.758-05	2017-11-21 10:47:02.758-05
297	3	templates	0	77	2017-11-21 12:29:44.058-05	2017-11-21 12:29:44.058-05
415	16	templates	0	7	2017-11-21 15:16:44.735-05	2017-11-21 15:16:44.735-05
528	17	items	0	1	2017-11-25 09:35:43.043-05	2017-11-25 09:35:43.043-05
170	2	templates	0	34	2017-11-21 10:47:37.828-05	2017-11-21 10:47:37.828-05
298	3	templates	0	78	2017-11-21 12:30:19.124-05	2017-11-21 12:30:19.124-05
416	16	templates	0	8	2017-11-21 15:17:44.845-05	2017-11-21 15:17:44.845-05
418	15	templates	0	37	2017-11-21 15:18:34.928-05	2017-11-21 15:18:34.928-05
171	3	templates	0	42	2017-11-21 10:48:12.898-05	2017-11-21 10:48:12.898-05
299	14	templates	0	1	2017-11-21 12:31:27.528-05	2017-11-21 12:31:27.528-05
300	10	templates	0	3	2017-11-21 12:31:29.273-05	2017-11-21 12:31:29.273-05
309	14	templates	0	2	2017-11-21 12:31:49.32-05	2017-11-21 12:31:49.32-05
310	14	templates	0	3	2017-11-21 12:32:04.353-05	2017-11-21 12:32:04.353-05
311	14	templates	0	4	2017-11-21 12:32:19.382-05	2017-11-21 12:32:19.382-05
417	17	templates	0	2	2017-11-21 15:17:59.878-05	2017-11-21 15:17:59.878-05
172	9	templates	0	26	2017-11-21 10:52:03.345-05	2017-11-21 10:52:03.345-05
301	9	templates	0	28	2017-11-21 12:31:29.275-05	2017-11-21 12:31:29.275-05
419	15	templates	0	38	2017-11-21 15:19:20.05-05	2017-11-21 15:19:20.05-05
173	1	templates	0	24	2017-11-21 10:55:38.766-05	2017-11-21 10:55:38.766-05
302	6	templates	0	19	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
420	17	templates	0	3	2017-11-21 15:21:30.251-05	2017-11-21 15:21:30.251-05
421	16	templates	0	9	2017-11-21 15:21:50.298-05	2017-11-21 15:21:50.298-05
174	2	templates	0	35	2017-11-21 10:57:08.925-05	2017-11-21 10:57:08.925-05
303	1	templates	0	30	2017-11-21 12:31:29.285-05	2017-11-21 12:31:29.285-05
422	15	templates	0	39	2017-11-21 15:23:15.47-05	2017-11-21 15:23:15.47-05
175	3	templates	0	43	2017-11-21 11:00:39.33-05	2017-11-21 11:00:39.33-05
304	13	templates	0	64	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
423	15	templates	0	40	2017-11-21 15:23:55.546-05	2017-11-21 15:23:55.546-05
424	15	templates	0	41	2017-11-21 15:24:25.599-05	2017-11-21 15:24:25.599-05
176	6	templates	0	17	2017-11-21 11:05:29.864-05	2017-11-21 11:05:29.864-05
177	1	templates	0	25	2017-11-21 11:06:19.955-05	2017-11-21 11:06:19.955-05
306	12	templates	0	12	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
425	15	templates	0	42	2017-11-21 15:26:05.777-05	2017-11-21 15:26:05.777-05
427	15	templates	0	44	2017-11-21 15:26:45.856-05	2017-11-21 15:26:45.856-05
430	9	templates	0	34	2017-11-21 15:26:50.898-05	2017-11-21 15:26:50.898-05
438	14	templates	0	21	2017-11-21 15:26:50.923-05	2017-11-21 15:26:50.923-05
178	1	templates	0	26	2017-11-21 11:06:34.986-05	2017-11-21 11:06:34.986-05
179	8	items	0	1	2017-11-21 11:06:59.595-05	2017-11-21 11:06:59.595-05
180	9	items	0	1	2017-11-21 11:07:00.214-05	2017-11-21 11:07:00.214-05
307	3	templates	0	79	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
426	15	templates	0	43	2017-11-21 15:26:30.831-05	2017-11-21 15:26:30.831-05
428	18	templates	0	1	2017-11-21 15:26:50.555-05	2017-11-21 15:26:50.555-05
429	3	templates	0	84	2017-11-21 15:26:50.896-05	2017-11-21 15:26:50.896-05
439	12	templates	0	16	2017-11-21 15:26:50.924-05	2017-11-21 15:26:50.924-05
181	3	templates	0	44	2017-11-21 11:10:40.461-05	2017-11-21 11:10:40.461-05
305	11	templates	0	6	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
431	1	templates	0	35	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
182	12	templates	0	2	2017-11-21 11:14:05.847-05	2017-11-21 11:14:05.847-05
308	2	templates	0	37	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
432	11	templates	0	11	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
440	15	templates	0	45	2017-11-21 15:26:50.929-05	2017-11-21 15:26:50.929-05
183	12	templates	0	3	2017-11-21 11:15:15.996-05	2017-11-21 11:15:15.996-05
184	3	templates	0	45	2017-11-21 11:15:41.015-05	2017-11-21 11:15:41.015-05
185	3	templates	0	46	2017-11-21 11:16:01.054-05	2017-11-21 11:16:01.054-05
312	14	templates	0	5	2017-11-21 12:34:09.597-05	2017-11-21 12:34:09.597-05
433	10	templates	0	8	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
186	12	templates	0	4	2017-11-21 11:16:01.061-05	2017-11-21 11:16:01.061-05
313	13	templates	0	65	2017-11-21 12:35:09.67-05	2017-11-21 12:35:09.67-05
314	13	templates	0	66	2017-11-21 12:35:14.678-05	2017-11-21 12:35:14.678-05
316	13	templates	0	68	2017-11-21 12:35:29.709-05	2017-11-21 12:35:29.709-05
434	6	templates	0	24	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
187	12	templates	0	5	2017-11-21 11:16:41.125-05	2017-11-21 11:16:41.125-05
188	12	templates	0	6	2017-11-21 11:17:06.169-05	2017-11-21 11:17:06.169-05
189	12	templates	0	7	2017-11-21 11:17:26.204-05	2017-11-21 11:17:26.204-05
190	12	templates	0	8	2017-11-21 11:17:40.783-05	2017-11-21 11:17:40.783-05
191	3	templates	0	47	2017-11-21 11:17:55.81-05	2017-11-21 11:17:55.81-05
192	1	templates	0	27	2017-11-21 11:18:05.826-05	2017-11-21 11:18:05.826-05
193	1	templates	0	28	2017-11-21 11:18:15.839-05	2017-11-21 11:18:15.839-05
315	13	templates	0	67	2017-11-21 12:35:24.699-05	2017-11-21 12:35:24.699-05
435	13	templates	0	76	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
194	12	templates	0	9	2017-11-21 11:19:40.991-05	2017-11-21 11:19:40.991-05
195	12	templates	0	10	2017-11-21 11:19:51.01-05	2017-11-21 11:19:51.01-05
317	14	templates	0	6	2017-11-21 12:36:14.841-05	2017-11-21 12:36:14.841-05
318	14	templates	0	7	2017-11-21 12:36:24.856-05	2017-11-21 12:36:24.856-05
319	9	templates	0	29	2017-11-21 12:36:39.831-05	2017-11-21 12:36:39.831-05
320	13	templates	0	69	2017-11-21 12:36:54.861-05	2017-11-21 12:36:54.861-05
321	14	templates	0	8	2017-11-21 12:37:04.931-05	2017-11-21 12:37:04.931-05
436	16	templates	0	10	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
441	17	templates	0	4	2017-11-21 15:26:50.931-05	2017-11-21 15:26:50.931-05
196	8	templates	0	7	2017-11-21 11:23:46.547-05	2017-11-21 11:23:46.547-05
322	14	templates	0	9	2017-11-21 12:38:10.057-05	2017-11-21 12:38:10.057-05
437	2	templates	0	42	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
197	13	templates	0	1	2017-11-21 11:24:59.74-05	2017-11-21 11:24:59.74-05
198	11	templates	0	5	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
206	13	templates	0	2	2017-11-21 11:25:26.767-05	2017-11-21 11:25:26.767-05
323	14	templates	0	10	2017-11-21 12:41:40.403-05	2017-11-21 12:41:40.403-05
324	14	templates	0	11	2017-11-21 12:41:45.402-05	2017-11-21 12:41:45.402-05
325	13	templates	0	70	2017-11-21 12:41:50.414-05	2017-11-21 12:41:50.414-05
442	15	templates	0	46	2017-11-21 15:27:45.983-05	2017-11-21 15:27:45.983-05
443	15	templates	0	47	2017-11-21 15:28:11.008-05	2017-11-21 15:28:11.008-05
445	17	templates	0	5	2017-11-21 15:28:36.053-05	2017-11-21 15:28:36.053-05
447	18	templates	0	3	2017-11-21 15:28:46.074-05	2017-11-21 15:28:46.074-05
199	9	templates	0	27	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
326	14	templates	0	12	2017-11-21 12:44:45.75-05	2017-11-21 12:44:45.75-05
444	15	templates	0	48	2017-11-21 15:28:21.026-05	2017-11-21 15:28:21.026-05
446	18	templates	0	2	2017-11-21 15:28:36.059-05	2017-11-21 15:28:36.059-05
448	18	templates	0	4	2017-11-21 15:29:16.124-05	2017-11-21 15:29:16.124-05
200	6	templates	0	18	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
327	14	templates	0	13	2017-11-21 12:45:05.785-05	2017-11-21 12:45:05.785-05
328	14	templates	0	14	2017-11-21 12:45:15.808-05	2017-11-21 12:45:15.808-05
449	15	templates	0	49	2017-11-21 15:29:36.159-05	2017-11-21 15:29:36.159-05
450	15	templates	0	50	2017-11-21 15:30:06.215-05	2017-11-21 15:30:06.215-05
452	15	templates	0	52	2017-11-21 15:30:31.26-05	2017-11-21 15:30:31.26-05
201	1	templates	0	29	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
329	15	templates	0	1	2017-11-21 13:03:17.091-05	2017-11-21 13:03:17.091-05
330	9	templates	0	30	2017-11-21 13:03:19.458-05	2017-11-21 13:03:19.458-05
339	14	templates	0	16	2017-11-21 13:03:34.471-05	2017-11-21 13:03:34.471-05
344	10	templates	0	5	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
350	12	templates	0	13	2017-11-21 13:03:49.54-05	2017-11-21 13:03:49.54-05
451	15	templates	0	51	2017-11-21 15:30:26.252-05	2017-11-21 15:30:26.252-05
202	2	templates	0	36	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
331	1	templates	0	31	2017-11-21 13:03:19.459-05	2017-11-21 13:03:19.459-05
340	14	templates	0	17	2017-11-21 13:03:39.48-05	2017-11-21 13:03:39.48-05
345	3	templates	0	81	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
453	16	templates	0	11	2017-11-21 15:31:41.383-05	2017-11-21 15:31:41.383-05
203	10	templates	0	2	2017-11-21 11:25:01.717-05	2017-11-21 11:25:01.717-05
332	10	templates	0	4	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
346	6	templates	0	21	2017-11-21 13:03:49.524-05	2017-11-21 13:03:49.524-05
454	17	templates	0	6	2017-11-21 15:32:21.456-05	2017-11-21 15:32:21.456-05
204	12	templates	0	11	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
333	3	templates	0	80	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
342	9	templates	0	31	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
455	17	templates	0	7	2017-11-21 15:32:56.516-05	2017-11-21 15:32:56.516-05
205	3	templates	0	48	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
334	2	templates	0	38	2017-11-21 13:03:19.467-05	2017-11-21 13:03:19.467-05
341	1	templates	0	32	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
456	17	templates	0	8	2017-11-21 15:33:01.525-05	2017-11-21 15:33:01.525-05
207	13	templates	0	3	2017-11-21 11:26:51.936-05	2017-11-21 11:26:51.936-05
208	13	templates	0	4	2017-11-21 11:27:21.999-05	2017-11-21 11:27:21.999-05
209	13	templates	0	5	2017-11-21 11:27:27.005-05	2017-11-21 11:27:27.005-05
210	3	templates	0	49	2017-11-21 11:27:42.005-05	2017-11-21 11:27:42.005-05
211	3	templates	0	50	2017-11-21 11:27:47.015-05	2017-11-21 11:27:47.015-05
212	13	templates	0	6	2017-11-21 11:28:12.09-05	2017-11-21 11:28:12.09-05
335	11	templates	0	7	2017-11-21 13:03:19.469-05	2017-11-21 13:03:19.469-05
349	14	templates	0	18	2017-11-21 13:03:49.533-05	2017-11-21 13:03:49.533-05
457	16	templates	0	12	2017-11-21 16:12:17.244-05	2017-11-21 16:12:17.244-05
458	16	templates	0	13	2017-11-21 16:12:27.23-05	2017-11-21 16:12:27.23-05
213	10	items	0	1	2017-11-21 11:28:45.421-05	2017-11-21 11:28:45.421-05
214	13	templates	0	7	2017-11-21 11:28:57.177-05	2017-11-21 11:28:57.177-05
215	13	templates	0	8	2017-11-21 11:29:27.227-05	2017-11-21 11:29:27.227-05
216	13	templates	0	9	2017-11-21 11:29:32.237-05	2017-11-21 11:29:32.237-05
217	13	templates	0	10	2017-11-21 11:30:07.296-05	2017-11-21 11:30:07.296-05
336	6	templates	0	20	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
348	13	templates	0	72	2017-11-21 13:03:49.526-05	2017-11-21 13:03:49.526-05
459	17	templates	0	9	2017-11-21 16:15:47.6-05	2017-11-21 16:15:47.6-05
460	16	templates	0	14	2017-11-21 16:16:02.628-05	2017-11-21 16:16:02.628-05
461	16	templates	0	15	2017-11-21 16:16:22.662-05	2017-11-21 16:16:22.662-05
218	13	templates	0	11	2017-11-21 11:30:12.306-05	2017-11-21 11:30:12.306-05
337	14	templates	0	15	2017-11-21 13:03:19.47-05	2017-11-21 13:03:19.47-05
347	11	templates	0	8	2017-11-21 13:03:49.525-05	2017-11-21 13:03:49.525-05
462	18	templates	0	5	2017-11-21 16:17:12.763-05	2017-11-21 16:17:12.763-05
219	13	templates	0	12	2017-11-21 11:31:12.414-05	2017-11-21 11:31:12.414-05
220	13	templates	0	13	2017-11-21 11:31:22.433-05	2017-11-21 11:31:22.433-05
221	13	templates	0	14	2017-11-21 11:31:32.444-05	2017-11-21 11:31:32.444-05
223	13	templates	0	16	2017-11-21 11:32:02.505-05	2017-11-21 11:32:02.505-05
338	13	templates	0	71	2017-11-21 13:03:19.471-05	2017-11-21 13:03:19.471-05
343	2	templates	0	39	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
463	15	templates	0	53	2017-11-21 16:18:22.899-05	2017-11-21 16:18:22.899-05
464	15	templates	0	54	2017-11-21 16:18:27.905-05	2017-11-21 16:18:27.905-05
222	13	templates	0	15	2017-11-21 11:31:47.473-05	2017-11-21 11:31:47.473-05
224	13	templates	0	17	2017-11-21 11:32:07.514-05	2017-11-21 11:32:07.514-05
225	13	templates	0	18	2017-11-21 11:32:12.526-05	2017-11-21 11:32:12.526-05
351	15	templates	0	2	2017-11-21 13:13:20.544-05	2017-11-21 13:13:20.544-05
465	18	templates	0	6	2017-11-21 16:21:13.21-05	2017-11-21 16:21:13.21-05
466	18	templates	0	7	2017-11-21 16:21:33.244-05	2017-11-21 16:21:33.244-05
467	18	templates	0	8	2017-11-21 16:21:38.25-05	2017-11-21 16:21:38.25-05
468	17	templates	0	10	2017-11-21 16:21:48.268-05	2017-11-21 16:21:48.268-05
469	17	templates	0	11	2017-11-21 16:22:08.306-05	2017-11-21 16:22:08.306-05
226	13	templates	0	19	2017-11-21 11:33:42.697-05	2017-11-21 11:33:42.697-05
227	13	templates	0	20	2017-11-21 11:33:52.708-05	2017-11-21 11:33:52.708-05
352	15	templates	0	3	2017-11-21 13:14:50.705-05	2017-11-21 13:14:50.705-05
470	19	templates	0	1	2017-11-21 16:23:48.831-05	2017-11-21 16:23:48.831-05
471	3	templates	0	85	2017-11-21 16:23:48.966-05	2017-11-21 16:23:48.966-05
481	18	templates	0	9	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
228	13	templates	0	21	2017-11-21 11:34:27.777-05	2017-11-21 11:34:27.777-05
229	13	templates	0	22	2017-11-21 11:34:37.792-05	2017-11-21 11:34:37.792-05
230	13	templates	0	23	2017-11-21 11:34:42.799-05	2017-11-21 11:34:42.799-05
231	13	templates	0	24	2017-11-21 11:35:12.856-05	2017-11-21 11:35:12.856-05
353	15	templates	0	4	2017-11-21 13:16:55.922-05	2017-11-21 13:16:55.922-05
354	15	templates	0	5	2017-11-21 13:17:20.963-05	2017-11-21 13:17:20.963-05
472	10	templates	0	9	2017-11-21 16:23:48.968-05	2017-11-21 16:23:48.968-05
480	17	templates	0	12	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
232	13	templates	0	25	2017-11-21 11:36:02.959-05	2017-11-21 11:36:02.959-05
233	13	templates	0	26	2017-11-21 11:36:22.99-05	2017-11-21 11:36:22.99-05
234	13	templates	0	27	2017-11-21 11:36:33.013-05	2017-11-21 11:36:33.013-05
355	15	templates	0	6	2017-11-21 13:19:11.185-05	2017-11-21 13:19:11.185-05
473	15	templates	0	55	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
484	12	templates	0	17	2017-11-21 16:23:53.971-05	2017-11-21 16:23:53.971-05
235	13	templates	0	28	2017-11-21 11:37:08.088-05	2017-11-21 11:37:08.088-05
356	15	templates	0	7	2017-11-21 13:19:51.252-05	2017-11-21 13:19:51.252-05
357	15	templates	0	8	2017-11-21 13:19:56.26-05	2017-11-21 13:19:56.26-05
358	15	templates	0	9	2017-11-21 13:20:06.281-05	2017-11-21 13:20:06.281-05
359	15	templates	0	10	2017-11-21 13:20:31.344-05	2017-11-21 13:20:31.344-05
360	15	templates	0	11	2017-11-21 13:20:41.343-05	2017-11-21 13:20:41.343-05
361	15	templates	0	12	2017-11-21 13:20:51.362-05	2017-11-21 13:20:51.362-05
362	15	templates	0	13	2017-11-21 13:20:56.374-05	2017-11-21 13:20:56.374-05
363	15	templates	0	14	2017-11-21 13:21:11.4-05	2017-11-21 13:21:11.4-05
474	13	templates	0	77	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
483	16	templates	0	16	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
111	6	templates	0	13	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
\.


--
-- Data for Name: content; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY content (id, field_set_id, field_set_table, version_id, field_id, name, value, created_at, updated_at) FROM stdin;
1	1	items	1	1	path	/admin	2017-11-20 12:22:53.945-05	2017-11-20 12:22:53.945-05
2	1	items	1	2	template	adminHome	2017-11-20 12:22:53.945-05	2017-11-20 12:22:53.945-05
3	1	templates	2	4	css	\N	2017-11-20 12:28:44.927-05	2017-11-20 12:28:44.927-05
4	1	templates	2	3	html	<h1>Hello World</h1>	2017-11-20 12:28:44.927-05	2017-11-20 12:28:44.927-05
5	1	templates	2	5	js	module.exports = {\n    name: adminHome\n  }	2017-11-20 12:28:44.927-05	2017-11-20 12:28:44.927-05
6	1	templates	3	4	css	.test\n{\n\n}\n	2017-11-20 12:51:26.965-05	2017-11-20 12:51:26.965-05
7	1	templates	3	3	html	  <h1>Hello World</h1>\n	2017-11-20 12:51:26.965-05	2017-11-20 12:51:26.965-05
8	1	templates	3	5	js	module.exports = {\n    name: "adminHome"\n  }\n	2017-11-20 12:51:26.965-05	2017-11-20 12:51:26.965-05
9	2	templates	4	4	css	\N	2017-11-20 12:52:38.565-05	2017-11-20 12:52:38.565-05
10	2	templates	4	3	html	<h1>Hello World</h1>	2017-11-20 12:52:38.565-05	2017-11-20 12:52:38.565-05
11	2	templates	4	5	js	module.exports = {\n    name: defaultAdminPage\n  }	2017-11-20 12:52:38.565-05	2017-11-20 12:52:38.565-05
12	1	templates	5	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 12:53:05.222-05	2017-11-20 12:53:05.222-05
13	1	templates	5	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 12:53:05.222-05	2017-11-20 12:53:05.222-05
14	1	templates	5	5	js	module.exports = {\n    name: "adminHome"\n  }\n\n	2017-11-20 12:53:05.222-05	2017-11-20 12:53:05.222-05
15	2	templates	6	4	css	 \n	2017-11-20 12:53:05.241-05	2017-11-20 12:53:05.241-05
16	2	templates	6	3	html	  <router-view></router-view>\n	2017-11-20 12:53:05.241-05	2017-11-20 12:53:05.241-05
17	2	templates	6	5	js	module.exports = {\n    name: defaultAdminPage\n  }\n	2017-11-20 12:53:05.241-05	2017-11-20 12:53:05.241-05
18	1	templates	7	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 12:53:24.087-05	2017-11-20 12:53:24.087-05
19	1	templates	7	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 12:53:24.087-05	2017-11-20 12:53:24.087-05
20	1	templates	7	5	js	module.exports = {\n    name: "adminHome"\n  }\n\n	2017-11-20 12:53:24.087-05	2017-11-20 12:53:24.087-05
21	2	templates	8	4	css	 \n	2017-11-20 12:53:24.114-05	2017-11-20 12:53:24.114-05
22	2	templates	8	3	html	  <router-view></router-view>\n	2017-11-20 12:53:24.114-05	2017-11-20 12:53:24.114-05
23	2	templates	8	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 12:53:24.114-05	2017-11-20 12:53:24.114-05
25	2	templates	10	4	css	 \n	2017-11-20 13:06:54.004-05	2017-11-20 13:06:54.004-05
26	2	templates	10	3	html	  <router-view></router-view>\n	2017-11-20 13:06:54.004-05	2017-11-20 13:06:54.004-05
27	2	templates	10	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:06:54.004-05	2017-11-20 13:06:54.004-05
30	2	templates	12	4	css	 \n	2017-11-20 13:07:38.623-05	2017-11-20 13:07:38.623-05
31	2	templates	12	3	html	  <router-view></router-view>\n	2017-11-20 13:07:38.623-05	2017-11-20 13:07:38.623-05
32	2	templates	12	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:07:38.623-05	2017-11-20 13:07:38.623-05
33	1	templates	13	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:11:32.044-05	2017-11-20 13:11:32.044-05
34	1	templates	13	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form>\n        <input name="name" v-modal="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input name="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:11:32.044-05	2017-11-20 13:11:32.044-05
35	1	templates	13	5	js	module.exports = {\n    name: "adminHome",\n    data: {\n      name: "",\n      path: "",\n      template: ""\n    },\n    methods: {\n      submitForm() {\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:11:32.044-05	2017-11-20 13:11:32.044-05
36	2	templates	14	4	css	 \n	2017-11-20 13:11:32.069-05	2017-11-20 13:11:32.069-05
37	2	templates	14	3	html	  <router-view></router-view>\n	2017-11-20 13:11:32.069-05	2017-11-20 13:11:32.069-05
38	2	templates	14	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:11:32.069-05	2017-11-20 13:11:32.069-05
39	1	templates	15	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:11:52.037-05	2017-11-20 13:11:52.037-05
40	1	templates	15	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form>\n        <input name="name" v-modal="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:11:52.037-05	2017-11-20 13:11:52.037-05
41	1	templates	15	5	js	module.exports = {\n    name: "adminHome",\n    data: {\n      name: "",\n      path: "",\n      template: ""\n    },\n    methods: {\n      submitForm() {\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:11:52.037-05	2017-11-20 13:11:52.037-05
42	2	templates	16	4	css	 \n	2017-11-20 13:11:52.057-05	2017-11-20 13:11:52.057-05
43	2	templates	16	3	html	  <router-view></router-view>\n	2017-11-20 13:11:52.057-05	2017-11-20 13:11:52.057-05
44	2	templates	16	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:11:52.057-05	2017-11-20 13:11:52.057-05
45	1	templates	17	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:13:33.366-05	2017-11-20 13:13:33.366-05
46	1	templates	17	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form>\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:13:33.366-05	2017-11-20 13:13:33.366-05
47	1	templates	17	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:13:33.366-05	2017-11-20 13:13:33.366-05
48	2	templates	18	4	css	 \n	2017-11-20 13:13:33.394-05	2017-11-20 13:13:33.394-05
49	2	templates	18	3	html	  <router-view></router-view>\n	2017-11-20 13:13:33.394-05	2017-11-20 13:13:33.394-05
50	2	templates	18	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:13:33.394-05	2017-11-20 13:13:33.394-05
51	1	templates	19	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:14:40.72-05	2017-11-20 13:14:40.72-05
52	1	templates	19	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:14:40.72-05	2017-11-20 13:14:40.72-05
53	1	templates	19	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:14:40.72-05	2017-11-20 13:14:40.72-05
54	2	templates	20	4	css	 \n	2017-11-20 13:14:40.743-05	2017-11-20 13:14:40.743-05
55	2	templates	20	3	html	  <router-view></router-view>\n	2017-11-20 13:14:40.743-05	2017-11-20 13:14:40.743-05
56	2	templates	20	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:14:40.743-05	2017-11-20 13:14:40.743-05
57	1	templates	21	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:19:23.422-05	2017-11-20 13:19:23.422-05
95	5	templates	35	4	css	\N	2017-11-20 15:02:02.977-05	2017-11-20 15:02:02.977-05
96	5	templates	35	3	html	<h1>Hello World</h1>	2017-11-20 15:02:02.977-05	2017-11-20 15:02:02.977-05
97	5	templates	35	5	js	module.exports = {\n    name: 'adminTest2'\n  }	2017-11-20 15:02:02.977-05	2017-11-20 15:02:02.977-05
58	1	templates	21	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:19:23.422-05	2017-11-20 13:19:23.422-05
59	1	templates	21	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPageItems(input:{\n                name: ${this.name},\n                path: ${this.path},\n                template: ${this.template}\n              })\n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:19:23.422-05	2017-11-20 13:19:23.422-05
60	2	templates	22	4	css	 \n	2017-11-20 13:19:23.466-05	2017-11-20 13:19:23.466-05
61	2	templates	22	3	html	  <router-view></router-view>\n	2017-11-20 13:19:23.466-05	2017-11-20 13:19:23.466-05
62	2	templates	22	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:19:23.466-05	2017-11-20 13:19:23.466-05
63	1	templates	23	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:20:00.282-05	2017-11-20 13:20:00.282-05
64	1	templates	23	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:20:00.282-05	2017-11-20 13:20:00.282-05
65	1	templates	23	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPageItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              })\n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:20:00.282-05	2017-11-20 13:20:00.282-05
66	2	templates	24	4	css	 \n	2017-11-20 13:20:00.321-05	2017-11-20 13:20:00.321-05
67	2	templates	24	3	html	  <router-view></router-view>\n	2017-11-20 13:20:00.321-05	2017-11-20 13:20:00.321-05
68	2	templates	24	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:20:00.321-05	2017-11-20 13:20:00.321-05
69	2	items	25	1	path	/admin/2	2017-11-20 13:21:46.258-05	2017-11-20 13:21:46.258-05
70	2	items	25	2	template	adminHome	2017-11-20 13:21:46.258-05	2017-11-20 13:21:46.258-05
71	1	templates	26	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 13:22:10.916-05	2017-11-20 13:22:10.916-05
72	1	templates	26	3	html	    <div>\n      <h1>Hello World2</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      \n      </form>\n      <div>\n</div></div>	2017-11-20 13:22:10.916-05	2017-11-20 13:22:10.916-05
73	1	templates	26	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 13:22:10.916-05	2017-11-20 13:22:10.916-05
74	2	templates	27	4	css	 \n	2017-11-20 13:22:10.935-05	2017-11-20 13:22:10.935-05
75	2	templates	27	3	html	  <router-view></router-view>\n	2017-11-20 13:22:10.935-05	2017-11-20 13:22:10.935-05
76	2	templates	27	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 13:22:10.935-05	2017-11-20 13:22:10.935-05
77	3	items	28	1	path	/admin/3	2017-11-20 13:22:52.516-05	2017-11-20 13:22:52.516-05
78	3	items	28	2	template	adminHome	2017-11-20 13:22:52.516-05	2017-11-20 13:22:52.516-05
79	4	items	29	1	path	/admin/3	2017-11-20 13:43:22.572-05	2017-11-20 13:43:22.572-05
80	4	items	29	2	template	adminHome	2017-11-20 13:43:22.572-05	2017-11-20 13:43:22.572-05
81	5	items	30	1	path	/admin/4	2017-11-20 13:43:26.867-05	2017-11-20 13:43:26.867-05
82	5	items	30	2	template	adminHome	2017-11-20 13:43:26.867-05	2017-11-20 13:43:26.867-05
83	1	templates	31	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 14:53:43.299-05	2017-11-20 14:53:43.299-05
84	1	templates	31	3	html	    <div>\n      <h1>Hello World!!!!</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      </form>\n      <div>\n</div></div>	2017-11-20 14:53:43.299-05	2017-11-20 14:53:43.299-05
85	1	templates	31	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 14:53:43.299-05	2017-11-20 14:53:43.299-05
86	1	templates	32	4	css	 .template-1 .test\n{\n\n}\n	2017-11-20 14:54:18.337-05	2017-11-20 14:54:18.337-05
87	1	templates	32	3	html	    <div>\n      <h1>Hello World</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      </form>\n      <div>\n</div></div>	2017-11-20 14:54:18.337-05	2017-11-20 14:54:18.337-05
88	1	templates	32	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n	2017-11-20 14:54:18.337-05	2017-11-20 14:54:18.337-05
89	3	templates	33	4	css	\N	2017-11-20 14:58:39.033-05	2017-11-20 14:58:39.033-05
90	3	templates	33	3	html	<h1>Hello World</h1>	2017-11-20 14:58:39.033-05	2017-11-20 14:58:39.033-05
91	3	templates	33	5	js	module.exports = {\n    name: adminMenu\n  }	2017-11-20 14:58:39.033-05	2017-11-20 14:58:39.033-05
92	4	templates	34	4	css	\N	2017-11-20 15:01:32.275-05	2017-11-20 15:01:32.275-05
93	4	templates	34	3	html	<h1>Hello World</h1>	2017-11-20 15:01:32.275-05	2017-11-20 15:01:32.275-05
94	4	templates	34	5	js	module.exports = {\n    name: 'adminTest'\n  }	2017-11-20 15:01:32.275-05	2017-11-20 15:01:32.275-05
98	3	templates	36	4	css	 \n	2017-11-20 15:02:06.204-05	2017-11-20 15:02:06.204-05
99	3	templates	36	3	html	  <h1>Hello World</h1>\n	2017-11-20 15:02:06.204-05	2017-11-20 15:02:06.204-05
100	3	templates	36	5	js	module.exports = {\n    name: adminMenu\n  }\n	2017-11-20 15:02:06.204-05	2017-11-20 15:02:06.204-05
101	2	templates	37	4	css	 \n	2017-11-20 15:02:06.205-05	2017-11-20 15:02:06.205-05
102	2	templates	37	3	html	    <router-view></router-view>\n\n	2017-11-20 15:02:06.205-05	2017-11-20 15:02:06.205-05
103	2	templates	37	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n	2017-11-20 15:02:06.205-05	2017-11-20 15:02:06.205-05
104	1	templates	38	4	css	 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 15:02:06.209-05	2017-11-20 15:02:06.209-05
105	1	templates	38	3	html	      <div>\n      <h1>Hello World</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      </form>\n      <div>\n</div></div>\n	2017-11-20 15:02:06.209-05	2017-11-20 15:02:06.209-05
106	1	templates	38	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n	2017-11-20 15:02:06.209-05	2017-11-20 15:02:06.209-05
107	6	templates	39	4	css	\N	2017-11-20 15:13:26.325-05	2017-11-20 15:13:26.325-05
108	6	templates	39	3	html	<h1>Hello World</h1>	2017-11-20 15:13:26.325-05	2017-11-20 15:13:26.325-05
109	6	templates	39	5	js	module.exports = {\n    name: 'adminMenuItem'\n  }	2017-11-20 15:13:26.325-05	2017-11-20 15:13:26.325-05
110	2	templates	40	4	css	 \n	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
111	2	templates	40	3	html	      <router-view></router-view>\n\n\n	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
112	2	templates	40	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
113	3	templates	41	4	css	 \n	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
114	3	templates	41	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
115	3	templates	41	5	js	module.exports = {\n    name: adminMenu\n  }\n\n	2017-11-20 15:13:26.466-05	2017-11-20 15:13:26.466-05
116	1	templates	42	4	css	 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 15:13:26.472-05	2017-11-20 15:13:26.472-05
117	1	templates	42	3	html	        <div>\n      <h1>Hello World</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      </form>\n      <div>\n</div></div>\n\n	2017-11-20 15:13:26.472-05	2017-11-20 15:13:26.472-05
118	1	templates	42	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n	2017-11-20 15:13:26.472-05	2017-11-20 15:13:26.472-05
119	5	templates	43	4	css	 \n	2017-11-20 15:13:26.533-05	2017-11-20 15:13:26.533-05
120	5	templates	43	3	html	  <h1>Hello World</h1>\n	2017-11-20 15:13:26.533-05	2017-11-20 15:13:26.533-05
121	4	templates	44	4	css	 \n	2017-11-20 15:13:26.534-05	2017-11-20 15:13:26.534-05
122	5	templates	43	5	js	module.exports = {\n    name: 'adminTest2'\n  }\n	2017-11-20 15:13:26.533-05	2017-11-20 15:13:26.533-05
123	4	templates	44	3	html	  <h1>Hello World</h1>\n	2017-11-20 15:13:26.534-05	2017-11-20 15:13:26.534-05
124	4	templates	44	5	js	module.exports = {\n    name: 'adminTest'\n  }\n	2017-11-20 15:13:26.534-05	2017-11-20 15:13:26.534-05
125	3	templates	45	4	css	 \n	2017-11-20 15:13:56.49-05	2017-11-20 15:13:56.49-05
126	3	templates	45	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 15:13:56.49-05	2017-11-20 15:13:56.49-05
127	3	templates	45	5	js	module.exports = {\n    name: "adminMenu"\n  }\n\n	2017-11-20 15:13:56.49-05	2017-11-20 15:13:56.49-05
128	2	templates	46	4	css	 \n	2017-11-20 15:14:46.581-05	2017-11-20 15:14:46.581-05
129	2	templates	46	3	html	<div>\n    <admin-menu></admin-menu>\n    <router-view></router-view>\n  </div>\n	2017-11-20 15:14:46.581-05	2017-11-20 15:14:46.581-05
130	2	templates	46	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n	2017-11-20 15:14:46.581-05	2017-11-20 15:14:46.581-05
131	3	templates	47	4	css	 \n	2017-11-20 15:14:51.591-05	2017-11-20 15:14:51.591-05
132	3	templates	47	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 15:14:51.591-05	2017-11-20 15:14:51.591-05
133	3	templates	47	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n	2017-11-20 15:14:51.591-05	2017-11-20 15:14:51.591-05
134	3	templates	48	4	css	 \n	2017-11-20 15:15:01.622-05	2017-11-20 15:15:01.622-05
135	3	templates	48	3	html	    <p>Admin Menu</p>\n	2017-11-20 15:15:01.622-05	2017-11-20 15:15:01.622-05
136	3	templates	48	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n	2017-11-20 15:15:01.622-05	2017-11-20 15:15:01.622-05
137	7	templates	49	4	css	\N	2017-11-20 15:15:27.65-05	2017-11-20 15:15:27.65-05
138	7	templates	49	3	html	<h1>Hello World</h1>	2017-11-20 15:15:27.65-05	2017-11-20 15:15:27.65-05
139	7	templates	49	5	js	module.exports = {\n    name: 'adminMenuItem'\n  }	2017-11-20 15:15:27.65-05	2017-11-20 15:15:27.65-05
140	3	templates	50	4	css	 \n	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
141	3	templates	50	3	html	      <p>Admin Menu</p>\n\n	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
142	3	templates	50	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
143	1	templates	52	4	css	 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 15:15:31.684-05	2017-11-20 15:15:31.684-05
144	2	templates	51	4	css	 \n	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
145	1	templates	52	3	html	          <div>\n      <h1>Hello World</h1>\n      <form v-on:submit.prevent="submitForm">\n        <input name="name" v-model="name">\n        <input name="path" v-model="path">\n        <input name="template" v-model="template">\n        <input type="submit">\n      </form>\n      <div>\n</div></div>\n\n\n	2017-11-20 15:15:31.684-05	2017-11-20 15:15:31.684-05
146	1	templates	52	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n	2017-11-20 15:15:31.684-05	2017-11-20 15:15:31.684-05
147	2	templates	51	3	html	  <div>\n    <admin-menu></admin-menu>\n    <router-view></router-view>\n  </div>\n\n	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
148	2	templates	51	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n	2017-11-20 15:15:31.679-05	2017-11-20 15:15:31.679-05
149	4	templates	53	4	css	 \n	2017-11-20 15:15:31.772-05	2017-11-20 15:15:31.772-05
150	4	templates	53	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 15:15:31.772-05	2017-11-20 15:15:31.772-05
151	4	templates	53	5	js	module.exports = {\n    name: 'adminTest'\n  }\n\n	2017-11-20 15:15:31.772-05	2017-11-20 15:15:31.772-05
152	5	templates	54	4	css	 \n	2017-11-20 15:15:31.77-05	2017-11-20 15:15:31.77-05
153	5	templates	54	3	html	    <h1>Hello World</h1>\n\n	2017-11-20 15:15:31.77-05	2017-11-20 15:15:31.77-05
154	5	templates	54	5	js	module.exports = {\n    name: 'adminTest2'\n  }\n\n	2017-11-20 15:15:31.77-05	2017-11-20 15:15:31.77-05
155	6	templates	55	4	css	 \n	2017-11-20 15:17:26.882-05	2017-11-20 15:17:26.882-05
156	6	templates	55	3	html	  \n	2017-11-20 15:17:26.882-05	2017-11-20 15:17:26.882-05
157	6	templates	55	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:17:26.882-05	2017-11-20 15:17:26.882-05
158	6	templates	56	4	css	 \n	2017-11-20 15:18:01.946-05	2017-11-20 15:18:01.946-05
159	6	templates	56	3	html	  \n	2017-11-20 15:18:01.946-05	2017-11-20 15:18:01.946-05
160	6	templates	56	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:18:01.946-05	2017-11-20 15:18:01.946-05
161	6	templates	57	4	css	 \n	2017-11-20 15:18:57.052-05	2017-11-20 15:18:57.052-05
162	6	templates	57	3	html	  &lt;<router-link :to="path">title</router-link>\n	2017-11-20 15:18:57.052-05	2017-11-20 15:18:57.052-05
163	6	templates	57	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:18:57.052-05	2017-11-20 15:18:57.052-05
164	6	templates	58	4	css	 \n	2017-11-20 15:19:22.095-05	2017-11-20 15:19:22.095-05
165	6	templates	58	3	html	  &lt;<router-link :to="path">title</router-link>\n	2017-11-20 15:19:22.095-05	2017-11-20 15:19:22.095-05
166	6	templates	58	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:19:22.095-05	2017-11-20 15:19:22.095-05
167	6	templates	59	4	css	 \n	2017-11-20 15:19:27.104-05	2017-11-20 15:19:27.104-05
168	6	templates	59	3	html	  &lt;<router-link :to="path">title</router-link>\n	2017-11-20 15:19:27.104-05	2017-11-20 15:19:27.104-05
169	6	templates	59	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:19:27.104-05	2017-11-20 15:19:27.104-05
170	6	templates	60	4	css	 \n	2017-11-20 15:19:32.115-05	2017-11-20 15:19:32.115-05
171	6	templates	60	3	html	<router-link :to="path">title</router-link>\n	2017-11-20 15:19:32.115-05	2017-11-20 15:19:32.115-05
172	6	templates	60	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:19:32.115-05	2017-11-20 15:19:32.115-05
173	6	templates	61	4	css	 \n	2017-11-20 15:19:37.125-05	2017-11-20 15:19:37.125-05
174	6	templates	61	3	html	<router-link :to="path">{{title}}</router-link>\n	2017-11-20 15:19:37.125-05	2017-11-20 15:19:37.125-05
175	6	templates	61	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:19:37.125-05	2017-11-20 15:19:37.125-05
176	3	templates	62	4	css	 \n	2017-11-20 15:21:47.437-05	2017-11-20 15:21:47.437-05
177	3	templates	62	3	html	<div>\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:21:47.437-05	2017-11-20 15:21:47.437-05
178	3	templates	62	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:21:47.437-05	2017-11-20 15:21:47.437-05
179	3	templates	63	4	css	 \n	2017-11-20 15:22:12.429-05	2017-11-20 15:22:12.429-05
180	3	templates	63	3	html	<div class="">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:22:12.429-05	2017-11-20 15:22:12.429-05
181	3	templates	63	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:22:12.429-05	2017-11-20 15:22:12.429-05
182	3	templates	64	4	css	 \n	2017-11-20 15:23:17.544-05	2017-11-20 15:23:17.544-05
183	3	templates	64	3	html	<div class="flex ">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:23:17.544-05	2017-11-20 15:23:17.544-05
184	3	templates	64	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:23:17.544-05	2017-11-20 15:23:17.544-05
185	3	templates	65	4	css	 \n	2017-11-20 15:23:47.59-05	2017-11-20 15:23:47.59-05
186	3	templates	65	3	html	<div class="flex items-center justify-start">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:23:47.59-05	2017-11-20 15:23:47.59-05
187	3	templates	65	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:23:47.59-05	2017-11-20 15:23:47.59-05
188	3	templates	66	4	css	 \n	2017-11-20 15:24:07.631-05	2017-11-20 15:24:07.631-05
189	3	templates	66	3	html	<div class="flex items-center justify-start ">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:24:07.631-05	2017-11-20 15:24:07.631-05
190	3	templates	66	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:24:07.631-05	2017-11-20 15:24:07.631-05
191	3	templates	67	4	css	 \n	2017-11-20 15:24:22.662-05	2017-11-20 15:24:22.662-05
192	3	templates	67	3	html	<div class="flex items-center justify-start bg-grey-darkest ">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:24:22.662-05	2017-11-20 15:24:22.662-05
193	3	templates	67	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:24:22.662-05	2017-11-20 15:24:22.662-05
194	3	templates	68	4	css	 \n	2017-11-20 15:25:32.809-05	2017-11-20 15:25:32.809-05
195	3	templates	68	3	html	<div class="flex items-center justify-start bg-grey-darkest">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:25:32.809-05	2017-11-20 15:25:32.809-05
196	3	templates	68	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:25:32.809-05	2017-11-20 15:25:32.809-05
197	3	templates	69	4	css	 \n	2017-11-20 15:25:42.819-05	2017-11-20 15:25:42.819-05
198	3	templates	69	3	html	<div class="flex items-center justify-start bg-grey-darkest text-white">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:25:42.819-05	2017-11-20 15:25:42.819-05
199	3	templates	69	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:25:42.819-05	2017-11-20 15:25:42.819-05
200	3	templates	70	4	css	 \n	2017-11-20 15:26:02.852-05	2017-11-20 15:26:02.852-05
201	3	templates	70	3	html	<div class="flex items-center justify-start bg-grey-darkest text-white">\n    <admin-menu-item path="/admin/4" title="admin4" class="text-white"></admin-menu-item>\n  </div>\n	2017-11-20 15:26:02.852-05	2017-11-20 15:26:02.852-05
202	3	templates	70	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:26:02.852-05	2017-11-20 15:26:02.852-05
203	3	templates	71	4	css	 \n	2017-11-20 15:26:12.868-05	2017-11-20 15:26:12.868-05
204	3	templates	71	3	html	<div class="flex items-center justify-start bg-grey-darkest text-white">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:26:12.868-05	2017-11-20 15:26:12.868-05
205	3	templates	71	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:26:12.868-05	2017-11-20 15:26:12.868-05
206	3	templates	72	4	css	 \n	2017-11-20 15:29:03.205-05	2017-11-20 15:29:03.205-05
207	3	templates	72	3	html	<div class="flex items-center justify-start bg-grey-darkest text-white h-screen">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:29:03.205-05	2017-11-20 15:29:03.205-05
208	3	templates	72	5	js	module.exports = {\n    name: "admin-menu"\n  }\n\n\n	2017-11-20 15:29:03.205-05	2017-11-20 15:29:03.205-05
209	3	templates	73	4	css	 \n	2017-11-20 15:30:08.329-05	2017-11-20 15:30:08.329-05
210	3	templates	73	3	html	<div class="flex items-center justify-start bg-grey-darkest text-white h-screen">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:30:08.329-05	2017-11-20 15:30:08.329-05
211	3	templates	73	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n\n      }\n    }\n  }\n\n\n	2017-11-20 15:30:08.329-05	2017-11-20 15:30:08.329-05
212	3	templates	74	4	css	 \n	2017-11-20 15:30:48.4-05	2017-11-20 15:30:48.4-05
213	3	templates	74	3	html	<div class="flex items-center justify-start bg-grey-darkest text-white h-screen">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:30:48.4-05	2017-11-20 15:30:48.4-05
214	3	templates	74	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        class: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen'\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:30:48.4-05	2017-11-20 15:30:48.4-05
215	3	templates	75	4	css	 \n	2017-11-20 15:30:58.416-05	2017-11-20 15:30:58.416-05
216	3	templates	75	3	html	<div :class="class">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:30:58.416-05	2017-11-20 15:30:58.416-05
217	3	templates	75	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        class: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen'\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:30:58.416-05	2017-11-20 15:30:58.416-05
218	3	templates	76	4	css	 \n	2017-11-20 15:31:18.454-05	2017-11-20 15:31:18.454-05
219	3	templates	76	3	html	<div :class="classList">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:31:18.454-05	2017-11-20 15:31:18.454-05
220	3	templates	76	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen'\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:31:18.454-05	2017-11-20 15:31:18.454-05
221	3	templates	77	4	css	 \n	2017-11-20 15:31:38.49-05	2017-11-20 15:31:38.49-05
222	3	templates	77	3	html	<div :class="classList">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:31:38.49-05	2017-11-20 15:31:38.49-05
223	3	templates	77	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen',\n          'w-auto',\n          \n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:31:38.49-05	2017-11-20 15:31:38.49-05
224	3	templates	78	4	css	 \n	2017-11-20 15:31:43.499-05	2017-11-20 15:31:43.499-05
225	3	templates	78	3	html	<div :class="classList">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </div>\n	2017-11-20 15:31:43.499-05	2017-11-20 15:31:43.499-05
226	3	templates	78	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen',\n          'w-auto',\n          \n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:31:43.499-05	2017-11-20 15:31:43.499-05
227	3	templates	79	4	css	 \n	2017-11-20 15:33:33.713-05	2017-11-20 15:33:33.713-05
228	3	templates	79	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </nav>\n	2017-11-20 15:33:33.713-05	2017-11-20 15:33:33.713-05
229	3	templates	79	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen',\n          'w-auto',\n\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:33:33.713-05	2017-11-20 15:33:33.713-05
230	1	templates	80	4	css	 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 15:38:04.22-05	2017-11-20 15:38:04.22-05
231	1	templates	80	3	html	<h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n	2017-11-20 15:38:04.22-05	2017-11-20 15:38:04.22-05
232	1	templates	80	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n	2017-11-20 15:38:04.22-05	2017-11-20 15:38:04.22-05
233	2	templates	81	4	css	 \n	2017-11-20 15:38:59.335-05	2017-11-20 15:38:59.335-05
234	2	templates	81	3	html	  <admin-menu></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:38:59.335-05	2017-11-20 15:38:59.335-05
235	2	templates	81	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n	2017-11-20 15:38:59.335-05	2017-11-20 15:38:59.335-05
236	2	templates	82	4	css	 \n	2017-11-20 15:39:49.435-05	2017-11-20 15:39:49.435-05
237	2	templates	82	3	html	  <admin-menu class=""></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:39:49.435-05	2017-11-20 15:39:49.435-05
238	2	templates	82	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 15:39:49.435-05	2017-11-20 15:39:49.435-05
239	2	templates	83	4	css	 \n	2017-11-20 15:40:14.479-05	2017-11-20 15:40:14.479-05
240	2	templates	83	3	html	  <admin-menu class="flex items-center bg-darkest-grey"></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:40:14.479-05	2017-11-20 15:40:14.479-05
241	2	templates	83	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 15:40:14.479-05	2017-11-20 15:40:14.479-05
242	3	templates	84	4	css	 \n	2017-11-20 15:40:24.5-05	2017-11-20 15:40:24.5-05
243	3	templates	84	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </nav>\n	2017-11-20 15:40:24.5-05	2017-11-20 15:40:24.5-05
244	3	templates	84	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'items-center',\n          'justify-start',\n          'bg-grey-darkest',\n          'text-white',\n          'h-screen',\n          'w-auto',\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:40:24.5-05	2017-11-20 15:40:24.5-05
245	3	templates	85	4	css	 \n	2017-11-20 15:40:29.507-05	2017-11-20 15:40:29.507-05
246	3	templates	85	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin/4" title="admin4"></admin-menu-item>\n  </nav>\n	2017-11-20 15:40:29.507-05	2017-11-20 15:40:29.507-05
247	3	templates	85	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:40:29.507-05	2017-11-20 15:40:29.507-05
248	2	templates	86	4	css	 \n	2017-11-20 15:40:59.569-05	2017-11-20 15:40:59.569-05
249	2	templates	86	3	html	  <admin-menu class="flex items-center bg-grey-darkests"></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:40:59.569-05	2017-11-20 15:40:59.569-05
250	2	templates	86	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 15:40:59.569-05	2017-11-20 15:40:59.569-05
251	2	templates	87	4	css	 \n	2017-11-20 15:41:04.576-05	2017-11-20 15:41:04.576-05
252	2	templates	87	3	html	  <admin-menu class="flex items-center bg-grey-darkest"></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:41:04.576-05	2017-11-20 15:41:04.576-05
253	2	templates	87	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 15:41:04.576-05	2017-11-20 15:41:04.576-05
254	2	templates	88	4	css	 \n	2017-11-20 15:41:09.582-05	2017-11-20 15:41:09.582-05
255	2	templates	88	3	html	  <admin-menu class="flex items-center bg-grey-darkest "></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:41:09.582-05	2017-11-20 15:41:09.582-05
256	2	templates	88	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 15:41:09.582-05	2017-11-20 15:41:09.582-05
257	2	templates	89	4	css	 \n	2017-11-20 15:41:34.634-05	2017-11-20 15:41:34.634-05
258	2	templates	89	3	html	  <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n	2017-11-20 15:41:34.634-05	2017-11-20 15:41:34.634-05
259	2	templates	89	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-20 15:41:34.634-05	2017-11-20 15:41:34.634-05
260	6	templates	90	4	css	 \n	2017-11-20 15:42:34.749-05	2017-11-20 15:42:34.749-05
261	6	templates	90	3	html	<router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n	2017-11-20 15:42:34.749-05	2017-11-20 15:42:34.749-05
262	6	templates	90	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-20 15:42:34.749-05	2017-11-20 15:42:34.749-05
263	3	templates	91	4	css	 \n	2017-11-20 15:45:30.089-05	2017-11-20 15:45:30.089-05
264	3	templates	91	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-20 15:45:30.089-05	2017-11-20 15:45:30.089-05
265	3	templates	91	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 15:45:30.089-05	2017-11-20 15:45:30.089-05
266	3	templates	92	4	css	 \n	2017-11-20 16:12:43.178-05	2017-11-20 16:12:43.178-05
267	3	templates	92	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-20 16:12:43.178-05	2017-11-20 16:12:43.178-05
268	3	templates	92	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n	2017-11-20 16:12:43.178-05	2017-11-20 16:12:43.178-05
269	8	templates	93	4	css	\N	2017-11-20 16:13:26.773-05	2017-11-20 16:13:26.773-05
270	8	templates	93	3	html	<h1>Hello World</h1>	2017-11-20 16:13:26.773-05	2017-11-20 16:13:26.773-05
271	8	templates	93	5	js	module.exports = {\n    name: 'adminList'\n  }	2017-11-20 16:13:26.773-05	2017-11-20 16:13:26.773-05
272	1	templates	94	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
273	1	templates	94	3	html	  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n\n	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
274	1	templates	94	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
275	2	templates	95	4	css	 \n	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
276	2	templates	95	3	html	    <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n\n	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
277	2	templates	95	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n	2017-11-20 16:13:28.276-05	2017-11-20 16:13:28.276-05
278	6	templates	96	4	css	 \n	2017-11-20 16:13:28.283-05	2017-11-20 16:13:28.283-05
279	3	templates	97	4	css	 \n	2017-11-20 16:13:28.282-05	2017-11-20 16:13:28.282-05
280	6	templates	96	3	html	  <router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n\n	2017-11-20 16:13:28.283-05	2017-11-20 16:13:28.283-05
281	3	templates	97	3	html	  <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/page" title="page"></admin-menu-item>\n  </nav>\n\n	2017-11-20 16:13:28.282-05	2017-11-20 16:13:28.282-05
282	6	templates	96	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n	2017-11-20 16:13:28.283-05	2017-11-20 16:13:28.283-05
283	3	templates	97	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n	2017-11-20 16:13:28.282-05	2017-11-20 16:13:28.282-05
284	6	templates	100	4	css	 \n	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
285	1	templates	99	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
286	2	templates	98	4	css	 \n	2017-11-20 16:13:38.296-05	2017-11-20 16:13:38.296-05
287	6	templates	100	3	html	    <router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n\n\n	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
288	3	templates	101	4	css	 \n	2017-11-20 16:13:38.298-05	2017-11-20 16:13:38.298-05
289	1	templates	99	3	html	    <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n\n\n	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
290	2	templates	98	3	html	      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n\n\n	2017-11-20 16:13:38.296-05	2017-11-20 16:13:38.296-05
291	6	templates	100	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
292	3	templates	101	3	html	    <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/page" title="page"></admin-menu-item>\n  </nav>\n\n\n	2017-11-20 16:13:38.298-05	2017-11-20 16:13:38.298-05
293	1	templates	99	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n	2017-11-20 16:13:38.297-05	2017-11-20 16:13:38.297-05
294	2	templates	98	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n	2017-11-20 16:13:38.296-05	2017-11-20 16:13:38.296-05
295	3	templates	101	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n	2017-11-20 16:13:38.298-05	2017-11-20 16:13:38.298-05
296	8	templates	102	4	css	 \n	2017-11-20 16:15:23.489-05	2017-11-20 16:15:23.489-05
297	8	templates	102	3	html	  <div>\n\n    </div>\n	2017-11-20 16:15:23.489-05	2017-11-20 16:15:23.489-05
298	8	templates	102	5	js	module.exports = {\n    name: 'adminList',\n    "props": ['list']\n  }\n	2017-11-20 16:15:23.489-05	2017-11-20 16:15:23.489-05
299	9	templates	103	4	css	\N	2017-11-20 16:15:47.638-05	2017-11-20 16:15:47.638-05
300	9	templates	103	3	html	<h1>Hello World</h1>	2017-11-20 16:15:47.638-05	2017-11-20 16:15:47.638-05
301	9	templates	103	5	js	module.exports = {\n    name: 'adminPageList'\n  }	2017-11-20 16:15:47.638-05	2017-11-20 16:15:47.638-05
302	1	templates	104	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 16:15:48.543-05	2017-11-20 16:15:48.543-05
303	1	templates	104	3	html	      <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n\n\n\n	2017-11-20 16:15:48.543-05	2017-11-20 16:15:48.543-05
304	1	templates	104	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n	2017-11-20 16:15:48.543-05	2017-11-20 16:15:48.543-05
305	2	templates	105	4	css	 \n	2017-11-20 16:15:48.544-05	2017-11-20 16:15:48.544-05
306	2	templates	105	3	html	        <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n\n\n\n	2017-11-20 16:15:48.544-05	2017-11-20 16:15:48.544-05
307	2	templates	105	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n	2017-11-20 16:15:48.544-05	2017-11-20 16:15:48.544-05
308	3	templates	107	4	css	 \n	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
309	6	templates	106	4	css	 \n	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
310	8	templates	108	4	css	 \n	2017-11-20 16:15:48.553-05	2017-11-20 16:15:48.553-05
311	3	templates	107	3	html	      <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/page" title="page"></admin-menu-item>\n  </nav>\n\n\n\n	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
312	6	templates	106	3	html	      <router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n\n\n\n	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
313	8	templates	108	3	html	    <div>\n\n    </div>\n\n	2017-11-20 16:15:48.553-05	2017-11-20 16:15:48.553-05
314	3	templates	107	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n\n	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
315	6	templates	106	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n	2017-11-20 16:15:48.552-05	2017-11-20 16:15:48.552-05
316	8	templates	108	5	js	module.exports = {\n    name: 'adminList',\n    "props": ['list']\n  }\n\n	2017-11-20 16:15:48.553-05	2017-11-20 16:15:48.553-05
317	1	templates	109	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 16:15:53.557-05	2017-11-20 16:15:53.557-05
318	8	templates	113	4	css	 \n	2017-11-20 16:15:53.561-05	2017-11-20 16:15:53.561-05
319	1	templates	109	3	html	        <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n\n\n\n\n	2017-11-20 16:15:53.557-05	2017-11-20 16:15:53.557-05
320	8	templates	113	3	html	      <div>\n\n    </div>\n\n\n	2017-11-20 16:15:53.561-05	2017-11-20 16:15:53.561-05
321	1	templates	109	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n	2017-11-20 16:15:53.557-05	2017-11-20 16:15:53.557-05
322	8	templates	113	5	js	module.exports = {\n    name: 'adminList',\n    "props": ['list']\n  }\n\n\n	2017-11-20 16:15:53.561-05	2017-11-20 16:15:53.561-05
323	9	templates	114	4	css	 \n	2017-11-20 16:15:53.567-05	2017-11-20 16:15:53.567-05
324	9	templates	114	3	html	  <h1>Hello World</h1>\n	2017-11-20 16:15:53.567-05	2017-11-20 16:15:53.567-05
325	9	templates	114	5	js	module.exports = {\n    name: 'adminPageList'\n  }\n	2017-11-20 16:15:53.567-05	2017-11-20 16:15:53.567-05
326	3	templates	112	4	css	 \n	2017-11-20 16:15:53.56-05	2017-11-20 16:15:53.56-05
327	6	templates	111	4	css	 \n	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
328	2	templates	110	4	css	 \n	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
329	3	templates	112	3	html	        <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/page" title="page"></admin-menu-item>\n  </nav>\n\n\n\n\n	2017-11-20 16:15:53.56-05	2017-11-20 16:15:53.56-05
330	6	templates	111	3	html	        <router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n\n\n\n\n	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
331	2	templates	110	3	html	          <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n\n\n\n\n	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
332	3	templates	112	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n\n\n	2017-11-20 16:15:53.56-05	2017-11-20 16:15:53.56-05
333	6	templates	111	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
334	2	templates	110	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n	2017-11-20 16:15:53.559-05	2017-11-20 16:15:53.559-05
335	9	templates	115	4	css	 \n	2017-11-20 16:16:33.626-05	2017-11-20 16:16:33.626-05
336	9	templates	115	3	html	  <div>\n\n    </div>\n	2017-11-20 16:16:33.626-05	2017-11-20 16:16:33.626-05
337	9	templates	115	5	js	module.exports = {\n    name: 'adminPageList'\n    data(){\n      returns {\n        allPages: ""\n      }\n    }\n  }\n	2017-11-20 16:16:33.626-05	2017-11-20 16:16:33.626-05
338	9	templates	116	4	css	 \n	2017-11-20 16:16:38.63-05	2017-11-20 16:16:38.63-05
339	9	templates	116	3	html	  <div>\n\n    </div>\n	2017-11-20 16:16:38.63-05	2017-11-20 16:16:38.63-05
340	9	templates	116	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      returns {\n        allPages: ""\n      }\n    }\n  }\n	2017-11-20 16:16:38.63-05	2017-11-20 16:16:38.63-05
341	9	templates	117	4	css	 \n	2017-11-20 16:16:43.64-05	2017-11-20 16:16:43.64-05
342	9	templates	117	3	html	  <div>\n\n    </div>\n	2017-11-20 16:16:43.64-05	2017-11-20 16:16:43.64-05
343	9	templates	117	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: ""\n      }\n    }\n  }\n	2017-11-20 16:16:43.64-05	2017-11-20 16:16:43.64-05
344	9	templates	118	4	css	 \n	2017-11-20 16:17:03.68-05	2017-11-20 16:17:03.68-05
345	9	templates	118	3	html	  <div :v-for="allPages">\n\n    </div>\n	2017-11-20 16:17:03.68-05	2017-11-20 16:17:03.68-05
346	9	templates	118	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    }\n    \n  }\n	2017-11-20 16:17:03.68-05	2017-11-20 16:17:03.68-05
347	9	templates	119	4	css	 \n	2017-11-20 16:18:19.197-05	2017-11-20 16:18:19.197-05
348	9	templates	119	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:18:19.197-05	2017-11-20 16:18:19.197-05
349	9	templates	119	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    }\n    \n  }\n	2017-11-20 16:18:19.197-05	2017-11-20 16:18:19.197-05
350	9	templates	120	4	css	 \n	2017-11-20 16:21:19.539-05	2017-11-20 16:21:19.539-05
351	9	templates	120	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:21:19.539-05	2017-11-20 16:21:19.539-05
352	9	templates	120	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          { pages{\n            nodes{\n              items {\n                name\n                path\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-20 16:21:19.539-05	2017-11-20 16:21:19.539-05
353	9	templates	121	4	css	 \n	2017-11-20 16:22:44.704-05	2017-11-20 16:22:44.704-05
354	9	templates	121	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:22:44.704-05	2017-11-20 16:22:44.704-05
355	9	templates	121	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      })\n    }\n  }\n	2017-11-20 16:22:44.704-05	2017-11-20 16:22:44.704-05
356	9	templates	122	4	css	 \n	2017-11-20 16:25:30.014-05	2017-11-20 16:25:30.014-05
357	9	templates	122	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:25:30.014-05	2017-11-20 16:25:30.014-05
358	9	templates	122	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:25:30.014-05	2017-11-20 16:25:30.014-05
359	9	templates	123	4	css	 \n	2017-11-20 16:26:55.174-05	2017-11-20 16:26:55.174-05
360	9	templates	123	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:26:55.174-05	2017-11-20 16:26:55.174-05
361	9	templates	123	5	js	module.exports = {\n    name: 'adminPagelist',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:26:55.174-05	2017-11-20 16:26:55.174-05
362	6	items	124	1	path	/page	2017-11-20 16:26:59.228-05	2017-11-20 16:26:59.228-05
363	6	items	124	2	template	admin-pagelist	2017-11-20 16:26:59.228-05	2017-11-20 16:26:59.228-05
364	9	templates	125	4	css	 \n	2017-11-20 16:27:00.181-05	2017-11-20 16:27:00.181-05
365	9	templates	125	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:27:00.181-05	2017-11-20 16:27:00.181-05
366	9	templates	125	5	js	module.exports = {\n    name: 'adminPagelist',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:27:00.181-05	2017-11-20 16:27:00.181-05
367	3	templates	126	4	css	 \n	2017-11-20 16:27:35.262-05	2017-11-20 16:27:35.262-05
368	3	templates	126	3	html	        <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n\n\n\n	2017-11-20 16:27:35.262-05	2017-11-20 16:27:35.262-05
369	3	templates	126	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n\n\n	2017-11-20 16:27:35.262-05	2017-11-20 16:27:35.262-05
370	6	items	127	6	path	/admin/page	2017-11-20 16:28:44.493-05	2017-11-20 16:28:44.493-05
371	6	items	127	7	template	\N	2017-11-20 16:28:44.493-05	2017-11-20 16:28:44.493-05
372	3	templates	128	4	css	 \n	2017-11-20 16:29:10.437-05	2017-11-20 16:29:10.437-05
373	3	templates	128	3	html	        <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n\n\n\n	2017-11-20 16:29:10.437-05	2017-11-20 16:29:10.437-05
374	3	templates	128	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n\n\n	2017-11-20 16:29:10.437-05	2017-11-20 16:29:10.437-05
375	9	templates	129	4	css	 \n	2017-11-20 16:33:30.936-05	2017-11-20 16:33:30.936-05
376	9	templates	129	3	html	  <div :v-for="allPages">\n      \n    </div>\n	2017-11-20 16:33:30.936-05	2017-11-20 16:33:30.936-05
377	9	templates	129	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:33:30.936-05	2017-11-20 16:33:30.936-05
378	6	items	130	6	path	/admin/page	2017-11-20 16:33:45.64-05	2017-11-20 16:33:45.64-05
379	6	items	130	7	template	admin-page-list	2017-11-20 16:33:45.64-05	2017-11-20 16:33:45.64-05
380	9	templates	131	4	css	 \n	2017-11-20 16:34:11.011-05	2017-11-20 16:34:11.011-05
381	9	templates	131	3	html	  <div :v-for="allPages">\n      <h1>{{name}}</h1>\n    </div>\n	2017-11-20 16:34:11.011-05	2017-11-20 16:34:11.011-05
382	9	templates	131	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:34:11.011-05	2017-11-20 16:34:11.011-05
383	9	templates	132	4	css	 \n	2017-11-20 16:34:26.038-05	2017-11-20 16:34:26.038-05
565	12	templates	194	15	css	 \n	2017-11-21 11:19:40.991-05	2017-11-21 11:19:40.991-05
384	9	templates	132	3	html	  <h1>All Pages</h1>\n    <div :v-for="allPages">\n      <h1>{{name}}</h1>\n    </div>\n	2017-11-20 16:34:26.038-05	2017-11-20 16:34:26.038-05
385	9	templates	132	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:34:26.038-05	2017-11-20 16:34:26.038-05
386	9	templates	133	4	css	 \n	2017-11-20 16:34:46.076-05	2017-11-20 16:34:46.076-05
387	9	templates	133	3	html	  <div>\n      <h1>All Pages</h1>\n      <div :v-for="allPages">\n        <h1>{{name}}</h1>\n      </div>\n    </div>\n	2017-11-20 16:34:46.076-05	2017-11-20 16:34:46.076-05
388	9	templates	133	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-20 16:34:46.076-05	2017-11-20 16:34:46.076-05
389	6	items	134	6	path	/admin/page	2017-11-20 16:35:38.51-05	2017-11-20 16:35:38.51-05
390	6	items	134	7	template	adminPageList	2017-11-20 16:35:38.51-05	2017-11-20 16:35:38.51-05
391	7	items	135	6	path	/	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
392	7	items	135	7	template	homePage	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
393	10	templates	136	9	css		2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
394	10	templates	136	8	html	<h1></h1>	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
395	10	templates	136	10	js	module.exports={"name": 'homePage'}	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
396	2	templates	137	4	css	 \n	2017-11-20 16:37:51.444-05	2017-11-20 16:37:51.444-05
397	2	templates	137	3	html	            <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n\n\n\n\n\n	2017-11-20 16:37:51.444-05	2017-11-20 16:37:51.444-05
398	2	templates	137	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n	2017-11-20 16:37:51.444-05	2017-11-20 16:37:51.444-05
399	3	templates	138	4	css	 \n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
400	3	templates	138	3	html	          <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n\n\n\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
401	3	templates	138	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n\n\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
402	9	templates	140	4	css	 \n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
403	6	templates	139	4	css	 \n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
404	8	templates	141	4	css	 \n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
405	1	templates	142	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 16:37:51.454-05	2017-11-20 16:37:51.454-05
406	9	templates	140	3	html	    <div>\n      <h1>All Pages</h1>\n      <div :v-for="allPages">\n        <h1>{{name}}</h1>\n      </div>\n    </div>\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
407	6	templates	139	3	html	          <router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n\n\n\n\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
408	8	templates	141	3	html	        <div>\n\n    </div>\n\n\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
409	1	templates	142	3	html	          <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n\n\n\n\n\n	2017-11-20 16:37:51.454-05	2017-11-20 16:37:51.454-05
410	9	templates	140	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
411	6	templates	139	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
412	8	templates	141	5	js	module.exports = {\n    name: 'adminList',\n    "props": ['list']\n  }\n\n\n\n	2017-11-20 16:37:51.453-05	2017-11-20 16:37:51.453-05
413	1	templates	142	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n	2017-11-20 16:37:51.454-05	2017-11-20 16:37:51.454-05
414	11	templates	143	9	css		2017-11-20 16:38:09.974-05	2017-11-20 16:38:09.974-05
415	11	templates	143	8	html	<h1></h1>	2017-11-20 16:38:09.974-05	2017-11-20 16:38:09.974-05
416	11	templates	143	10	js	module.exports={"name": 'homePage'}	2017-11-20 16:38:09.974-05	2017-11-20 16:38:09.974-05
417	8	templates	144	4	css	 \n	2017-11-20 16:38:36.536-05	2017-11-20 16:38:36.536-05
418	8	templates	144	3	html	          <div>\n\n    </div>\n\n\n\n\n	2017-11-20 16:38:36.536-05	2017-11-20 16:38:36.536-05
419	8	templates	144	5	js	module.exports = {\n    name: 'adminList',\n    "props": ['list']\n  }\n\n\n\n\n	2017-11-20 16:38:36.536-05	2017-11-20 16:38:36.536-05
420	3	templates	146	4	css	 \n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
421	9	templates	147	4	css	 \n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
422	2	templates	145	4	css	 \n	2017-11-20 16:38:36.543-05	2017-11-20 16:38:36.543-05
423	1	templates	149	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
424	6	templates	148	4	css	 \n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
425	2	templates	145	3	html	              <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n\n\n\n\n\n\n	2017-11-20 16:38:36.543-05	2017-11-20 16:38:36.543-05
426	9	templates	147	3	html	      <div>\n      <h1>All Pages</h1>\n      <div :v-for="allPages">\n        <h1>{{name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
428	6	templates	148	3	html	            <router-link :to="path" class="p-4 hover:text-red">{{title}}</router-link>\n\n\n\n\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
427	3	templates	146	3	html	            <nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n\n\n\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
433	3	templates	146	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex'\n        ]\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
430	2	templates	145	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n	2017-11-20 16:38:36.543-05	2017-11-20 16:38:36.543-05
438	11	templates	151	9	css	 \n	2017-11-20 16:39:01.58-05	2017-11-20 16:39:01.58-05
439	11	templates	151	8	html	  <router-view></router-view>\n	2017-11-20 16:39:01.58-05	2017-11-20 16:39:01.58-05
440	11	templates	151	10	js	module.exports={"name": 'homePage'}\n	2017-11-20 16:39:01.58-05	2017-11-20 16:39:01.58-05
444	11	templates	153	9	css	 \n	2017-11-20 16:39:26.62-05	2017-11-20 16:39:26.62-05
445	11	templates	153	8	html	  <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>	2017-11-20 16:39:26.62-05	2017-11-20 16:39:26.62-05
446	11	templates	153	10	js	module.exports={"name": 'defaultPage'}\n	2017-11-20 16:39:26.62-05	2017-11-20 16:39:26.62-05
566	12	templates	194	14	html	  <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <h1>I am a card</h1>\n      <slot></slot>\n    </div>\n	2017-11-21 11:19:40.991-05	2017-11-21 11:19:40.991-05
567	12	templates	194	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:19:40.991-05	2017-11-21 11:19:40.991-05
568	12	templates	195	15	css	 \n	2017-11-21 11:19:51.01-05	2017-11-21 11:19:51.01-05
569	12	templates	195	14	html	  <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n	2017-11-21 11:19:51.01-05	2017-11-21 11:19:51.01-05
570	12	templates	195	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:19:51.01-05	2017-11-21 11:19:51.01-05
708	3	templates	242	4	css	 \n	2017-11-21 11:42:43.731-05	2017-11-21 11:42:43.731-05
709	3	templates	242	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:42:43.731-05	2017-11-21 11:42:43.731-05
710	3	templates	242	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      console.log("BEFORe moutn")\n    }\n  }\n\n	2017-11-21 11:42:43.731-05	2017-11-21 11:42:43.731-05
711	3	templates	243	4	css	 \n	2017-11-21 11:42:58.753-05	2017-11-21 11:42:58.753-05
712	3	templates	243	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:42:58.753-05	2017-11-21 11:42:58.753-05
713	3	templates	243	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      console.log("BEFORe moutn")\n    }\n  }\n\n	2017-11-21 11:42:58.753-05	2017-11-21 11:42:58.753-05
714	3	templates	244	4	css	 \n	2017-11-21 11:43:08.771-05	2017-11-21 11:43:08.771-05
715	3	templates	244	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:43:08.771-05	2017-11-21 11:43:08.771-05
716	3	templates	244	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.\n    }\n  }\n\n	2017-11-21 11:43:08.771-05	2017-11-21 11:43:08.771-05
843	13	templates	287	4	css	 \n	2017-11-21 12:12:12.044-05	2017-11-21 12:12:12.044-05
844	13	templates	287	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:12:12.044-05	2017-11-21 12:12:12.044-05
845	13	templates	287	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:12:12.044-05	2017-11-21 12:12:12.044-05
893	2	templates	308	4	css	 \n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
904	2	templates	308	3	html	      <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
908	2	templates	308	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
977	1	templates	331	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 13:03:19.459-05	2017-11-21 13:03:19.459-05
1002	14	templates	340	15	css	 \n	2017-11-21 13:03:39.48-05	2017-11-21 13:03:39.48-05
1003	14	templates	340	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n	2017-11-21 13:03:39.48-05	2017-11-21 13:03:39.48-05
1004	14	templates	340	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 13:03:39.48-05	2017-11-21 13:03:39.48-05
1008	3	templates	345	4	css	 \n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1012	3	templates	345	3	html	      <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n\n\n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1016	3	templates	345	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n\n\n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1041	15	templates	353	4	css	 \n	2017-11-21 13:16:55.922-05	2017-11-21 13:16:55.922-05
431	9	templates	147	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
571	8	templates	196	4	css	 \n	2017-11-21 11:23:46.547-05	2017-11-21 11:23:46.547-05
572	8	templates	196	3	html		2017-11-21 11:23:46.547-05	2017-11-21 11:23:46.547-05
573	8	templates	196	5	js	module.exports = {\n    name: 'adminList',\n    "props": ['list']\n  }\n	2017-11-21 11:23:46.547-05	2017-11-21 11:23:46.547-05
717	3	templates	245	4	css	 \n	2017-11-21 11:43:53.863-05	2017-11-21 11:43:53.863-05
718	3	templates	245	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:43:53.863-05	2017-11-21 11:43:53.863-05
719	3	templates	245	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            \n          }\n        `\n      })\n    }\n  }\n\n	2017-11-21 11:43:53.863-05	2017-11-21 11:43:53.863-05
846	13	templates	288	4	css	 \n	2017-11-21 12:13:02.144-05	2017-11-21 12:13:02.144-05
847	13	templates	288	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    Create New ($route.params.resource_name)\n  </card>\n  </div>\n	2017-11-21 12:13:02.144-05	2017-11-21 12:13:02.144-05
848	13	templates	288	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:13:02.144-05	2017-11-21 12:13:02.144-05
906	11	templates	305	10	js	module.exports={"name": 'defaultPage'}\n\n\n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
978	10	templates	332	9	css	 \n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
981	10	templates	332	8	html	      <h1></h1>\n\n\n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
986	10	templates	332	10	js	module.exports={"name": 'homePage'}\n\n\n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
1011	6	templates	346	4	css	 \n	2017-11-21 13:03:49.524-05	2017-11-21 13:03:49.524-05
1019	6	templates	346	3	html	        <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n\n\n	2017-11-21 13:03:49.524-05	2017-11-21 13:03:49.524-05
1023	6	templates	346	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n	2017-11-21 13:03:49.524-05	2017-11-21 13:03:49.524-05
1026	13	templates	348	3	html	    <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n\n	2017-11-21 13:03:49.526-05	2017-11-21 13:03:49.526-05
1029	13	templates	348	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n\n	2017-11-21 13:03:49.526-05	2017-11-21 13:03:49.526-05
1042	15	templates	353	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:16:55.922-05	2017-11-21 13:16:55.922-05
1043	15	templates	353	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource = await this.apolloClinet.query({\n          \n        })\n        `{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: 3){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:16:55.922-05	2017-11-21 13:16:55.922-05
1044	15	templates	354	4	css	 \n	2017-11-21 13:17:20.963-05	2017-11-21 13:17:20.963-05
1045	15	templates	354	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:17:20.963-05	2017-11-21 13:17:20.963-05
1046	15	templates	354	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "admin_pages"){\n              name\n              id\n            }\n          }`\n        })\n        `{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: 3){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:17:20.963-05	2017-11-21 13:17:20.963-05
1054	15	templates	357	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:19:56.26-05	2017-11-21 13:19:56.26-05
1055	15	templates	357	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:19:56.26-05	2017-11-21 13:19:56.26-05
1056	15	templates	358	4	css	 \n	2017-11-21 13:20:06.281-05	2017-11-21 13:20:06.281-05
1057	15	templates	358	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:20:06.281-05	2017-11-21 13:20:06.281-05
1063	15	templates	360	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:20:41.343-05	2017-11-21 13:20:41.343-05
1077	11	items	365	1	path	/admin/create/resource/:resource_name	2017-11-21 13:23:54.207-05	2017-11-21 13:23:54.207-05
1078	11	items	365	2	template	adminCreateResource	2017-11-21 13:23:54.207-05	2017-11-21 13:23:54.207-05
1079	13	templates	366	4	css	 \n	2017-11-21 13:24:21.76-05	2017-11-21 13:24:21.76-05
1094	15	templates	371	4	css	 \n	2017-11-21 13:32:52.67-05	2017-11-21 13:32:52.67-05
432	6	templates	148	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
574	13	templates	197	4	css	\N	2017-11-21 11:24:59.74-05	2017-11-21 11:24:59.74-05
575	13	templates	197	3	html	<h1>Hello World</h1>	2017-11-21 11:24:59.74-05	2017-11-21 11:24:59.74-05
576	13	templates	197	5	js	module.exports = {\n    name: 'adminResourceList'\n  }	2017-11-21 11:24:59.74-05	2017-11-21 11:24:59.74-05
577	11	templates	198	9	css	 \n	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
578	11	templates	198	8	html	    <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
579	11	templates	198	10	js	module.exports={"name": 'defaultPage'}\n\n	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
601	13	templates	206	4	css	 \n	2017-11-21 11:25:26.767-05	2017-11-21 11:25:26.767-05
602	13	templates	206	3	html	  \n	2017-11-21 11:25:26.767-05	2017-11-21 11:25:26.767-05
603	13	templates	206	5	js	module.exports = {\n    name: 'adminResourceList'\n  }\n	2017-11-21 11:25:26.767-05	2017-11-21 11:25:26.767-05
720	3	templates	246	4	css	 \n	2017-11-21 11:45:39.06-05	2017-11-21 11:45:39.06-05
721	3	templates	246	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:45:39.06-05	2017-11-21 11:45:39.06-05
722	3	templates	246	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n\n	2017-11-21 11:45:39.06-05	2017-11-21 11:45:39.06-05
849	13	templates	289	4	css	 \n	2017-11-21 12:13:07.153-05	2017-11-21 12:13:07.153-05
850	13	templates	289	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    Create New {{ $route.params.resource_name }}\n  </card>\n  </div>\n	2017-11-21 12:13:07.153-05	2017-11-21 12:13:07.153-05
851	13	templates	289	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:13:07.153-05	2017-11-21 12:13:07.153-05
852	13	templates	290	4	css	 \n	2017-11-21 12:13:22.179-05	2017-11-21 12:13:22.179-05
853	13	templates	290	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n\n      Create New {{ $route.params.resource_name }}\n  </card>\n  </div>\n	2017-11-21 12:13:22.179-05	2017-11-21 12:13:22.179-05
854	13	templates	290	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:13:22.179-05	2017-11-21 12:13:22.179-05
910	14	templates	309	14	html	  <h1>Hello World</h1>\n	2017-11-21 12:31:49.32-05	2017-11-21 12:31:49.32-05
911	14	templates	309	16	js	module.exports = {\n    name: 'button'\n    props: []\n  }\n	2017-11-21 12:31:49.32-05	2017-11-21 12:31:49.32-05
912	14	templates	310	15	css	 \n	2017-11-21 12:32:04.353-05	2017-11-21 12:32:04.353-05
913	14	templates	310	14	html	  <h1>Hello World</h1>\n	2017-11-21 12:32:04.353-05	2017-11-21 12:32:04.353-05
914	14	templates	310	16	js	module.exports = {\n    name: 'button',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:32:04.353-05	2017-11-21 12:32:04.353-05
915	14	templates	311	15	css	 \n	2017-11-21 12:32:19.382-05	2017-11-21 12:32:19.382-05
916	14	templates	311	14	html	  <div class="">\n    </div>\n	2017-11-21 12:32:19.382-05	2017-11-21 12:32:19.382-05
917	14	templates	311	16	js	module.exports = {\n    name: 'button',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:32:19.382-05	2017-11-21 12:32:19.382-05
979	2	templates	334	4	css	 \n	2017-11-21 13:03:19.467-05	2017-11-21 13:03:19.467-05
983	2	templates	334	3	html	        <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n\n	2017-11-21 13:03:19.467-05	2017-11-21 13:03:19.467-05
989	2	templates	334	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n	2017-11-21 13:03:19.467-05	2017-11-21 13:03:19.467-05
1005	1	templates	341	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
1010	1	templates	341	3	html	        <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n\n\n	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
1017	1	templates	341	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
1031	14	templates	349	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n\n	2017-11-21 13:03:49.533-05	2017-11-21 13:03:49.533-05
1047	15	templates	355	4	css	 \n	2017-11-21 13:19:11.185-05	2017-11-21 13:19:11.185-05
1048	15	templates	355	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:19:11.185-05	2017-11-21 13:19:11.185-05
1074	15	templates	364	4	css	 \n	2017-11-21 13:22:16.532-05	2017-11-21 13:22:16.532-05
1075	15	templates	364	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:22:16.532-05	2017-11-21 13:22:16.532-05
1082	15	templates	367	4	css	 \n	2017-11-21 13:25:06.84-05	2017-11-21 13:25:06.84-05
1083	15	templates	367	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:25:06.84-05	2017-11-21 13:25:06.84-05
435	2	templates	150	4	css	 \n	2017-11-20 16:38:56.562-05	2017-11-20 16:38:56.562-05
436	2	templates	150	3	html	  <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n	2017-11-20 16:38:56.562-05	2017-11-20 16:38:56.562-05
437	2	templates	150	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n	2017-11-20 16:38:56.562-05	2017-11-20 16:38:56.562-05
441	11	templates	152	9	css	 \n	2017-11-20 16:39:11.599-05	2017-11-20 16:39:11.599-05
442	11	templates	152	8	html	  <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>	2017-11-20 16:39:11.599-05	2017-11-20 16:39:11.599-05
443	11	templates	152	10	js	module.exports={"name": 'homePage'}\n	2017-11-20 16:39:11.599-05	2017-11-20 16:39:11.599-05
580	9	templates	199	4	css	 \n	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
581	9	templates	199	3	html	          <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
582	9	templates	199	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n	2017-11-21 11:25:01.708-05	2017-11-21 11:25:01.708-05
723	3	templates	247	4	css	 \n	2017-11-21 11:46:44.197-05	2017-11-21 11:46:44.197-05
724	3	templates	247	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:46:44.197-05	2017-11-21 11:46:44.197-05
725	3	templates	247	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n      })\n    }\n  }\n\n	2017-11-21 11:46:44.197-05	2017-11-21 11:46:44.197-05
726	3	templates	248	4	css	 \n	2017-11-21 11:46:59.218-05	2017-11-21 11:46:59.218-05
727	3	templates	248	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:46:59.218-05	2017-11-21 11:46:59.218-05
728	3	templates	248	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log(resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:46:59.218-05	2017-11-21 11:46:59.218-05
732	3	templates	250	4	css	 \n	2017-11-21 11:47:24.26-05	2017-11-21 11:47:24.26-05
733	3	templates	250	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:47:24.26-05	2017-11-21 11:47:24.26-05
734	3	templates	250	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:47:24.26-05	2017-11-21 11:47:24.26-05
735	3	templates	251	4	css	 \n	2017-11-21 11:47:44.316-05	2017-11-21 11:47:44.316-05
736	3	templates	251	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </template>\n  </nav>\n	2017-11-21 11:47:44.316-05	2017-11-21 11:47:44.316-05
737	3	templates	251	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:47:44.316-05	2017-11-21 11:47:44.316-05
741	3	templates	253	4	css	 \n	2017-11-21 11:48:09.335-05	2017-11-21 11:48:09.335-05
742	3	templates	253	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <div v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </div>\n  </nav>\n	2017-11-21 11:48:09.335-05	2017-11-21 11:48:09.335-05
743	3	templates	253	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:48:09.335-05	2017-11-21 11:48:09.335-05
747	3	templates	255	4	css	 \n	2017-11-21 11:48:44.4-05	2017-11-21 11:48:44.4-05
748	3	templates	255	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <div v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </div>\n  </nav>\n	2017-11-21 11:48:44.4-05	2017-11-21 11:48:44.4-05
855	13	templates	291	4	css	 \n	2017-11-21 12:14:22.292-05	2017-11-21 12:14:22.292-05
856	13	templates	291	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :to=""></admin-menu-item>\n  </card>\n  </div>\n	2017-11-21 12:14:22.292-05	2017-11-21 12:14:22.292-05
918	14	templates	312	15	css	 \n	2017-11-21 12:34:09.597-05	2017-11-21 12:34:09.597-05
980	3	templates	333	4	css	 \n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
447	9	templates	154	4	css	 \n	2017-11-20 16:40:01.688-05	2017-11-20 16:40:01.688-05
448	9	templates	154	3	html	      <div>\n      <h1>All Pages</h1>\n      <div v-for="allPages">\n        <h1>{{name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:40:01.688-05	2017-11-20 16:40:01.688-05
449	9	templates	154	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:40:01.688-05	2017-11-20 16:40:01.688-05
450	9	templates	155	4	css	 \n	2017-11-20 16:40:16.713-05	2017-11-20 16:40:16.713-05
451	9	templates	155	3	html	      <div>\n      <h1>All Pages</h1>\n      <div :v-for="allPages">\n        <h1>{{name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:40:16.713-05	2017-11-20 16:40:16.713-05
452	9	templates	155	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:40:16.713-05	2017-11-20 16:40:16.713-05
583	10	templates	203	9	css	 \n	2017-11-21 11:25:01.717-05	2017-11-21 11:25:01.717-05
589	10	templates	203	8	html	  <h1></h1>\n	2017-11-21 11:25:01.717-05	2017-11-21 11:25:01.717-05
594	10	templates	203	10	js	module.exports={"name": 'homePage'}\n	2017-11-21 11:25:01.717-05	2017-11-21 11:25:01.717-05
729	3	templates	249	4	css	 \n	2017-11-21 11:47:14.246-05	2017-11-21 11:47:14.246-05
730	3	templates	249	3	html	nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item :path="/admin" :title="admin"></admin-menu-item>\n    </template>\n  </nav>\n\n	2017-11-21 11:47:14.246-05	2017-11-21 11:47:14.246-05
731	3	templates	249	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:47:14.246-05	2017-11-21 11:47:14.246-05
738	3	templates	252	4	css	 \n	2017-11-21 11:47:49.302-05	2017-11-21 11:47:49.302-05
739	3	templates	252	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <template v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </template>\n  </nav>\n	2017-11-21 11:47:49.302-05	2017-11-21 11:47:49.302-05
740	3	templates	252	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:47:49.302-05	2017-11-21 11:47:49.302-05
744	3	templates	254	4	css	 \n	2017-11-21 11:48:19.353-05	2017-11-21 11:48:19.353-05
745	3	templates	254	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <div v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </div>\n  </nav>\n	2017-11-21 11:48:19.353-05	2017-11-21 11:48:19.353-05
746	3	templates	254	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:48:19.353-05	2017-11-21 11:48:19.353-05
750	3	templates	256	4	css	 \n	2017-11-21 11:48:59.422-05	2017-11-21 11:48:59.422-05
751	3	templates	256	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <div v-for"item="" in="" resources"="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </div>\n  </nav>\n	2017-11-21 11:48:59.422-05	2017-11-21 11:48:59.422-05
752	3	templates	256	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:48:59.422-05	2017-11-21 11:48:59.422-05
753	3	templates	257	4	css	 \n	2017-11-21 11:49:14.459-05	2017-11-21 11:49:14.459-05
754	3	templates	257	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <div v-for'item="" in="" resources'="">\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    </div>\n  </nav>\n	2017-11-21 11:49:14.459-05	2017-11-21 11:49:14.459-05
755	3	templates	257	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:49:14.459-05	2017-11-21 11:49:14.459-05
919	14	templates	312	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:34:09.597-05	2017-11-21 12:34:09.597-05
920	14	templates	312	16	js	module.exports = {\n    name: 'button',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:34:09.597-05	2017-11-21 12:34:09.597-05
453	9	templates	156	4	css	 \n	2017-11-20 16:43:17.084-05	2017-11-20 16:43:17.084-05
454	9	templates	156	3	html	      <div>\n      <h1>All Pages</h1>\n      <div :v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:43:17.084-05	2017-11-20 16:43:17.084-05
455	9	templates	156	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:43:17.084-05	2017-11-20 16:43:17.084-05
456	9	templates	157	4	css	 \n	2017-11-20 16:43:37.111-05	2017-11-20 16:43:37.111-05
457	9	templates	157	3	html	      <div>\n      <h1>All Pages</h1>\n      <div :v-for="page in allPages">\n        <h1>{{page}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:43:37.111-05	2017-11-20 16:43:37.111-05
458	9	templates	157	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:43:37.111-05	2017-11-20 16:43:37.111-05
459	9	templates	158	4	css	 \n	2017-11-20 16:43:42.119-05	2017-11-20 16:43:42.119-05
460	9	templates	158	3	html	      <div>\n      <h1>All Pages</h1>\n      <div :v-for="page in allPages">\n        <h1>{{page}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:43:42.119-05	2017-11-20 16:43:42.119-05
461	9	templates	158	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:43:42.119-05	2017-11-20 16:43:42.119-05
462	9	templates	159	4	css	 \n	2017-11-20 16:44:02.153-05	2017-11-20 16:44:02.153-05
463	9	templates	159	3	html	      <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:44:02.153-05	2017-11-20 16:44:02.153-05
464	9	templates	159	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:44:02.153-05	2017-11-20 16:44:02.153-05
465	9	templates	160	4	css	 \n	2017-11-20 16:44:12.169-05	2017-11-20 16:44:12.169-05
466	9	templates	160	3	html	      <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-20 16:44:12.169-05	2017-11-20 16:44:12.169-05
467	9	templates	160	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n	2017-11-20 16:44:12.169-05	2017-11-20 16:44:12.169-05
584	1	templates	201	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
590	1	templates	201	3	html	  <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
595	1	templates	201	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
749	3	templates	255	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:48:44.4-05	2017-11-21 11:48:44.4-05
857	13	templates	291	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:14:22.292-05	2017-11-21 12:14:22.292-05
921	13	templates	313	4	css	 \n	2017-11-21 12:35:09.67-05	2017-11-21 12:35:09.67-05
922	13	templates	313	3	html	  <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </button></div>\n\n	2017-11-21 12:35:09.67-05	2017-11-21 12:35:09.67-05
982	11	templates	335	9	css	 \n	2017-11-21 13:03:19.469-05	2017-11-21 13:03:19.469-05
468	12	templates	161	15	css	\N	2017-11-21 10:33:53.859-05	2017-11-21 10:33:53.859-05
469	12	templates	161	14	html	<h1>Hello World</h1>	2017-11-21 10:33:53.859-05	2017-11-21 10:33:53.859-05
470	12	templates	161	16	js	module.exports = {\n    name: 'card'\n  }	2017-11-21 10:33:53.859-05	2017-11-21 10:33:53.859-05
585	6	templates	200	4	css	 \n	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
591	6	templates	200	3	html	  <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
596	6	templates	200	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
756	3	templates	258	4	css	 \n	2017-11-21 11:49:59.55-05	2017-11-21 11:49:59.55-05
757	3	templates	258	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:49:59.55-05	2017-11-21 11:49:59.55-05
758	3	templates	258	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:49:59.55-05	2017-11-21 11:49:59.55-05
759	3	templates	259	4	css	 \n	2017-11-21 11:50:19.581-05	2017-11-21 11:50:19.581-05
760	3	templates	259	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:50:19.581-05	2017-11-21 11:50:19.581-05
761	3	templates	259	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.nodes.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:50:19.581-05	2017-11-21 11:50:19.581-05
858	13	templates	292	4	css	 \n	2017-11-21 12:14:57.361-05	2017-11-21 12:14:57.361-05
859	13	templates	292	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :to="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="$route.params.resource_name"></admin-menu-item>\n  </card>\n  </div>\n	2017-11-21 12:14:57.361-05	2017-11-21 12:14:57.361-05
860	13	templates	292	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:14:57.361-05	2017-11-21 12:14:57.361-05
923	13	templates	313	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:35:09.67-05	2017-11-21 12:35:09.67-05
924	13	templates	314	4	css	 \n	2017-11-21 12:35:14.678-05	2017-11-21 12:35:14.678-05
925	13	templates	314	3	html	  <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </button></div>\n\n	2017-11-21 12:35:14.678-05	2017-11-21 12:35:14.678-05
926	13	templates	314	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:35:14.678-05	2017-11-21 12:35:14.678-05
930	13	templates	316	4	css	 \n	2017-11-21 12:35:29.709-05	2017-11-21 12:35:29.709-05
931	13	templates	316	3	html	<div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </button></div>\n\n	2017-11-21 12:35:29.709-05	2017-11-21 12:35:29.709-05
932	13	templates	316	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:35:29.709-05	2017-11-21 12:35:29.709-05
984	6	templates	336	4	css	 \n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
991	6	templates	336	3	html	      <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n\n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
995	6	templates	336	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
1022	13	templates	348	4	css	 \n	2017-11-21 13:03:49.526-05	2017-11-21 13:03:49.526-05
471	3	templates	162	4	css	 \n	2017-11-21 10:42:12.284-05	2017-11-21 10:42:12.284-05
472	3	templates	162	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 10:42:12.284-05	2017-11-21 10:42:12.284-05
473	3	templates	162	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center'\n        ]\n      }\n    }\n  }\n	2017-11-21 10:42:12.284-05	2017-11-21 10:42:12.284-05
474	3	templates	163	4	css	 \n	2017-11-21 10:42:32.26-05	2017-11-21 10:42:32.26-05
475	3	templates	163	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 10:42:32.26-05	2017-11-21 10:42:32.26-05
476	3	templates	163	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-content'\n        ]\n      }\n    }\n  }\n	2017-11-21 10:42:32.26-05	2017-11-21 10:42:32.26-05
477	3	templates	164	4	css	 \n	2017-11-21 10:42:37.265-05	2017-11-21 10:42:37.265-05
478	3	templates	164	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 10:42:37.265-05	2017-11-21 10:42:37.265-05
479	3	templates	164	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-center'\n        ]\n      }\n    }\n  }\n	2017-11-21 10:42:37.265-05	2017-11-21 10:42:37.265-05
480	3	templates	165	4	css	 \n	2017-11-21 10:43:02.306-05	2017-11-21 10:43:02.306-05
481	3	templates	165	3	html	<nav :class="classList">\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 10:43:02.306-05	2017-11-21 10:43:02.306-05
482	3	templates	165	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-center'\n        ]\n      }\n    }\n  }\n	2017-11-21 10:43:02.306-05	2017-11-21 10:43:02.306-05
483	6	templates	166	4	css	 \n	2017-11-21 10:43:12.334-05	2017-11-21 10:43:12.334-05
484	6	templates	166	3	html	<router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n	2017-11-21 10:43:12.334-05	2017-11-21 10:43:12.334-05
485	6	templates	166	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n\n\n	2017-11-21 10:43:12.334-05	2017-11-21 10:43:12.334-05
586	2	templates	202	4	css	 \n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
592	2	templates	202	3	html	    <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
598	2	templates	202	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
762	3	templates	260	4	css	 \n	2017-11-21 11:52:59.887-05	2017-11-21 11:52:59.887-05
763	3	templates	260	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item.name"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:52:59.887-05	2017-11-21 11:52:59.887-05
764	3	templates	260	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.nodes.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:52:59.887-05	2017-11-21 11:52:59.887-05
861	13	templates	293	4	css	 \n	2017-11-21 12:15:37.438-05	2017-11-21 12:15:37.438-05
862	13	templates	293	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="$route.params.resource_name"></admin-menu-item>\n  </card>\n  </div>\n	2017-11-21 12:15:37.438-05	2017-11-21 12:15:37.438-05
863	13	templates	293	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:15:37.438-05	2017-11-21 12:15:37.438-05
864	13	templates	294	4	css	 \n	2017-11-21 12:15:57.474-05	2017-11-21 12:15:57.474-05
865	13	templates	294	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name"></admin-menu-item>\n  </card>\n  </div>\n	2017-11-21 12:15:57.474-05	2017-11-21 12:15:57.474-05
866	13	templates	294	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:15:57.474-05	2017-11-21 12:15:57.474-05
927	13	templates	315	4	css	 \n	2017-11-21 12:35:24.699-05	2017-11-21 12:35:24.699-05
928	13	templates	315	3	html	<div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </button></div>\n\n	2017-11-21 12:35:24.699-05	2017-11-21 12:35:24.699-05
985	3	templates	333	3	html	    <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n\n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
1035	15	templates	351	4	css	 \n	2017-11-21 13:13:20.544-05	2017-11-21 13:13:20.544-05
1036	15	templates	351	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:13:20.544-05	2017-11-21 13:13:20.544-05
486	2	templates	167	4	css	 \n	2017-11-21 10:46:42.73-05	2017-11-21 10:46:42.73-05
487	2	templates	167	3	html	  <div class="flex">\n    <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n    </div>\n	2017-11-21 10:46:42.73-05	2017-11-21 10:46:42.73-05
488	2	templates	167	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n\n	2017-11-21 10:46:42.73-05	2017-11-21 10:46:42.73-05
489	2	templates	168	4	css	 \n	2017-11-21 10:46:47.73-05	2017-11-21 10:46:47.73-05
490	2	templates	168	3	html	  <div class="flex">\n    <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n    <router-view></router-view>\n    </div>\n	2017-11-21 10:46:47.73-05	2017-11-21 10:46:47.73-05
491	2	templates	168	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n\n	2017-11-21 10:46:47.73-05	2017-11-21 10:46:47.73-05
492	2	templates	169	4	css	 \n	2017-11-21 10:47:02.758-05	2017-11-21 10:47:02.758-05
493	2	templates	169	3	html	  <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <router-view class="p-4"></router-view>\n    </div>\n	2017-11-21 10:47:02.758-05	2017-11-21 10:47:02.758-05
494	2	templates	169	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n\n	2017-11-21 10:47:02.758-05	2017-11-21 10:47:02.758-05
587	12	templates	204	15	css	 \n	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
593	12	templates	204	14	html	    <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
599	12	templates	204	16	js	module.exports = {\n    name: 'card'\n  }\n\n	2017-11-21 11:25:01.719-05	2017-11-21 11:25:01.719-05
765	3	templates	261	4	css	 \n	2017-11-21 11:53:09.908-05	2017-11-21 11:53:09.908-05
766	3	templates	261	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:53:09.908-05	2017-11-21 11:53:09.908-05
767	3	templates	261	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        resources = r.data.allResources.nodes.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:53:09.908-05	2017-11-21 11:53:09.908-05
867	13	templates	295	4	css	 \n	2017-11-21 12:18:52.81-05	2017-11-21 12:18:52.81-05
868	13	templates	295	3	html	<div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name"></admin-menu-item>\n  </card>\n  </div>\n	2017-11-21 12:18:52.81-05	2017-11-21 12:18:52.81-05
869	13	templates	295	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:18:52.81-05	2017-11-21 12:18:52.81-05
929	13	templates	315	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:35:24.699-05	2017-11-21 12:35:24.699-05
987	14	templates	337	15	css	 \n	2017-11-21 13:03:19.47-05	2017-11-21 13:03:19.47-05
993	14	templates	337	14	html	    <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n	2017-11-21 13:03:19.47-05	2017-11-21 13:03:19.47-05
997	14	templates	337	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n\n	2017-11-21 13:03:19.47-05	2017-11-21 13:03:19.47-05
1021	11	templates	347	9	css	 \n	2017-11-21 13:03:49.525-05	2017-11-21 13:03:49.525-05
1024	11	templates	347	8	html	          <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n\n\n	2017-11-21 13:03:49.525-05	2017-11-21 13:03:49.525-05
1027	11	templates	347	10	js	module.exports={"name": 'defaultPage'}\n\n\n\n\n	2017-11-21 13:03:49.525-05	2017-11-21 13:03:49.525-05
1037	15	templates	351	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields() {\n        `{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: 3){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:13:20.544-05	2017-11-21 13:13:20.544-05
1049	15	templates	355	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        `{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: 3){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:19:11.185-05	2017-11-21 13:19:11.185-05
1058	15	templates	358	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      })\n    }\n  }\n	2017-11-21 13:20:06.281-05	2017-11-21 13:20:06.281-05
1059	15	templates	359	4	css	 \n	2017-11-21 13:20:31.344-05	2017-11-21 13:20:31.344-05
1060	15	templates	359	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:20:31.344-05	2017-11-21 13:20:31.344-05
1091	15	templates	370	4	css	 \n	2017-11-21 13:32:37.647-05	2017-11-21 13:32:37.647-05
495	2	templates	170	4	css	 \n	2017-11-21 10:47:37.828-05	2017-11-21 10:47:37.828-05
496	2	templates	170	3	html	  <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n	2017-11-21 10:47:37.828-05	2017-11-21 10:47:37.828-05
497	2	templates	170	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n\n	2017-11-21 10:47:37.828-05	2017-11-21 10:47:37.828-05
588	3	templates	205	4	css	 \n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
597	3	templates	205	3	html	    <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
600	3	templates	205	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    }\n  }\n\n	2017-11-21 11:25:01.718-05	2017-11-21 11:25:01.718-05
768	3	templates	262	4	css	 \n	2017-11-21 11:55:35.19-05	2017-11-21 11:55:35.19-05
769	3	templates	262	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:55:35.19-05	2017-11-21 11:55:35.19-05
770	3	templates	262	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:55:35.19-05	2017-11-21 11:55:35.19-05
870	13	templates	296	4	css	 \n	2017-11-21 12:19:27.876-05	2017-11-21 12:19:27.876-05
871	13	templates	296	3	html	<div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name"></admin-menu-item>\n  </card>\n  </div>\n	2017-11-21 12:19:27.876-05	2017-11-21 12:19:27.876-05
872	13	templates	296	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:19:27.876-05	2017-11-21 12:19:27.876-05
933	14	templates	317	15	css	 \n	2017-11-21 12:36:14.841-05	2017-11-21 12:36:14.841-05
934	14	templates	317	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:36:14.841-05	2017-11-21 12:36:14.841-05
935	14	templates	317	16	js	module.exports = {\n    name: 'button',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:36:14.841-05	2017-11-21 12:36:14.841-05
936	14	templates	318	15	css	 \n	2017-11-21 12:36:24.856-05	2017-11-21 12:36:24.856-05
937	14	templates	318	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:36:24.856-05	2017-11-21 12:36:24.856-05
938	14	templates	318	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:36:24.856-05	2017-11-21 12:36:24.856-05
939	9	templates	319	4	css	 \n	2017-11-21 12:36:39.831-05	2017-11-21 12:36:39.831-05
940	9	templates	319	3	html	            <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-21 12:36:39.831-05	2017-11-21 12:36:39.831-05
941	9	templates	319	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n	2017-11-21 12:36:39.831-05	2017-11-21 12:36:39.831-05
942	13	templates	320	4	css	 \n	2017-11-21 12:36:54.861-05	2017-11-21 12:36:54.861-05
943	13	templates	320	3	html	<div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </button></div>\n\n	2017-11-21 12:36:54.861-05	2017-11-21 12:36:54.861-05
944	13	templates	320	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:36:54.861-05	2017-11-21 12:36:54.861-05
945	14	templates	321	15	css	 \n	2017-11-21 12:37:04.931-05	2017-11-21 12:37:04.931-05
946	14	templates	321	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:37:04.931-05	2017-11-21 12:37:04.931-05
947	14	templates	321	16	js	module.exports = {\n    name: 'button',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:37:04.931-05	2017-11-21 12:37:04.931-05
988	11	templates	335	8	html	        <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n\n	2017-11-21 13:03:19.469-05	2017-11-21 13:03:19.469-05
994	11	templates	335	10	js	module.exports={"name": 'defaultPage'}\n\n\n\n	2017-11-21 13:03:19.469-05	2017-11-21 13:03:19.469-05
1028	14	templates	349	15	css	 \n	2017-11-21 13:03:49.533-05	2017-11-21 13:03:49.533-05
1030	14	templates	349	14	html	    <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n	2017-11-21 13:03:49.533-05	2017-11-21 13:03:49.533-05
1038	15	templates	352	4	css	 \n	2017-11-21 13:14:50.705-05	2017-11-21 13:14:50.705-05
498	3	templates	171	4	css	 \n	2017-11-21 10:48:12.898-05	2017-11-21 10:48:12.898-05
499	3	templates	171	3	html	<nav :class="classList">\n    <p>Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 10:48:12.898-05	2017-11-21 10:48:12.898-05
500	3	templates	171	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-center'\n        ]\n      }\n    }\n  }\n	2017-11-21 10:48:12.898-05	2017-11-21 10:48:12.898-05
604	13	templates	207	4	css	 \n	2017-11-21 11:26:51.936-05	2017-11-21 11:26:51.936-05
605	13	templates	207	3	html	\n	2017-11-21 11:26:51.936-05	2017-11-21 11:26:51.936-05
606	13	templates	207	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    }\n  }\n	2017-11-21 11:26:51.936-05	2017-11-21 11:26:51.936-05
607	13	templates	208	4	css	 \n	2017-11-21 11:27:21.999-05	2017-11-21 11:27:21.999-05
608	13	templates	208	3	html	\n	2017-11-21 11:27:21.999-05	2017-11-21 11:27:21.999-05
609	13	templates	208	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    }\n    beforeMount(){\n      \n    }\n  }\n	2017-11-21 11:27:21.999-05	2017-11-21 11:27:21.999-05
610	13	templates	209	4	css	 \n	2017-11-21 11:27:27.005-05	2017-11-21 11:27:27.005-05
611	13	templates	209	3	html	\n	2017-11-21 11:27:27.005-05	2017-11-21 11:27:27.005-05
612	13	templates	209	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    }\n    beforeMount(){\n      \n    }\n  }\n	2017-11-21 11:27:27.005-05	2017-11-21 11:27:27.005-05
613	3	templates	210	4	css	 \n	2017-11-21 11:27:42.005-05	2017-11-21 11:27:42.005-05
614	3	templates	210	3	html	    <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n	2017-11-21 11:27:42.005-05	2017-11-21 11:27:42.005-05
615	3	templates	210	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    }\n    beforeMount() {\n      console.log("BEFORe moutn")\n    }\n  }\n\n	2017-11-21 11:27:42.005-05	2017-11-21 11:27:42.005-05
616	3	templates	211	4	css	 \n	2017-11-21 11:27:47.015-05	2017-11-21 11:27:47.015-05
617	3	templates	211	3	html	    <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n\n	2017-11-21 11:27:47.015-05	2017-11-21 11:27:47.015-05
618	3	templates	211	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      console.log("BEFORe moutn")\n    }\n  }\n\n	2017-11-21 11:27:47.015-05	2017-11-21 11:27:47.015-05
619	13	templates	212	4	css	 \n	2017-11-21 11:28:12.09-05	2017-11-21 11:28:12.09-05
620	13	templates	212	3	html	\n	2017-11-21 11:28:12.09-05	2017-11-21 11:28:12.09-05
621	13	templates	212	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    }\n    beforeMount (){\n      \n    }\n  }\n	2017-11-21 11:28:12.09-05	2017-11-21 11:28:12.09-05
771	3	templates	263	4	css	 \n	2017-11-21 11:57:20.38-05	2017-11-21 11:57:20.38-05
772	3	templates	263	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:57:20.38-05	2017-11-21 11:57:20.38-05
773	3	templates	263	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name)\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:57:20.38-05	2017-11-21 11:57:20.38-05
873	3	templates	297	4	css	 \n	2017-11-21 12:29:44.058-05	2017-11-21 12:29:44.058-05
874	3	templates	297	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="reset-list">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 12:29:44.058-05	2017-11-21 12:29:44.058-05
875	3	templates	297	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 12:29:44.058-05	2017-11-21 12:29:44.058-05
948	14	templates	322	15	css	 \n	2017-11-21 12:38:10.057-05	2017-11-21 12:38:10.057-05
949	14	templates	322	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:38:10.057-05	2017-11-21 12:38:10.057-05
950	14	templates	322	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:38:10.057-05	2017-11-21 12:38:10.057-05
990	3	templates	333	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n\n	2017-11-21 13:03:19.468-05	2017-11-21 13:03:19.468-05
1014	9	templates	342	4	css	 \n	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
1018	9	templates	342	3	html	                <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n\n\n	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
501	9	templates	172	4	css	 \n	2017-11-21 10:52:03.345-05	2017-11-21 10:52:03.345-05
502	9	templates	172	3	html	        <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n	2017-11-21 10:52:03.345-05	2017-11-21 10:52:03.345-05
503	9	templates	172	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n	2017-11-21 10:52:03.345-05	2017-11-21 10:52:03.345-05
622	10	items	213	1	path	/admin/resource/:resource_name	2017-11-21 11:28:45.421-05	2017-11-21 11:28:45.421-05
623	10	items	213	2	template	adminResourceList	2017-11-21 11:28:45.421-05	2017-11-21 11:28:45.421-05
624	13	templates	214	4	css	 \n	2017-11-21 11:28:57.177-05	2017-11-21 11:28:57.177-05
625	13	templates	214	3	html	\n	2017-11-21 11:28:57.177-05	2017-11-21 11:28:57.177-05
626	13	templates	214	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    }\n    beforeMount (){\n      $route\n    }\n  }\n	2017-11-21 11:28:57.177-05	2017-11-21 11:28:57.177-05
627	13	templates	215	4	css	 \n	2017-11-21 11:29:27.227-05	2017-11-21 11:29:27.227-05
628	13	templates	215	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:29:27.227-05	2017-11-21 11:29:27.227-05
629	13	templates	215	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    }\n    beforeMount (){\n      console.log($route.params.resource_name)\n    }\n  }\n	2017-11-21 11:29:27.227-05	2017-11-21 11:29:27.227-05
630	13	templates	216	4	css	 \n	2017-11-21 11:29:32.237-05	2017-11-21 11:29:32.237-05
631	13	templates	216	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:29:32.237-05	2017-11-21 11:29:32.237-05
632	13	templates	216	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeMount (){\n      console.log($route.params.resource_name)\n    }\n  }\n	2017-11-21 11:29:32.237-05	2017-11-21 11:29:32.237-05
633	13	templates	217	4	css	 \n	2017-11-21 11:30:07.296-05	2017-11-21 11:30:07.296-05
634	13	templates	217	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:30:07.296-05	2017-11-21 11:30:07.296-05
635	13	templates	217	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    mounted (){\n      console.log($route.params.resource_name)\n    }\n  }\n	2017-11-21 11:30:07.296-05	2017-11-21 11:30:07.296-05
774	3	templates	264	4	css	 \n	2017-11-21 11:57:25.389-05	2017-11-21 11:57:25.389-05
775	3	templates	264	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:57:25.389-05	2017-11-21 11:57:25.389-05
776	3	templates	264	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:57:25.389-05	2017-11-21 11:57:25.389-05
876	3	templates	298	4	css	 \n	2017-11-21 12:30:19.124-05	2017-11-21 12:30:19.124-05
877	3	templates	298	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 12:30:19.124-05	2017-11-21 12:30:19.124-05
878	3	templates	298	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 12:30:19.124-05	2017-11-21 12:30:19.124-05
951	14	templates	323	15	css	 \n	2017-11-21 12:41:40.403-05	2017-11-21 12:41:40.403-05
952	14	templates	323	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:41:40.403-05	2017-11-21 12:41:40.403-05
953	14	templates	323	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:41:40.403-05	2017-11-21 12:41:40.403-05
954	14	templates	324	15	css	 \n	2017-11-21 12:41:45.402-05	2017-11-21 12:41:45.402-05
955	14	templates	324	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:41:45.402-05	2017-11-21 12:41:45.402-05
956	14	templates	324	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:41:45.402-05	2017-11-21 12:41:45.402-05
957	13	templates	325	4	css	 \n	2017-11-21 12:41:50.414-05	2017-11-21 12:41:50.414-05
958	13	templates	325	3	html	<div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n	2017-11-21 12:41:50.414-05	2017-11-21 12:41:50.414-05
959	13	templates	325	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:41:50.414-05	2017-11-21 12:41:50.414-05
992	13	templates	338	4	css	 \n	2017-11-21 13:03:19.471-05	2017-11-21 13:03:19.471-05
1039	15	templates	352	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:14:50.705-05	2017-11-21 13:14:50.705-05
1050	15	templates	356	4	css	 \n	2017-11-21 13:19:51.252-05	2017-11-21 13:19:51.252-05
504	1	templates	173	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 10:55:38.766-05	2017-11-21 10:55:38.766-05
505	1	templates	173	3	html	iv>\n<h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n</div>	2017-11-21 10:55:38.766-05	2017-11-21 10:55:38.766-05
506	1	templates	173	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 10:55:38.766-05	2017-11-21 10:55:38.766-05
636	13	templates	218	4	css	 \n	2017-11-21 11:30:12.306-05	2017-11-21 11:30:12.306-05
637	13	templates	218	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:30:12.306-05	2017-11-21 11:30:12.306-05
638	13	templates	218	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    mounted (){\n      console.log($route.params.resource_name)\n    }\n  }\n	2017-11-21 11:30:12.306-05	2017-11-21 11:30:12.306-05
777	3	templates	265	4	css	 \n	2017-11-21 11:58:45.553-05	2017-11-21 11:58:45.553-05
778	3	templates	265	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:58:45.553-05	2017-11-21 11:58:45.553-05
779	3	templates	265	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      root(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:58:45.553-05	2017-11-21 11:58:45.553-05
780	3	templates	266	4	css	 \n	2017-11-21 11:58:55.567-05	2017-11-21 11:58:55.567-05
781	3	templates	266	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item path="/admin" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:58:55.567-05	2017-11-21 11:58:55.567-05
782	3	templates	266	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:58:55.567-05	2017-11-21 11:58:55.567-05
783	3	templates	267	4	css	 \n	2017-11-21 11:59:05.587-05	2017-11-21 11:59:05.587-05
784	3	templates	267	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n	2017-11-21 11:59:05.587-05	2017-11-21 11:59:05.587-05
785	3	templates	267	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n	2017-11-21 11:59:05.587-05	2017-11-21 11:59:05.587-05
786	13	templates	268	4	css	 \n	2017-11-21 11:59:35.644-05	2017-11-21 11:59:35.644-05
787	13	templates	268	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:59:35.644-05	2017-11-21 11:59:35.644-05
788	13	templates	268	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods() {\n      loadResource: {\n\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        console.log(r)\n        this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:59:35.644-05	2017-11-21 11:59:35.644-05
789	13	templates	269	4	css	 \n	2017-11-21 11:59:55.677-05	2017-11-21 11:59:55.677-05
790	13	templates	269	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:59:55.677-05	2017-11-21 11:59:55.677-05
791	13	templates	269	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods() {\n      loadResource () {\n        this.$apolloClient.query({\n                query: this.$gql`{\n                    ${this.$route.params.resource_name} {\n                      nodes{\n                        items{\n                          nodes {\n                            name\n                            id\n                          }\n                        }\n                      }\n                    }\n                  }\n                `\n              }).then(r => {\n                console.log(r)\n                this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n              })\n       }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      \n    }\n  }\n	2017-11-21 11:59:55.677-05	2017-11-21 11:59:55.677-05
507	2	templates	174	4	css	 \n	2017-11-21 10:57:08.925-05	2017-11-21 10:57:08.925-05
508	2	templates	174	3	html	  <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n	2017-11-21 10:57:08.925-05	2017-11-21 10:57:08.925-05
509	2	templates	174	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n	2017-11-21 10:57:08.925-05	2017-11-21 10:57:08.925-05
639	13	templates	219	4	css	 \n	2017-11-21 11:31:12.414-05	2017-11-21 11:31:12.414-05
640	13	templates	219	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:31:12.414-05	2017-11-21 11:31:12.414-05
641	13	templates	219	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    mounted (){\n      console.log(this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:31:12.414-05	2017-11-21 11:31:12.414-05
642	13	templates	220	4	css	 \n	2017-11-21 11:31:22.433-05	2017-11-21 11:31:22.433-05
643	13	templates	220	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:31:22.433-05	2017-11-21 11:31:22.433-05
644	13	templates	220	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeMount (){\n      console.log(this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:31:22.433-05	2017-11-21 11:31:22.433-05
645	13	templates	221	4	css	 \n	2017-11-21 11:31:32.444-05	2017-11-21 11:31:32.444-05
646	13	templates	221	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:31:32.444-05	2017-11-21 11:31:32.444-05
647	13	templates	221	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    created (){\n      console.log(this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:31:32.444-05	2017-11-21 11:31:32.444-05
651	13	templates	223	4	css	 \n	2017-11-21 11:32:02.505-05	2017-11-21 11:32:02.505-05
652	13	templates	223	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:32:02.505-05	2017-11-21 11:32:02.505-05
653	13	templates	223	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('created', this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:32:02.505-05	2017-11-21 11:32:02.505-05
792	13	templates	270	4	css	 \n	2017-11-21 12:00:05.692-05	2017-11-21 12:00:05.692-05
793	13	templates	270	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:00:05.692-05	2017-11-21 12:00:05.692-05
794	13	templates	270	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods() {\n      loadResource () {\n        this.$apolloClient.query({\n                query: this.$gql`{\n                    ${this.$route.params.resource_name} {\n                      nodes{\n                        items{\n                          nodes {\n                            name\n                            id\n                          }\n                        }\n                      }\n                    }\n                  }\n                `\n              }).then(r => {\n                console.log(r)\n                this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n              })\n       }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      \n    }\n  }\n	2017-11-21 12:00:05.692-05	2017-11-21 12:00:05.692-05
795	13	templates	271	4	css	 \n	2017-11-21 12:00:10.705-05	2017-11-21 12:00:10.705-05
796	13	templates	271	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:00:10.705-05	2017-11-21 12:00:10.705-05
797	13	templates	271	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods() {\n      loadResource () {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    beforeCreate (){\n      this.loadResource();      \n    }\n  }\n	2017-11-21 12:00:10.705-05	2017-11-21 12:00:10.705-05
798	13	templates	272	4	css	 \n	2017-11-21 12:00:20.719-05	2017-11-21 12:00:20.719-05
799	13	templates	272	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:00:20.719-05	2017-11-21 12:00:20.719-05
800	13	templates	272	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    beforeCreate (){\n      this.loadResource();      \n    }\n  }\n	2017-11-21 12:00:20.719-05	2017-11-21 12:00:20.719-05
801	13	templates	273	4	css	 \n	2017-11-21 12:00:40.758-05	2017-11-21 12:00:40.758-05
802	13	templates	273	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:00:40.758-05	2017-11-21 12:00:40.758-05
803	13	templates	273	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    beforeCreate (){\n      this.loadResource();      \n    },\n    beforeUpdate(){\n      this.loadResource();\n    }\n  }\n	2017-11-21 12:00:40.758-05	2017-11-21 12:00:40.758-05
804	13	templates	274	4	css	 \n	2017-11-21 12:00:45.77-05	2017-11-21 12:00:45.77-05
805	13	templates	274	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:00:45.77-05	2017-11-21 12:00:45.77-05
879	14	templates	299	15	css	\N	2017-11-21 12:31:27.528-05	2017-11-21 12:31:27.528-05
880	14	templates	299	14	html	<h1>Hello World</h1>	2017-11-21 12:31:27.528-05	2017-11-21 12:31:27.528-05
881	14	templates	299	16	js	module.exports = {\n    name: 'button'\n  }	2017-11-21 12:31:27.528-05	2017-11-21 12:31:27.528-05
882	10	templates	300	9	css	 \n	2017-11-21 12:31:29.273-05	2017-11-21 12:31:29.273-05
883	10	templates	300	8	html	    <h1></h1>\n\n	2017-11-21 12:31:29.273-05	2017-11-21 12:31:29.273-05
884	10	templates	300	10	js	module.exports={"name": 'homePage'}\n\n	2017-11-21 12:31:29.273-05	2017-11-21 12:31:29.273-05
909	14	templates	309	15	css	 \n	2017-11-21 12:31:49.32-05	2017-11-21 12:31:49.32-05
510	3	templates	175	4	css	 \n	2017-11-21 11:00:39.33-05	2017-11-21 11:00:39.33-05
511	3	templates	175	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 11:00:39.33-05	2017-11-21 11:00:39.33-05
512	3	templates	175	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-center'\n        ]\n      }\n    }\n  }\n	2017-11-21 11:00:39.33-05	2017-11-21 11:00:39.33-05
648	13	templates	222	4	css	 \n	2017-11-21 11:31:47.473-05	2017-11-21 11:31:47.473-05
649	13	templates	222	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:31:47.473-05	2017-11-21 11:31:47.473-05
650	13	templates	222	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    created (){\n      console.log('created', this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:31:47.473-05	2017-11-21 11:31:47.473-05
654	13	templates	224	4	css	 \n	2017-11-21 11:32:07.514-05	2017-11-21 11:32:07.514-05
655	13	templates	224	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:32:07.514-05	2017-11-21 11:32:07.514-05
656	13	templates	224	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:32:07.514-05	2017-11-21 11:32:07.514-05
657	13	templates	225	4	css	 \n	2017-11-21 11:32:12.526-05	2017-11-21 11:32:12.526-05
658	13	templates	225	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:32:12.526-05	2017-11-21 11:32:12.526-05
659	13	templates	225	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n    }\n  }\n	2017-11-21 11:32:12.526-05	2017-11-21 11:32:12.526-05
806	13	templates	274	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    beforeCreate (){\n      this.loadResource()\n    },\n    beforeUpdate(){\n      this.loadResource()\n    }\n  }\n	2017-11-21 12:00:45.77-05	2017-11-21 12:00:45.77-05
807	13	templates	275	4	css	 \n	2017-11-21 12:01:05.801-05	2017-11-21 12:01:05.801-05
808	13	templates	275	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:01:05.801-05	2017-11-21 12:01:05.801-05
809	13	templates	275	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    beforeMount (){\n      this.loadResource()\n    },\n    beforeUpdate(){\n      this.loadResource()\n    }\n  }\n	2017-11-21 12:01:05.801-05	2017-11-21 12:01:05.801-05
810	13	templates	276	4	css	 \n	2017-11-21 12:01:20.833-05	2017-11-21 12:01:20.833-05
811	13	templates	276	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:01:20.833-05	2017-11-21 12:01:20.833-05
812	13	templates	276	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    beforeMount (){\n      this.loadResource()\n    },\n    beforeUpdate(){\n      this.loadResource()\n    }\n  }\n	2017-11-21 12:01:20.833-05	2017-11-21 12:01:20.833-05
813	13	templates	277	4	css	 \n	2017-11-21 12:01:30.849-05	2017-11-21 12:01:30.849-05
814	13	templates	277	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:01:30.849-05	2017-11-21 12:01:30.849-05
815	13	templates	277	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    created (){\n      this.loadResource()\n    },\n    beforeUpdate(){\n      this.loadResource()\n    }\n  }\n	2017-11-21 12:01:30.849-05	2017-11-21 12:01:30.849-05
885	9	templates	301	4	css	 \n	2017-11-21 12:31:29.275-05	2017-11-21 12:31:29.275-05
886	9	templates	301	3	html	            <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n	2017-11-21 12:31:29.275-05	2017-11-21 12:31:29.275-05
887	9	templates	301	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n	2017-11-21 12:31:29.275-05	2017-11-21 12:31:29.275-05
960	14	templates	326	15	css	 \n	2017-11-21 12:44:45.75-05	2017-11-21 12:44:45.75-05
961	14	templates	326	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path">{{title}}</router-link>\n    </div>\n	2017-11-21 12:44:45.75-05	2017-11-21 12:44:45.75-05
962	14	templates	326	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:44:45.75-05	2017-11-21 12:44:45.75-05
1062	15	templates	360	4	css	 \n	2017-11-21 13:20:41.343-05	2017-11-21 13:20:41.343-05
513	6	templates	176	4	css	 \n	2017-11-21 11:05:29.864-05	2017-11-21 11:05:29.864-05
514	6	templates	176	3	html	<router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n	2017-11-21 11:05:29.864-05	2017-11-21 11:05:29.864-05
515	6	templates	176	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n	2017-11-21 11:05:29.864-05	2017-11-21 11:05:29.864-05
516	1	templates	177	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 11:06:19.955-05	2017-11-21 11:06:19.955-05
517	1	templates	177	3	html	1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n	2017-11-21 11:06:19.955-05	2017-11-21 11:06:19.955-05
518	1	templates	177	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 11:06:19.955-05	2017-11-21 11:06:19.955-05
519	1	templates	178	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 11:06:34.986-05	2017-11-21 11:06:34.986-05
520	1	templates	178	3	html	<div>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </div>\n	2017-11-21 11:06:34.986-05	2017-11-21 11:06:34.986-05
521	1	templates	178	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 11:06:34.986-05	2017-11-21 11:06:34.986-05
522	8	items	179	1	path	/admin/2	2017-11-21 11:06:59.595-05	2017-11-21 11:06:59.595-05
523	8	items	179	2	template	adminPageList	2017-11-21 11:06:59.595-05	2017-11-21 11:06:59.595-05
524	9	items	180	1	path	/admin/2	2017-11-21 11:07:00.214-05	2017-11-21 11:07:00.214-05
525	9	items	180	2	template	adminPageList	2017-11-21 11:07:00.214-05	2017-11-21 11:07:00.214-05
660	13	templates	226	4	css	 \n	2017-11-21 11:33:42.697-05	2017-11-21 11:33:42.697-05
661	13	templates	226	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:33:42.697-05	2017-11-21 11:33:42.697-05
662	13	templates	226	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                \n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:33:42.697-05	2017-11-21 11:33:42.697-05
663	13	templates	227	4	css	 \n	2017-11-21 11:33:52.708-05	2017-11-21 11:33:52.708-05
664	13	templates	227	3	html	<h1>{{$route.params.resource_name}}</h1>\n	2017-11-21 11:33:52.708-05	2017-11-21 11:33:52.708-05
665	13	templates	227	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:33:52.708-05	2017-11-21 11:33:52.708-05
816	13	templates	278	4	css	 \n	2017-11-21 12:01:45.878-05	2017-11-21 12:01:45.878-05
817	13	templates	278	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:01:45.878-05	2017-11-21 12:01:45.878-05
818	13	templates	278	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n    beforeUpdate(){\n      this.loadResource()\n    }\n  }\n	2017-11-21 12:01:45.878-05	2017-11-21 12:01:45.878-05
819	13	templates	279	4	css	 \n	2017-11-21 12:02:30.961-05	2017-11-21 12:02:30.961-05
820	13	templates	279	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:02:30.961-05	2017-11-21 12:02:30.961-05
821	13	templates	279	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n    updated(){\n      this.loadResource()\n    }\n  }\n	2017-11-21 12:02:30.961-05	2017-11-21 12:02:30.961-05
888	6	templates	302	4	css	 \n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
895	6	templates	302	3	html	    <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
899	6	templates	302	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
963	14	templates	327	15	css	 \n	2017-11-21 12:45:05.785-05	2017-11-21 12:45:05.785-05
964	14	templates	327	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline">{{title}}</router-link>\n    </div>\n	2017-11-21 12:45:05.785-05	2017-11-21 12:45:05.785-05
965	14	templates	327	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:45:05.785-05	2017-11-21 12:45:05.785-05
966	14	templates	328	15	css	 \n	2017-11-21 12:45:15.808-05	2017-11-21 12:45:15.808-05
526	3	templates	181	4	css	 \n	2017-11-21 11:10:40.461-05	2017-11-21 11:10:40.461-05
527	3	templates	181	3	html	<nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 11:10:40.461-05	2017-11-21 11:10:40.461-05
528	3	templates	181	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    }\n  }\n	2017-11-21 11:10:40.461-05	2017-11-21 11:10:40.461-05
666	13	templates	228	4	css	 \n	2017-11-21 11:34:27.777-05	2017-11-21 11:34:27.777-05
667	13	templates	228	3	html	<ul v-for="item in resourceItems">\n    <li>\n  </li></ul>\n	2017-11-21 11:34:27.777-05	2017-11-21 11:34:27.777-05
668	13	templates	228	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:34:27.777-05	2017-11-21 11:34:27.777-05
669	13	templates	229	4	css	 \n	2017-11-21 11:34:37.792-05	2017-11-21 11:34:37.792-05
670	13	templates	229	3	html	<div>\n  <ul v-for="item in resourceItems">\n    <li>\n  </li></ul>\n  </div>\n	2017-11-21 11:34:37.792-05	2017-11-21 11:34:37.792-05
671	13	templates	229	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:34:37.792-05	2017-11-21 11:34:37.792-05
672	13	templates	230	4	css	 \n	2017-11-21 11:34:42.799-05	2017-11-21 11:34:42.799-05
673	13	templates	230	3	html	<div>\n  <ul v-for="item in resourceItems">\n    <li>\n  </li></ul>\n  </div>\n	2017-11-21 11:34:42.799-05	2017-11-21 11:34:42.799-05
674	13	templates	230	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:34:42.799-05	2017-11-21 11:34:42.799-05
675	13	templates	231	4	css	 \n	2017-11-21 11:35:12.856-05	2017-11-21 11:35:12.856-05
676	13	templates	231	3	html	<div>\n    <ul v-for="item in resourceItems">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:35:12.856-05	2017-11-21 11:35:12.856-05
677	13	templates	231	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: []\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:35:12.856-05	2017-11-21 11:35:12.856-05
822	13	templates	280	4	css	 \n	2017-11-21 12:03:26.059-05	2017-11-21 12:03:26.059-05
823	13	templates	280	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:03:26.059-05	2017-11-21 12:03:26.059-05
824	13	templates	280	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n  }\n	2017-11-21 12:03:26.059-05	2017-11-21 12:03:26.059-05
889	1	templates	303	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 12:31:29.285-05	2017-11-21 12:31:29.285-05
896	1	templates	303	3	html	    <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n	2017-11-21 12:31:29.285-05	2017-11-21 12:31:29.285-05
900	1	templates	303	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 12:31:29.285-05	2017-11-21 12:31:29.285-05
967	14	templates	328	14	html	  <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n	2017-11-21 12:45:15.808-05	2017-11-21 12:45:15.808-05
968	14	templates	328	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 12:45:15.808-05	2017-11-21 12:45:15.808-05
996	13	templates	338	3	html	  <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n	2017-11-21 13:03:19.471-05	2017-11-21 13:03:19.471-05
998	13	templates	338	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n	2017-11-21 13:03:19.471-05	2017-11-21 13:03:19.471-05
1006	2	templates	343	4	css	 \n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
529	12	templates	182	15	css	 \n	2017-11-21 11:14:05.847-05	2017-11-21 11:14:05.847-05
530	12	templates	182	14	html	  <div class="">\n    </div>\n	2017-11-21 11:14:05.847-05	2017-11-21 11:14:05.847-05
531	12	templates	182	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:14:05.847-05	2017-11-21 11:14:05.847-05
678	13	templates	232	4	css	 \n	2017-11-21 11:36:02.959-05	2017-11-21 11:36:02.959-05
679	13	templates	232	3	html	<div>\n    <ul v-for="item in resourceItems">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:36:02.959-05	2017-11-21 11:36:02.959-05
680	13	templates	232	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        resourceItems: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:36:02.959-05	2017-11-21 11:36:02.959-05
681	13	templates	233	4	css	 \n	2017-11-21 11:36:22.99-05	2017-11-21 11:36:22.99-05
682	13	templates	233	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:36:22.99-05	2017-11-21 11:36:22.99-05
683	13	templates	233	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:36:22.99-05	2017-11-21 11:36:22.99-05
684	13	templates	234	4	css	 \n	2017-11-21 11:36:33.013-05	2017-11-21 11:36:33.013-05
685	13	templates	234	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:36:33.013-05	2017-11-21 11:36:33.013-05
686	13	templates	234	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                name\n                id\n              }\n            }\n          }\n        `\n      })\n    }\n  }\n	2017-11-21 11:36:33.013-05	2017-11-21 11:36:33.013-05
825	13	templates	281	4	css	 \n	2017-11-21 12:05:16.268-05	2017-11-21 12:05:16.268-05
826	13	templates	281	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:05:16.268-05	2017-11-21 12:05:16.268-05
827	13	templates	281	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    methods: {\n      loadResource() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n  }\n	2017-11-21 12:05:16.268-05	2017-11-21 12:05:16.268-05
828	13	templates	282	4	css	 \n	2017-11-21 12:05:46.325-05	2017-11-21 12:05:46.325-05
829	13	templates	282	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:05:46.325-05	2017-11-21 12:05:46.325-05
830	13	templates	282	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    computed: {\n      items() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n  }\n	2017-11-21 12:05:46.325-05	2017-11-21 12:05:46.325-05
831	13	templates	283	4	css	 \n	2017-11-21 12:06:11.367-05	2017-11-21 12:06:11.367-05
832	13	templates	283	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:06:11.367-05	2017-11-21 12:06:11.367-05
833	13	templates	283	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    computed: {\n      items() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n  }\n	2017-11-21 12:06:11.367-05	2017-11-21 12:06:11.367-05
890	13	templates	304	4	css	 \n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
897	13	templates	304	3	html	  <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  <card>\n    <admin-menu-item :path="&apos;/admin/resource/create/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name"></admin-menu-item>\n  </card>\n  </div>\n\n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
903	13	templates	304	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
969	15	templates	329	4	css	\N	2017-11-21 13:03:17.091-05	2017-11-21 13:03:17.091-05
970	15	templates	329	3	html	<h1>Hello World</h1>	2017-11-21 13:03:17.091-05	2017-11-21 13:03:17.091-05
971	15	templates	329	5	js	module.exports = {\n    name: 'adminCreateResource'\n  }	2017-11-21 13:03:17.091-05	2017-11-21 13:03:17.091-05
972	9	templates	330	4	css	 \n	2017-11-21 13:03:19.458-05	2017-11-21 13:03:19.458-05
1051	15	templates	356	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:19:51.252-05	2017-11-21 13:19:51.252-05
532	12	templates	183	15	css	 \n	2017-11-21 11:15:15.996-05	2017-11-21 11:15:15.996-05
533	12	templates	183	14	html	  <div class="">\n      <slot>\n    </slot></div>\n	2017-11-21 11:15:15.996-05	2017-11-21 11:15:15.996-05
534	12	templates	183	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:15:15.996-05	2017-11-21 11:15:15.996-05
535	3	templates	184	4	css	 \n	2017-11-21 11:15:41.015-05	2017-11-21 11:15:41.015-05
536	3	templates	184	3	html	  <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 11:15:41.015-05	2017-11-21 11:15:41.015-05
537	3	templates	184	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    }\n  }\n	2017-11-21 11:15:41.015-05	2017-11-21 11:15:41.015-05
538	3	templates	185	4	css	 \n	2017-11-21 11:16:01.054-05	2017-11-21 11:16:01.054-05
539	3	templates	185	3	html	<card>\n    <nav :class="classList">\n      <p class="p-4">Smart Site Admin</p>\n      <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n      <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n    </nav>\n  </card>\n	2017-11-21 11:16:01.054-05	2017-11-21 11:16:01.054-05
540	3	templates	185	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    }\n  }\n	2017-11-21 11:16:01.054-05	2017-11-21 11:16:01.054-05
687	13	templates	235	4	css	 \n	2017-11-21 11:37:08.088-05	2017-11-21 11:37:08.088-05
688	13	templates	235	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:37:08.088-05	2017-11-21 11:37:08.088-05
689	13	templates	235	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`\n          ${this.$route.params.resource_name} {\n            nodes{\n              items{\n                nodes {\n                  name\n                  id\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        this.items = r.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:37:08.088-05	2017-11-21 11:37:08.088-05
834	13	templates	284	4	css	 \n	2017-11-21 12:07:16.481-05	2017-11-21 12:07:16.481-05
835	13	templates	284	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:07:16.481-05	2017-11-21 12:07:16.481-05
836	13	templates	284	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    computed: {\n      items() {\n        this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n  }\n	2017-11-21 12:07:16.481-05	2017-11-21 12:07:16.481-05
891	12	templates	306	15	css	 \n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
898	12	templates	306	14	html	      <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n\n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
905	12	templates	306	16	js	module.exports = {\n    name: 'card'\n  }\n\n\n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
973	9	templates	330	3	html	              <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n\n	2017-11-21 13:03:19.458-05	2017-11-21 13:03:19.458-05
974	9	templates	330	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n\n	2017-11-21 13:03:19.458-05	2017-11-21 13:03:19.458-05
999	14	templates	339	15	css	 \n	2017-11-21 13:03:34.471-05	2017-11-21 13:03:34.471-05
1000	14	templates	339	14	html	    <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n	2017-11-21 13:03:34.471-05	2017-11-21 13:03:34.471-05
1001	14	templates	339	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n	2017-11-21 13:03:34.471-05	2017-11-21 13:03:34.471-05
1007	10	templates	344	9	css	 \n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1009	10	templates	344	8	html	        <h1></h1>\n\n\n\n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1013	2	templates	343	3	html	          <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n\n\n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1015	10	templates	344	10	js	module.exports={"name": 'homePage'}\n\n\n\n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1020	2	templates	343	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n	2017-11-21 13:03:49.523-05	2017-11-21 13:03:49.523-05
1032	12	templates	350	15	css	 \n	2017-11-21 13:03:49.54-05	2017-11-21 13:03:49.54-05
1033	12	templates	350	14	html	        <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n\n\n	2017-11-21 13:03:49.54-05	2017-11-21 13:03:49.54-05
1034	12	templates	350	16	js	module.exports = {\n    name: 'card'\n  }\n\n\n\n	2017-11-21 13:03:49.54-05	2017-11-21 13:03:49.54-05
1040	15	templates	352	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource = await this.apolloClinet.query({})\n        `{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: 3){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:14:50.705-05	2017-11-21 13:14:50.705-05
1052	15	templates	356	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const resource = await this.apolloClinet.query({\n          query: this.$gql{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n      }\n    }\n  }\n	2017-11-21 13:19:51.252-05	2017-11-21 13:19:51.252-05
1053	15	templates	357	4	css	 \n	2017-11-21 13:19:56.26-05	2017-11-21 13:19:56.26-05
541	12	templates	186	15	css	 \n	2017-11-21 11:16:01.061-05	2017-11-21 11:16:01.061-05
542	12	templates	186	14	html	  <div class="">\n      <slot>\n    </slot></div>\n	2017-11-21 11:16:01.061-05	2017-11-21 11:16:01.061-05
543	12	templates	186	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:16:01.061-05	2017-11-21 11:16:01.061-05
690	13	templates	236	4	css	 \n	2017-11-21 11:38:48.275-05	2017-11-21 11:38:48.275-05
691	13	templates	236	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:38:48.275-05	2017-11-21 11:38:48.275-05
692	13	templates	236	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        this.items = r.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:38:48.275-05	2017-11-21 11:38:48.275-05
693	13	templates	237	4	css	 \n	2017-11-21 11:39:08.312-05	2017-11-21 11:39:08.312-05
694	13	templates	237	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:39:08.312-05	2017-11-21 11:39:08.312-05
695	13	templates	237	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        console.log(r)\n        this.items = r.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:39:08.312-05	2017-11-21 11:39:08.312-05
699	13	templates	239	4	css	 \n	2017-11-21 11:39:28.351-05	2017-11-21 11:39:28.351-05
700	13	templates	239	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:39:28.351-05	2017-11-21 11:39:28.351-05
701	13	templates	239	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        console.log(r)\n        this.items = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:39:28.351-05	2017-11-21 11:39:28.351-05
705	13	templates	241	4	css	 \n	2017-11-21 11:40:03.425-05	2017-11-21 11:40:03.425-05
706	13	templates	241	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:40:03.425-05	2017-11-21 11:40:03.425-05
707	13	templates	241	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        console.log(r)\n        this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:40:03.425-05	2017-11-21 11:40:03.425-05
837	13	templates	285	4	css	 \n	2017-11-21 12:09:16.709-05	2017-11-21 12:09:16.709-05
838	13	templates	285	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:09:16.709-05	2017-11-21 12:09:16.709-05
839	13	templates	285	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n    mounted (){\n      this.loadResource()\n    },\n  }\n	2017-11-21 12:09:16.709-05	2017-11-21 12:09:16.709-05
892	3	templates	307	4	css	 \n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
902	3	templates	307	3	html	  <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
907	3	templates	307	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n	2017-11-21 12:31:29.286-05	2017-11-21 12:31:29.286-05
975	1	templates	331	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 13:03:19.459-05	2017-11-21 13:03:19.459-05
976	1	templates	331	3	html	      <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n\n	2017-11-21 13:03:19.459-05	2017-11-21 13:03:19.459-05
1025	9	templates	342	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n\n\n	2017-11-21 13:03:49.522-05	2017-11-21 13:03:49.522-05
544	12	templates	187	15	css	 \n	2017-11-21 11:16:41.125-05	2017-11-21 11:16:41.125-05
545	12	templates	187	14	html	  <div class="">\n      <slot>\n    </slot></div>\n	2017-11-21 11:16:41.125-05	2017-11-21 11:16:41.125-05
546	12	templates	187	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:16:41.125-05	2017-11-21 11:16:41.125-05
547	12	templates	188	15	css	 \n	2017-11-21 11:17:06.169-05	2017-11-21 11:17:06.169-05
548	12	templates	188	14	html	  <div class="">\n      <h1>I am a card</h1>\n      <slot></slot>\n    </div>\n	2017-11-21 11:17:06.169-05	2017-11-21 11:17:06.169-05
549	12	templates	188	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:17:06.169-05	2017-11-21 11:17:06.169-05
550	12	templates	189	15	css	 \n	2017-11-21 11:17:26.204-05	2017-11-21 11:17:26.204-05
551	12	templates	189	14	html	  <div class="">\n      <h1>I am a card</h1>\n      <slot></slot>\n    </div>\n	2017-11-21 11:17:26.204-05	2017-11-21 11:17:26.204-05
552	12	templates	189	16	js	module.exports = {\n    name: 'adminCard'\n  }\n	2017-11-21 11:17:26.204-05	2017-11-21 11:17:26.204-05
553	12	templates	190	15	css	 \n	2017-11-21 11:17:40.783-05	2017-11-21 11:17:40.783-05
554	12	templates	190	14	html	  <div class="">\n      <h1>I am a card</h1>\n      <slot></slot>\n    </div>\n	2017-11-21 11:17:40.783-05	2017-11-21 11:17:40.783-05
555	12	templates	190	16	js	module.exports = {\n    name: 'card'\n  }\n	2017-11-21 11:17:40.783-05	2017-11-21 11:17:40.783-05
556	3	templates	191	4	css	 \n	2017-11-21 11:17:55.81-05	2017-11-21 11:17:55.81-05
557	3	templates	191	3	html	  <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n    <admin-menu-item path="/admin" title="admin"></admin-menu-item>\n    <admin-menu-item path="/admin/page" title="page"></admin-menu-item>\n  </nav>\n	2017-11-21 11:17:55.81-05	2017-11-21 11:17:55.81-05
558	3	templates	191	5	js	module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    }\n  }\n	2017-11-21 11:17:55.81-05	2017-11-21 11:17:55.81-05
559	1	templates	192	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 11:18:05.826-05	2017-11-21 11:18:05.826-05
560	1	templates	192	3	html	<card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n	2017-11-21 11:18:05.826-05	2017-11-21 11:18:05.826-05
561	1	templates	192	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 11:18:05.826-05	2017-11-21 11:18:05.826-05
562	1	templates	193	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 11:18:15.839-05	2017-11-21 11:18:15.839-05
563	1	templates	193	3	html	<card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n	2017-11-21 11:18:15.839-05	2017-11-21 11:18:15.839-05
564	1	templates	193	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 11:18:15.839-05	2017-11-21 11:18:15.839-05
696	13	templates	238	4	css	 \n	2017-11-21 11:39:18.334-05	2017-11-21 11:39:18.334-05
697	13	templates	238	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:39:18.334-05	2017-11-21 11:39:18.334-05
698	13	templates	238	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        console.log(r)\n        this.items = r.data.nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:39:18.334-05	2017-11-21 11:39:18.334-05
702	13	templates	240	4	css	 \n	2017-11-21 11:39:38.375-05	2017-11-21 11:39:38.375-05
703	13	templates	240	3	html	<div>\n    <ul :v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 11:39:38.375-05	2017-11-21 11:39:38.375-05
704	13	templates	240	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        items: [{\n          id: "0",\n          name: "loading"\n        }]\n      }\n    },\n    beforeCreate (){\n      console.log('beforeCreate', this.$route.params.resource_name)\n      this.$apolloClient.query({\n        query: this.$gql`{\n            ${this.$route.params.resource_name} {\n              nodes{\n                items{\n                  nodes {\n                    name\n                    id\n                  }\n                }\n              }\n            }\n          }\n        `\n      }).then(r => {\n        console.log(r)\n        this.items = r.data[this.$route.params.resource_name].nodes[0].items.nodes\n      })\n    }\n  }\n	2017-11-21 11:39:38.375-05	2017-11-21 11:39:38.375-05
840	13	templates	286	4	css	 \n	2017-11-21 12:09:46.764-05	2017-11-21 12:09:46.764-05
841	13	templates	286	3	html	<div>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n  </div>\n	2017-11-21 12:09:46.764-05	2017-11-21 12:09:46.764-05
842	13	templates	286	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      }\n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n	2017-11-21 12:09:46.764-05	2017-11-21 12:09:46.764-05
894	11	templates	305	9	css	 \n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
901	11	templates	305	8	html	      <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n	2017-11-21 12:31:29.284-05	2017-11-21 12:31:29.284-05
429	1	templates	149	3	html	            <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n\n\n\n\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
434	1	templates	149	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n	2017-11-20 16:38:36.545-05	2017-11-20 16:38:36.545-05
1061	15	templates	359	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        return fileds.data\n      }\n    }\n  }\n	2017-11-21 13:20:31.344-05	2017-11-21 13:20:31.344-05
1064	15	templates	360	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        return fileds.data.fieldSetAsArray\n      }\n    }\n  }\n	2017-11-21 13:20:41.343-05	2017-11-21 13:20:41.343-05
1065	15	templates	361	4	css	 \n	2017-11-21 13:20:51.362-05	2017-11-21 13:20:51.362-05
1066	15	templates	361	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:20:51.362-05	2017-11-21 13:20:51.362-05
1067	15	templates	361	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        return fileds.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:20:51.362-05	2017-11-21 13:20:51.362-05
1068	15	templates	362	4	css	 \n	2017-11-21 13:20:56.374-05	2017-11-21 13:20:56.374-05
1069	15	templates	362	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:20:56.374-05	2017-11-21 13:20:56.374-05
1070	15	templates	362	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:20:56.374-05	2017-11-21 13:20:56.374-05
1071	15	templates	363	4	css	 \n	2017-11-21 13:21:11.4-05	2017-11-21 13:21:11.4-05
1072	15	templates	363	3	html	  <h1>Hello World</h1>\n	2017-11-21 13:21:11.4-05	2017-11-21 13:21:11.4-05
1073	15	templates	363	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:21:11.4-05	2017-11-21 13:21:11.4-05
1076	15	templates	364	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize($route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:22:16.532-05	2017-11-21 13:22:16.532-05
1080	13	templates	366	3	html	    <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/create/resource/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n\n	2017-11-21 13:24:21.76-05	2017-11-21 13:24:21.76-05
1081	13	templates	366	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n\n	2017-11-21 13:24:21.76-05	2017-11-21 13:24:21.76-05
1084	15	templates	367	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:25:06.84-05	2017-11-21 13:25:06.84-05
1085	15	templates	368	4	css	 \n	2017-11-21 13:25:26.874-05	2017-11-21 13:25:26.874-05
1086	15	templates	368	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:25:26.874-05	2017-11-21 13:25:26.874-05
1087	15	templates	368	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:25:26.874-05	2017-11-21 13:25:26.874-05
1088	15	templates	369	4	css	 \n	2017-11-21 13:25:41.897-05	2017-11-21 13:25:41.897-05
1089	15	templates	369	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:25:41.897-05	2017-11-21 13:25:41.897-05
1090	15	templates	369	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function() {\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:25:41.897-05	2017-11-21 13:25:41.897-05
1092	15	templates	370	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:32:37.647-05	2017-11-21 13:32:37.647-05
1093	15	templates	370	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:32:37.647-05	2017-11-21 13:32:37.647-05
1097	15	templates	372	4	css	 \n	2017-11-21 13:33:12.702-05	2017-11-21 13:33:12.702-05
1098	15	templates	372	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:33:12.702-05	2017-11-21 13:33:12.702-05
1099	15	templates	372	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClinet)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:33:12.702-05	2017-11-21 13:33:12.702-05
1103	15	templates	374	4	css	 \n	2017-11-21 13:33:32.742-05	2017-11-21 13:33:32.742-05
1104	15	templates	374	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:33:32.742-05	2017-11-21 13:33:32.742-05
1105	15	templates	374	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClient)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:33:32.742-05	2017-11-21 13:33:32.742-05
1109	15	templates	376	4	css	 \n	2017-11-21 13:34:07.807-05	2017-11-21 13:34:07.807-05
1110	15	templates	376	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:34:07.807-05	2017-11-21 13:34:07.807-05
1111	15	templates	376	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClient)\n        console.log(this.$route)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:34:07.807-05	2017-11-21 13:34:07.807-05
1095	15	templates	371	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:32:52.67-05	2017-11-21 13:32:52.67-05
1096	15	templates	371	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClinet.query)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClinet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:32:52.67-05	2017-11-21 13:32:52.67-05
1100	15	templates	373	4	css	 \n	2017-11-21 13:33:22.72-05	2017-11-21 13:33:22.72-05
1101	15	templates	373	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:33:22.72-05	2017-11-21 13:33:22.72-05
1102	15	templates	373	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClieet)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClieet.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClinet.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:33:22.72-05	2017-11-21 13:33:22.72-05
1106	15	templates	375	4	css	 \n	2017-11-21 13:33:52.781-05	2017-11-21 13:33:52.781-05
1107	15	templates	375	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:33:52.781-05	2017-11-21 13:33:52.781-05
1108	15	templates	375	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClient)\n        conosle.log(this.$route)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:33:52.781-05	2017-11-21 13:33:52.781-05
1112	15	templates	377	4	css	 \n	2017-11-21 13:34:32.86-05	2017-11-21 13:34:32.86-05
1113	15	templates	377	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:34:32.86-05	2017-11-21 13:34:32.86-05
1114	15	templates	377	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClient)\n        console.log(this.$route)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:34:32.86-05	2017-11-21 13:34:32.86-05
1115	15	templates	378	4	css	 \n	2017-11-21 13:44:43.976-05	2017-11-21 13:44:43.976-05
1116	15	templates	378	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:44:43.976-05	2017-11-21 13:44:43.976-05
1117	15	templates	378	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this.$apolloClient)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:44:43.976-05	2017-11-21 13:44:43.976-05
1118	15	templates	379	4	css	 \n	2017-11-21 13:44:58.995-05	2017-11-21 13:44:58.995-05
1119	15	templates	379	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:44:58.995-05	2017-11-21 13:44:58.995-05
1120	15	templates	379	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log(this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:44:58.995-05	2017-11-21 13:44:58.995-05
1121	15	templates	380	4	css	 \n	2017-11-21 13:45:59.137-05	2017-11-21 13:45:59.137-05
1122	15	templates	380	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 13:45:59.137-05	2017-11-21 13:45:59.137-05
1151	10	templates	391	10	js	module.exports={"name": 'homePage'}\n\n\n\n\n	2017-11-21 14:51:01.904-05	2017-11-21 14:51:01.904-05
1172	16	templates	397	15	css	 \n	2017-11-21 14:51:21.925-05	2017-11-21 14:51:21.925-05
1123	15	templates	380	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 13:45:59.137-05	2017-11-21 13:45:59.137-05
1124	15	templates	381	4	css	 \n	2017-11-21 14:32:54.815-05	2017-11-21 14:32:54.815-05
1125	15	templates	381	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 14:32:54.815-05	2017-11-21 14:32:54.815-05
1126	15	templates	381	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields async () => {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 14:32:54.815-05	2017-11-21 14:32:54.815-05
1127	15	templates	382	4	css	 \n	2017-11-21 14:32:59.821-05	2017-11-21 14:32:59.821-05
1128	15	templates	382	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 14:32:59.821-05	2017-11-21 14:32:59.821-05
1129	15	templates	382	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async () => {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 14:32:59.821-05	2017-11-21 14:32:59.821-05
1130	15	templates	383	4	css	 \n	2017-11-21 14:33:29.878-05	2017-11-21 14:33:29.878-05
1131	15	templates	383	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 14:33:29.878-05	2017-11-21 14:33:29.878-05
1132	15	templates	383	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 14:33:29.878-05	2017-11-21 14:33:29.878-05
1133	15	templates	384	4	css		2017-11-21 14:50:06.757-05	2017-11-21 14:50:06.757-05
1134	15	templates	384	3	html	  <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n	2017-11-21 14:50:06.757-05	2017-11-21 14:50:06.757-05
1135	15	templates	384	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n	2017-11-21 14:50:06.757-05	2017-11-21 14:50:06.757-05
1136	16	templates	385	15	css	\N	2017-11-21 14:50:59.867-05	2017-11-21 14:50:59.867-05
1137	16	templates	385	14	html	<h1>Hello World</h1>	2017-11-21 14:50:59.867-05	2017-11-21 14:50:59.867-05
1138	16	templates	385	16	js	module.exports = {\n    name: 'adminInputField'\n  }	2017-11-21 14:50:59.867-05	2017-11-21 14:50:59.867-05
1139	6	templates	386	4	css	 \n	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
1140	6	templates	386	3	html	          <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n\n\n\n	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
1141	6	templates	386	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
1142	12	templates	387	15	css	 \n	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
1143	12	templates	387	14	html	          <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n\n\n\n	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
1144	12	templates	387	16	js	module.exports = {\n    name: 'card'\n  }\n\n\n\n\n	2017-11-21 14:51:01.882-05	2017-11-21 14:51:01.882-05
1145	9	templates	388	4	css	 \n	2017-11-21 14:51:01.893-05	2017-11-21 14:51:01.893-05
1146	10	templates	391	9	css	 \n	2017-11-21 14:51:01.904-05	2017-11-21 14:51:01.904-05
1147	2	templates	390	4	css	 \n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1148	3	templates	389	4	css	 \n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1149	9	templates	388	3	html	                  <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n\n\n\n	2017-11-21 14:51:01.893-05	2017-11-21 14:51:01.893-05
1150	10	templates	391	8	html	          <h1></h1>\n\n\n\n\n	2017-11-21 14:51:01.904-05	2017-11-21 14:51:01.904-05
1156	11	templates	395	9	css	 \n	2017-11-21 14:51:01.911-05	2017-11-21 14:51:01.911-05
1152	3	templates	389	3	html	        <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1158	3	templates	389	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1160	11	templates	395	8	html	            <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n\n\n\n	2017-11-21 14:51:01.911-05	2017-11-21 14:51:01.911-05
1164	11	templates	395	10	js	module.exports={"name": 'defaultPage'}\n\n\n\n\n\n	2017-11-21 14:51:01.911-05	2017-11-21 14:51:01.911-05
1376	18	templates	465	15	css	 \n	2017-11-21 16:21:13.21-05	2017-11-21 16:21:13.21-05
1377	18	templates	465	14	html	  <input type="submit" v-modal="value" v-on:change="form.emit(&apos;inputEvent&apos;, {name, value}" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:21:13.21-05	2017-11-21 16:21:13.21-05
1378	18	templates	465	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n	2017-11-21 16:21:13.21-05	2017-11-21 16:21:13.21-05
1379	18	templates	466	15	css	 \n	2017-11-21 16:21:33.244-05	2017-11-21 16:21:33.244-05
1380	18	templates	466	14	html	  <input type="submit" v-modal="value" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:21:33.244-05	2017-11-21 16:21:33.244-05
1381	18	templates	466	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n	2017-11-21 16:21:33.244-05	2017-11-21 16:21:33.244-05
1382	18	templates	467	15	css	 \n	2017-11-21 16:21:38.25-05	2017-11-21 16:21:38.25-05
1383	18	templates	467	14	html	  <input type="submit" v-modal="value" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:21:38.25-05	2017-11-21 16:21:38.25-05
1384	18	templates	467	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n	2017-11-21 16:21:38.25-05	2017-11-21 16:21:38.25-05
1385	17	templates	468	15	css	n	2017-11-21 16:21:48.268-05	2017-11-21 16:21:48.268-05
1386	17	templates	468	14	html	    <input type="text" v-model="value" :name="name" :placeholder="placeholder" v-on:change="form.emit(&apos;inputEvent&apos;, {name, value}" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:21:48.268-05	2017-11-21 16:21:48.268-05
1387	17	templates	468	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 16:21:48.268-05	2017-11-21 16:21:48.268-05
1388	17	templates	469	15	css	n	2017-11-21 16:22:08.306-05	2017-11-21 16:22:08.306-05
1389	17	templates	469	14	html	    <input type="text" v-model="value" :name="name" :placeholder="placeholder" v-on:change="form.emit(&apos;inputEvent&apos;, {name, value}" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:22:08.306-05	2017-11-21 16:22:08.306-05
1390	17	templates	469	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n	2017-11-21 16:22:08.306-05	2017-11-21 16:22:08.306-05
1166	13	templates	396	4	css	 \n	2017-11-21 14:51:01.897-05	2017-11-21 14:51:01.897-05
1170	13	templates	396	3	html	      <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/create/resource/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n\n\n	2017-11-21 14:51:01.897-05	2017-11-21 14:51:01.897-05
1171	13	templates	396	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n\n\n	2017-11-21 14:51:01.897-05	2017-11-21 14:51:01.897-05
1391	19	templates	470	15	css	\N	2017-11-21 16:23:48.831-05	2017-11-21 16:23:48.831-05
1392	19	templates	470	14	html	<h1>Hello World</h1>	2017-11-21 16:23:48.831-05	2017-11-21 16:23:48.831-05
1393	19	templates	470	16	js	module.exports = {\n    name: 'adminInputSubmit'\n  }	2017-11-21 16:23:48.831-05	2017-11-21 16:23:48.831-05
1394	3	templates	471	4	css	 \n	2017-11-21 16:23:48.966-05	2017-11-21 16:23:48.966-05
1395	3	templates	471	3	html	              <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.966-05	2017-11-21 16:23:48.966-05
1397	3	templates	471	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.966-05	2017-11-21 16:23:48.966-05
1421	18	templates	481	15	css	 \n	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
1424	18	templates	481	14	html	    <input type="submit" v-modal="value" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
1429	18	templates	481	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
1154	2	templates	390	3	html	            <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1169	2	templates	390	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1396	10	templates	472	9	css	 \n	2017-11-21 16:23:48.968-05	2017-11-21 16:23:48.968-05
1398	10	templates	472	8	html	                <h1></h1>\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.968-05	2017-11-21 16:23:48.968-05
1399	10	templates	472	10	js	module.exports={"name": 'homePage'}\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.968-05	2017-11-21 16:23:48.968-05
1423	17	templates	480	15	css	 .template-17 n\n	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
1428	17	templates	480	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" v-on:change="form.emit(&apos;inputEvent&apos;, {name, value}" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
1432	17	templates	480	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:23:53.969-05	2017-11-21 16:23:53.969-05
1173	16	templates	397	14	html	  <h1>Hello World</h1>\n	2017-11-21 14:51:21.925-05	2017-11-21 14:51:21.925-05
1174	16	templates	397	16	js	module.exports = {\n    name: 'adminInputField'\n    props: [\n      'type', 'name', 'placeholder', 'label'\n    ]\n  }\n	2017-11-21 14:51:21.925-05	2017-11-21 14:51:21.925-05
1175	16	templates	398	15	css	 \n	2017-11-21 14:51:31.945-05	2017-11-21 14:51:31.945-05
1176	16	templates	398	14	html	  \n	2017-11-21 14:51:31.945-05	2017-11-21 14:51:31.945-05
1177	16	templates	398	16	js	module.exports = {\n    name: 'adminInputField'\n    props: [\n      'type', 'name', 'placeholder', 'label'\n    ]\n  }\n	2017-11-21 14:51:31.945-05	2017-11-21 14:51:31.945-05
1178	17	templates	399	15	css	\N	2017-11-21 14:51:35.814-05	2017-11-21 14:51:35.814-05
1179	17	templates	399	14	html	<h1>Hello World</h1>	2017-11-21 14:51:35.814-05	2017-11-21 14:51:35.814-05
1180	17	templates	399	16	js	module.exports = {\n    name: 'adminInputText'\n  }	2017-11-21 14:51:35.814-05	2017-11-21 14:51:35.814-05
1181	12	templates	400	15	css	 \n	2017-11-21 14:51:36.947-05	2017-11-21 14:51:36.947-05
1182	12	templates	400	14	html	            <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n\n\n\n\n	2017-11-21 14:51:36.947-05	2017-11-21 14:51:36.947-05
1183	12	templates	400	16	js	module.exports = {\n    name: 'card'\n  }\n\n\n\n\n\n	2017-11-21 14:51:36.947-05	2017-11-21 14:51:36.947-05
1186	10	templates	402	9	css	 \n	2017-11-21 14:51:36.966-05	2017-11-21 14:51:36.966-05
1188	10	templates	402	8	html	            <h1></h1>\n\n\n\n\n\n	2017-11-21 14:51:36.966-05	2017-11-21 14:51:36.966-05
1189	10	templates	402	10	js	module.exports={"name": 'homePage'}\n\n\n\n\n\n	2017-11-21 14:51:36.966-05	2017-11-21 14:51:36.966-05
1208	16	templates	411	15	css	 \n	2017-11-21 14:51:36.981-05	2017-11-21 14:51:36.981-05
1211	16	templates	411	14	html	    \n\n	2017-11-21 14:51:36.981-05	2017-11-21 14:51:36.981-05
1214	16	templates	411	16	js	module.exports = {\n    name: 'adminInputField'\n    props: [\n      'type', 'name', 'placeholder', 'label'\n    ]\n  }\n\n	2017-11-21 14:51:36.981-05	2017-11-21 14:51:36.981-05
1400	15	templates	473	4	css	 \n	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
1404	15	templates	473	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
1412	15	templates	473	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    beforeCreate() {\n      this.$on('inputEvent' (data) => {\n        this.inputValues[data.name] = data.value;\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
1425	12	templates	484	15	css	 \n	2017-11-21 16:23:53.971-05	2017-11-21 16:23:53.971-05
1431	12	templates	484	14	html	                <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n\n\n\n\n\n\n	2017-11-21 16:23:53.971-05	2017-11-21 16:23:53.971-05
1434	12	templates	484	16	js	module.exports = {\n    name: 'card'\n  }\n\n\n\n\n\n\n\n	2017-11-21 16:23:53.971-05	2017-11-21 16:23:53.971-05
1155	14	templates	392	15	css	 \n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1161	14	templates	392	14	html	      <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1165	14	templates	392	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1184	6	templates	401	4	css	 \n	2017-11-21 14:51:36.946-05	2017-11-21 14:51:36.946-05
1185	6	templates	401	3	html	            <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n\n\n\n\n	2017-11-21 14:51:36.946-05	2017-11-21 14:51:36.946-05
1187	6	templates	401	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n\n	2017-11-21 14:51:36.946-05	2017-11-21 14:51:36.946-05
1202	11	templates	409	9	css	 \n	2017-11-21 14:51:36.975-05	2017-11-21 14:51:36.975-05
1207	11	templates	409	8	html	              <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n\n\n\n\n	2017-11-21 14:51:36.975-05	2017-11-21 14:51:36.975-05
1213	11	templates	409	10	js	module.exports={"name": 'defaultPage'}\n\n\n\n\n\n\n	2017-11-21 14:51:36.975-05	2017-11-21 14:51:36.975-05
1401	13	templates	474	4	css	 \n	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
1408	13	templates	474	3	html	            <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/create/resource/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
1413	13	templates	474	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.975-05	2017-11-21 16:23:48.975-05
1426	16	templates	483	15	css	 \n	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
1430	16	templates	483	14	html	    <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n\n	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
1435	16	templates	483	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        console.log(this.value)\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder,\n          form: this.$parent\n        }\n      }\n    }\n  }\n\n\n\n	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
1190	9	templates	403	4	css	 \n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1196	9	templates	403	3	html	                    <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n\n\n\n\n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1200	9	templates	403	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n\n\n\n\n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1217	16	templates	412	15	css	 \n	2017-11-21 14:51:41.96-05	2017-11-21 14:51:41.96-05
1218	16	templates	412	14	html	    \n\n	2017-11-21 14:51:41.96-05	2017-11-21 14:51:41.96-05
1219	16	templates	412	16	js	module.exports = {\n    name: 'adminInputField'\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ]\n  }\n\n	2017-11-21 14:51:41.96-05	2017-11-21 14:51:41.96-05
1402	2	templates	477	4	css	 \n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1406	2	templates	477	3	html	                  <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1410	2	templates	477	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1422	14	templates	482	15	css	 \n	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
1427	14	templates	482	14	html	            <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n\n\n\n\n	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
1433	14	templates	482	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n	2017-11-21 16:23:53.97-05	2017-11-21 16:23:53.97-05
1191	1	templates	404	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 14:51:36.961-05	2017-11-21 14:51:36.961-05
1195	1	templates	404	3	html	            <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n\n\n\n\n	2017-11-21 14:51:36.961-05	2017-11-21 14:51:36.961-05
1201	1	templates	404	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 14:51:36.961-05	2017-11-21 14:51:36.961-05
1220	16	templates	413	15	css	 \n	2017-11-21 14:51:56.994-05	2017-11-21 14:51:56.994-05
1221	16	templates	413	14	html	\n	2017-11-21 14:51:56.994-05	2017-11-21 14:51:56.994-05
1222	16	templates	413	16	js	module.exports = {\n    name: 'adminInputField'\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ]\n  }\n\n	2017-11-21 14:51:56.994-05	2017-11-21 14:51:56.994-05
1403	9	templates	478	4	css	 \n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1411	9	templates	478	3	html	                        <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1417	9	templates	478	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1192	3	templates	405	4	css	 \n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1197	3	templates	405	3	html	          <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n\n\n\n\n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1203	3	templates	405	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n\n\n\n\n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1405	11	templates	476	9	css	 \n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1409	11	templates	476	8	html	                  <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1416	11	templates	476	10	js	module.exports={"name": 'defaultPage'}\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.977-05	2017-11-21 16:23:48.977-05
1193	15	templates	407	4	css	 \n	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
1206	15	templates	407	3	html	      <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n\n\n	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
1210	15	templates	407	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n\n\n	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
1407	6	templates	475	4	css	 \n	2017-11-21 16:23:48.974-05	2017-11-21 16:23:48.974-05
1414	6	templates	475	3	html	                <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.974-05	2017-11-21 16:23:48.974-05
1418	6	templates	475	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.974-05	2017-11-21 16:23:48.974-05
1194	2	templates	406	4	css	 \n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1199	2	templates	406	3	html	              <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n\n\n\n\n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1205	2	templates	406	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n	2017-11-21 14:51:36.959-05	2017-11-21 14:51:36.959-05
1415	1	templates	479	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 16:23:48.98-05	2017-11-21 16:23:48.98-05
1419	1	templates	479	3	html	                <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.98-05	2017-11-21 16:23:48.98-05
1420	1	templates	479	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 16:23:48.98-05	2017-11-21 16:23:48.98-05
1198	14	templates	408	15	css	 \n	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
1204	14	templates	408	14	html	        <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n\n\n	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
1209	14	templates	408	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n\n\n\n	2017-11-21 14:51:36.962-05	2017-11-21 14:51:36.962-05
1436	15	templates	485	4	css	 \n	2017-11-21 16:24:49.063-05	2017-11-21 16:24:49.063-05
1437	15	templates	485	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:24:49.063-05	2017-11-21 16:24:49.063-05
1438	15	templates	485	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    beforeCreate() {\n      this.$on('inputEvent' (data) => {\n        this.inputValues[data.name] = data.value;\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:24:49.063-05	2017-11-21 16:24:49.063-05
1439	15	templates	486	4	css	 \n	2017-11-21 16:24:54.068-05	2017-11-21 16:24:54.068-05
1440	15	templates	486	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:24:54.068-05	2017-11-21 16:24:54.068-05
1441	15	templates	486	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    beforeCreate() {\n      this.$on('inputEvent' (data) => {\n        this.inputValues[data.name] = data.value;\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:24:54.068-05	2017-11-21 16:24:54.068-05
1442	15	templates	487	4	css	 \n	2017-11-21 16:25:39.158-05	2017-11-21 16:25:39.158-05
1443	15	templates	487	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:25:39.158-05	2017-11-21 16:25:39.158-05
1444	15	templates	487	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:25:39.158-05	2017-11-21 16:25:39.158-05
1448	18	templates	489	15	css	 \n	2017-11-21 16:26:09.195-05	2017-11-21 16:26:09.195-05
1449	18	templates	489	14	html	    <input type="submit" v-modal="value" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:26:09.195-05	2017-11-21 16:26:09.195-05
1450	18	templates	489	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 16:26:09.195-05	2017-11-21 16:26:09.195-05
1212	13	templates	410	4	css	 \n	2017-11-21 14:51:36.963-05	2017-11-21 14:51:36.963-05
1215	13	templates	410	3	html	        <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/create/resource/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n\n\n\n	2017-11-21 14:51:36.963-05	2017-11-21 14:51:36.963-05
1216	13	templates	410	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n\n\n\n	2017-11-21 14:51:36.963-05	2017-11-21 14:51:36.963-05
1445	18	templates	488	15	css	 \n	2017-11-21 16:26:04.192-05	2017-11-21 16:26:04.192-05
1446	18	templates	488	14	html	    <input type="submit" v-modal="value" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:26:04.192-05	2017-11-21 16:26:04.192-05
1447	18	templates	488	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 16:26:04.192-05	2017-11-21 16:26:04.192-05
1223	15	templates	414	4	css	 \n	2017-11-21 15:06:23.585-05	2017-11-21 15:06:23.585-05
1224	15	templates	414	3	html	<div>\n      <div v-for="field in fields">\n        <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name">\n      </admin-input-field></div>\n      \n  </div>\n\n\n	2017-11-21 15:06:23.585-05	2017-11-21 15:06:23.585-05
1225	15	templates	414	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n\n\n	2017-11-21 15:06:23.585-05	2017-11-21 15:06:23.585-05
1451	17	templates	490	15	css	 .template-17 n\n	2017-11-21 16:27:04.301-05	2017-11-21 16:27:04.301-05
1452	17	templates	490	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:27:04.301-05	2017-11-21 16:27:04.301-05
1453	17	templates	490	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:27:04.301-05	2017-11-21 16:27:04.301-05
1157	15	templates	393	4	css	 \n	2017-11-21 14:51:01.895-05	2017-11-21 14:51:01.895-05
1162	15	templates	393	3	html	    <div>\n      <ul v-for="field in fields" class="list-reset">\n        <li> {{field.name}} {{field.type}} </li>\n      </ul>\n    </div>\n\n	2017-11-21 14:51:01.895-05	2017-11-21 14:51:01.895-05
1167	15	templates	393	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            }\n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n\n	2017-11-21 14:51:01.895-05	2017-11-21 14:51:01.895-05
1226	16	templates	415	15	css	 \n	2017-11-21 15:16:44.735-05	2017-11-21 15:16:44.735-05
1227	16	templates	415	14	html	<div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 15:16:44.735-05	2017-11-21 15:16:44.735-05
1228	16	templates	415	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type}`\n      },\n    },\n    computed: {\n      inputProps() {\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder\n        }\n      }\n    }\n  }\n\n	2017-11-21 15:16:44.735-05	2017-11-21 15:16:44.735-05
1454	17	templates	491	15	css	 .template-17 n\n	2017-11-21 16:27:19.327-05	2017-11-21 16:27:19.327-05
1455	17	templates	491	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" v-on:="" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:27:19.327-05	2017-11-21 16:27:19.327-05
1456	17	templates	491	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:27:19.327-05	2017-11-21 16:27:19.327-05
1229	16	templates	416	15	css	 \n	2017-11-21 15:17:44.845-05	2017-11-21 15:17:44.845-05
1230	16	templates	416	14	html	<div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 15:17:44.845-05	2017-11-21 15:17:44.845-05
1231	16	templates	416	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder\n        }\n      }\n    }\n  }\n\n	2017-11-21 15:17:44.845-05	2017-11-21 15:17:44.845-05
1235	15	templates	418	4	css	 \n	2017-11-21 15:18:34.928-05	2017-11-21 15:18:34.928-05
1236	15	templates	418	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <div v-for="field in fields">\n        <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name">\n      </admin-input-field></div>\n      \n  </div>\n\n\n	2017-11-21 15:18:34.928-05	2017-11-21 15:18:34.928-05
1237	15	templates	418	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return fields.data.fieldSetAsArray.nodes\n      }\n    }\n  }\n\n\n	2017-11-21 15:18:34.928-05	2017-11-21 15:18:34.928-05
1457	17	templates	492	15	css	 .template-17 n\n	2017-11-21 16:27:59.407-05	2017-11-21 16:27:59.407-05
1458	17	templates	492	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="v-on:change=" form.emit(&apos;inputevent&apos;,="" {name,="" value}"="" "="" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:27:59.407-05	2017-11-21 16:27:59.407-05
1459	17	templates	492	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:27:59.407-05	2017-11-21 16:27:59.407-05
1460	17	templates	493	15	css	 .template-17 n\n	2017-11-21 16:28:04.413-05	2017-11-21 16:28:04.413-05
1461	17	templates	493	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="form.emit(&apos;inputEvent&apos;, {name, value}" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:28:04.413-05	2017-11-21 16:28:04.413-05
1462	17	templates	493	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:28:04.413-05	2017-11-21 16:28:04.413-05
1463	17	templates	494	15	css	 .template-17 n\n	2017-11-21 16:28:29.458-05	2017-11-21 16:28:29.458-05
1464	17	templates	494	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="form.emit(&apos;inputEvent&apos;, {name, value}" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:28:29.458-05	2017-11-21 16:28:29.458-05
1465	17	templates	494	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:28:29.458-05	2017-11-21 16:28:29.458-05
1466	17	templates	495	15	css	 .template-17 n\n	2017-11-21 16:28:39.472-05	2017-11-21 16:28:39.472-05
1467	17	templates	495	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:28:39.472-05	2017-11-21 16:28:39.472-05
1468	17	templates	495	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:28:39.472-05	2017-11-21 16:28:39.472-05
1232	17	templates	417	15	css	n	2017-11-21 15:17:59.878-05	2017-11-21 15:17:59.878-05
1233	17	templates	417	14	html	  <input type="text" :value="value" :name="name" :placeholder="placeholder"> \n	2017-11-21 15:17:59.878-05	2017-11-21 15:17:59.878-05
1234	17	templates	417	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n	2017-11-21 15:17:59.878-05	2017-11-21 15:17:59.878-05
1469	17	templates	496	15	css	 .template-17 n\n	2017-11-21 16:28:59.509-05	2017-11-21 16:28:59.509-05
1470	17	templates	496	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="form.$emit(&apos;inputEvent&apos;, {name, value)" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:28:59.509-05	2017-11-21 16:28:59.509-05
1471	17	templates	496	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name', 'form']\n  }\n\n\n	2017-11-21 16:28:59.509-05	2017-11-21 16:28:59.509-05
1238	15	templates	419	4	css	 \n	2017-11-21 15:19:20.05-05	2017-11-21 15:19:20.05-05
1239	15	templates	419	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <div v-for="field in fields">\n        <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name">\n      </admin-input-field></div>\n      \n  </div>\n\n\n	2017-11-21 15:19:20.05-05	2017-11-21 15:19:20.05-05
1240	15	templates	419	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:19:20.05-05	2017-11-21 15:19:20.05-05
1472	17	templates	497	15	css	 .template-17 n\n	2017-11-21 16:29:49.591-05	2017-11-21 16:29:49.591-05
1473	17	templates	497	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="changed" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:29:49.591-05	2017-11-21 16:29:49.591-05
1474	17	templates	497	16	js	module.exports = {\n    name: 'adminInputText',\n    props: [ 'placeholder', 'name', 'form'],\n    methods: {\n      changed() {\n        thisform.$emit('inputEvent', {name: this.name, value: this.value})\n      }\n    }\n  }\n\n\n	2017-11-21 16:29:49.591-05	2017-11-21 16:29:49.591-05
1475	17	templates	498	15	css	 .template-17 n\n	2017-11-21 16:30:04.612-05	2017-11-21 16:30:04.612-05
1476	17	templates	498	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="changed" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:30:04.612-05	2017-11-21 16:30:04.612-05
1477	17	templates	498	16	js	module.exports = {\n    name: 'adminInputText',\n    props: [ 'placeholder', 'name', 'form'],\n    data() {\n      return {\n        value: {}\n      }\n    },\n    methods: {\n      changed() {\n        thisform.$emit('inputEvent', {name: this.name, value: this.value})\n      }\n    }\n  }\n\n\n	2017-11-21 16:30:04.612-05	2017-11-21 16:30:04.612-05
1481	17	templates	500	15	css	 .template-17 n\n	2017-11-21 16:30:39.677-05	2017-11-21 16:30:39.677-05
1482	17	templates	500	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="changed" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:30:39.677-05	2017-11-21 16:30:39.677-05
1483	17	templates	500	16	js	module.exports = {\n    name: 'adminInputText',\n    props: [ 'placeholder', 'name', 'form'],\n    data() {\n      return {\n        value: ""\n      }\n    },\n    methods: {\n      changed() {\n        this.form.$emit('inputEvent', {name: this.name, value: this.value})\n      }\n    }\n  }\n\n\n	2017-11-21 16:30:39.677-05	2017-11-21 16:30:39.677-05
1241	17	templates	420	15	css	n	2017-11-21 15:21:30.251-05	2017-11-21 15:21:30.251-05
1242	17	templates	420	14	html	  <input type="text" :value="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:21:30.251-05	2017-11-21 15:21:30.251-05
1243	17	templates	420	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n	2017-11-21 15:21:30.251-05	2017-11-21 15:21:30.251-05
1244	16	templates	421	15	css	 \n	2017-11-21 15:21:50.298-05	2017-11-21 15:21:50.298-05
1245	16	templates	421	14	html	<div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 15:21:50.298-05	2017-11-21 15:21:50.298-05
1246	16	templates	421	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder\n        }\n      }\n    }\n  }\n\n	2017-11-21 15:21:50.298-05	2017-11-21 15:21:50.298-05
1478	17	templates	499	15	css	 .template-17 n\n	2017-11-21 16:30:14.632-05	2017-11-21 16:30:14.632-05
1479	17	templates	499	14	html	      <input type="text" v-model="value" :name="name" :placeholder="placeholder" @change="changed" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 16:30:14.632-05	2017-11-21 16:30:14.632-05
1480	17	templates	499	16	js	module.exports = {\n    name: 'adminInputText',\n    props: [ 'placeholder', 'name', 'form'],\n    data() {\n      return {\n        value: ""\n      }\n    },\n    methods: {\n      changed() {\n        thisform.$emit('inputEvent', {name: this.name, value: this.value})\n      }\n    }\n  }\n\n\n	2017-11-21 16:30:14.632-05	2017-11-21 16:30:14.632-05
1247	15	templates	422	4	css	 \n	2017-11-21 15:23:15.47-05	2017-11-21 15:23:15.47-05
1248	15	templates	422	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name">\n        </admin-input-field></div>\n      </form>\n      \n  </div>\n\n\n	2017-11-21 15:23:15.47-05	2017-11-21 15:23:15.47-05
1249	15	templates	422	5	js	module.exports = {\n    name: 'adminCreateResource',\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:23:15.47-05	2017-11-21 15:23:15.47-05
1484	15	templates	501	4	css	 \n	2017-11-21 16:31:34.777-05	2017-11-21 16:31:34.777-05
1485	15	templates	501	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:31:34.777-05	2017-11-21 16:31:34.777-05
1486	15	templates	501	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:31:34.777-05	2017-11-21 16:31:34.777-05
1250	15	templates	423	4	css	 \n	2017-11-21 15:23:55.546-05	2017-11-21 15:23:55.546-05
1251	15	templates	423	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name">\n        </admin-input-field></div>\n      </form>\n      \n  </div>\n\n\n	2017-11-21 15:23:55.546-05	2017-11-21 15:23:55.546-05
1252	15	templates	423	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:23:55.546-05	2017-11-21 15:23:55.546-05
1253	15	templates	424	4	css	 \n	2017-11-21 15:24:25.599-05	2017-11-21 15:24:25.599-05
1254	15	templates	424	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n        </admin-input-field></div>\n      </form>\n      \n  </div>\n\n\n	2017-11-21 15:24:25.599-05	2017-11-21 15:24:25.599-05
1255	15	templates	424	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:24:25.599-05	2017-11-21 15:24:25.599-05
1487	15	templates	502	4	css	 \n	2017-11-21 16:32:09.841-05	2017-11-21 16:32:09.841-05
1488	15	templates	502	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:32:09.841-05	2017-11-21 16:32:09.841-05
1489	15	templates	502	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        \n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:32:09.841-05	2017-11-21 16:32:09.841-05
1256	15	templates	425	4	css	 \n	2017-11-21 15:26:05.777-05	2017-11-21 15:26:05.777-05
1257	15	templates	425	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n        </admin-input-field></div>\n        <input type="submit">\n      </form>\n      \n  </div>\n\n\n	2017-11-21 15:26:05.777-05	2017-11-21 15:26:05.777-05
1258	15	templates	425	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:26:05.777-05	2017-11-21 15:26:05.777-05
1262	15	templates	427	4	css	 \n	2017-11-21 15:26:45.856-05	2017-11-21 15:26:45.856-05
1263	15	templates	427	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n        </admin-input-field></div>\n        \n      </form>\n      \n  </div>\n\n\n	2017-11-21 15:26:45.856-05	2017-11-21 15:26:45.856-05
1264	15	templates	427	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:26:45.856-05	2017-11-21 15:26:45.856-05
1269	9	templates	430	4	css	 \n	2017-11-21 15:26:50.898-05	2017-11-21 15:26:50.898-05
1271	9	templates	430	3	html	                      <div>\n      <h1>All Pages</h1>\n      <div v-for="page in allPages">\n        <h1>{{page.name}}</h1>\n      </div>\n    </div>\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.898-05	2017-11-21 15:26:50.898-05
1272	9	templates	430	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.898-05	2017-11-21 15:26:50.898-05
1286	14	templates	438	15	css	 \n	2017-11-21 15:26:50.923-05	2017-11-21 15:26:50.923-05
1293	14	templates	438	14	html	          <div class="bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded no-underline">\n      <router-link :to="path" class="no-underline text-center">{{title}}</router-link>\n    </div>\n\n\n\n\n	2017-11-21 15:26:50.923-05	2017-11-21 15:26:50.923-05
1297	14	templates	438	16	js	module.exports = {\n    name: 'adminButton',\n    props: ['title', 'path']\n  }\n\n\n\n\n	2017-11-21 15:26:50.923-05	2017-11-21 15:26:50.923-05
1490	15	templates	503	4	css	 \n	2017-11-21 16:34:10.102-05	2017-11-21 16:34:10.102-05
1491	15	templates	503	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:34:10.102-05	2017-11-21 16:34:10.102-05
1492	15	templates	503	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        this.\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:34:10.102-05	2017-11-21 16:34:10.102-05
1159	1	templates	394	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1163	1	templates	394	3	html	          <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1168	1	templates	394	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 14:51:01.894-05	2017-11-21 14:51:01.894-05
1259	15	templates	426	4	css	 \n	2017-11-21 15:26:30.831-05	2017-11-21 15:26:30.831-05
1260	15	templates	426	3	html	<div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n        </admin-input-field></div>\n        <input type="submit" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3">\n      </form>\n      \n  </div>\n\n\n	2017-11-21 15:26:30.831-05	2017-11-21 15:26:30.831-05
1261	15	templates	426	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n	2017-11-21 15:26:30.831-05	2017-11-21 15:26:30.831-05
1265	18	templates	428	15	css	\N	2017-11-21 15:26:50.555-05	2017-11-21 15:26:50.555-05
1266	18	templates	428	14	html	<h1>Hello World</h1>	2017-11-21 15:26:50.555-05	2017-11-21 15:26:50.555-05
1267	18	templates	428	16	js	module.exports = {\n    name: 'adminInputSubmit'\n  }	2017-11-21 15:26:50.555-05	2017-11-21 15:26:50.555-05
1268	3	templates	429	4	css	 \n	2017-11-21 15:26:50.896-05	2017-11-21 15:26:50.896-05
1270	3	templates	429	3	html	            <nav :class="classList">\n    <p class="p-4">Smart Site Admin</p>\n      <ul v-for="item in resources" class="list-reset">\n       <admin-menu-item :path="path(item)" :title="item"></admin-menu-item>\n     </ul>\n  </nav>\n\n\n\n\n\n\n	2017-11-21 15:26:50.896-05	2017-11-21 15:26:50.896-05
1273	3	templates	429	5	js	const camelCase = require('camelCase')\n  module.exports = {\n    name: "admin-menu",\n    data() {\n      return {\n        resources: [],\n        classList: [\n          'flex',\n          'flex-col',\n          'items-center',\n          'justify-start',\n          'h-screen'\n        ]\n      }\n    },\n    methods: {\n      path(resource_name) { return `/admin/resource/${resource_name}`}\n    },\n    beforeMount () {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            allResources{\n              nodes {\n                name\n              }\n            }\n          }\n        `\n      })\n      .then(r => {\n        console.log('cc', camelCase)\n        resources = r.data.allResources.nodes.map(resource => this.$camelCase(resource.name))\n        console.log('resources', resources)\n        this.resources = resources\n      })\n    }\n  }\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.896-05	2017-11-21 15:26:50.896-05
1287	12	templates	439	15	css	 \n	2017-11-21 15:26:50.924-05	2017-11-21 15:26:50.924-05
1294	12	templates	439	14	html	              <div class="max-w-sm rounded overflow-hidden shadow-lg p-4">\n      <slot></slot>\n    </div>\n\n\n\n\n\n\n	2017-11-21 15:26:50.924-05	2017-11-21 15:26:50.924-05
1298	12	templates	439	16	js	module.exports = {\n    name: 'card'\n  }\n\n\n\n\n\n\n	2017-11-21 15:26:50.924-05	2017-11-21 15:26:50.924-05
1493	15	templates	504	4	css	 \n	2017-11-21 16:35:10.195-05	2017-11-21 16:35:10.195-05
1494	15	templates	504	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:35:10.195-05	2017-11-21 16:35:10.195-05
1495	15	templates	504	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        const name = $route.params.resource_name\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:35:10.195-05	2017-11-21 16:35:10.195-05
1496	15	templates	505	4	css	 \n	2017-11-21 16:35:40.238-05	2017-11-21 16:35:40.238-05
1274	10	templates	433	9	css	 \n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1281	10	templates	433	8	html	              <h1></h1>\n\n\n\n\n\n\n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1288	10	templates	433	10	js	module.exports={"name": 'homePage'}\n\n\n\n\n\n\n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1497	15	templates	505	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:35:40.238-05	2017-11-21 16:35:40.238-05
1498	15	templates	505	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        const name = $route.params.resource_name.charAt(0).toUpperCase() + $route.params.resource_name.slice(1);\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:35:40.238-05	2017-11-21 16:35:40.238-05
1275	1	templates	431	4	css	 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .template-1 .test\n{\n\n}\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1283	1	templates	431	3	html	              <card>\n  <h1>Hello World</h1>\n  <form v-on:submit.prevent="submitForm">\n    <input name="name" v-model="name">\n    <input name="path" v-model="path">\n    <input name="template" v-model="template">\n    <input type="submit">\n  </form>\n  </card>\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1290	1	templates	431	5	js	module.exports = {\n    name: "adminHome",\n    data() { return {\n        name: "",\n        path: "",\n        template: ""\n      }\n    },\n    methods: {\n      submitForm() {\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              createAdminPagesItems(input:{\n                name: "${this.name}",\n                path: "${this.path}",\n                template: "${this.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n        }).then(console.log).catch(console.error)\n        console.log(this.name, this.path, this.template)\n      }\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1499	15	templates	506	4	css	 \n	2017-11-21 16:36:15.302-05	2017-11-21 16:36:15.302-05
1500	15	templates	506	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:36:15.302-05	2017-11-21 16:36:15.302-05
1501	15	templates	506	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        const name = $route.params.resource_name.charAt(0).toUpperCase() + $route.params.resource_name.slice(1);\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              create${this.name}Items(input:{\n                name: "${this.inputValues.name}",\n                path: "${this.inputValues.path}",\n                template: "${this.inputValues.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:36:15.302-05	2017-11-21 16:36:15.302-05
1502	15	templates	507	4	css	 \n	2017-11-21 16:36:20.312-05	2017-11-21 16:36:20.312-05
1503	15	templates	507	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:36:20.312-05	2017-11-21 16:36:20.312-05
1504	15	templates	507	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        const name = $route.params.resource_name.charAt(0).toUpperCase() + $route.params.resource_name.slice(1);\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              create${this.name}Items(input:{\n                name: "${this.inputValues.name}",\n                path: "${this.inputValues.path}",\n                template: "${this.inputValues.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n      })\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:36:20.312-05	2017-11-21 16:36:20.312-05
1505	15	templates	508	4	css	 \n	2017-11-21 16:36:35.331-05	2017-11-21 16:36:35.331-05
1506	15	templates	508	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:36:35.331-05	2017-11-21 16:36:35.331-05
1276	13	templates	435	4	css	 \n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1295	13	templates	435	3	html	          <div>\n    <h1>{{$route.params.resource_name}}</h1>\n    <h3>Items:</h3>\n    <ul v-for="item in items">\n      <li>{{item.id}} - {{item.name}} </li>\n    </ul>\n    <admin-button :path="&apos;/admin/create/resource/&apos;+$route.params.resource_name" :title="&apos;New &apos;+$route.params.resource_name">\n  </admin-button></div>\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1300	13	templates	435	5	js	module.exports = {\n    name: 'adminResourceList',\n    data () {\n      return {\n        // items: [{\n        //   id: "0",\n        //   name: "loading"\n        // }]\n      } \n    },\n    asyncComputed: {\n      items() {\n        return this.$apolloClient.query({\n          query: this.$gql`{\n              ${this.$route.params.resource_name} {\n                nodes{\n                  items{\n                    nodes {\n                      name\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          `\n        }).then(r => {\n          console.log(r)\n          return r.data[this.$route.params.resource_name].nodes[0].items.nodes\n        })\n       }\n    },\n  }\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1507	15	templates	508	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        const name = $route.params.resource_name.charAt(0).toUpperCase() + $route.params.resource_name.slice(1);\n        this.$apolloClient.mutate({\n          mutation: this.$gql`\n            mutation {\n              create${this.name}Items(input:{\n                name: "${this.inputValues.name}",\n                path: "${this.inputValues.path}",\n                template: "${this.inputValues.template}"\n              }) {\n                clientMutationId\n              } \n            }\n          `\n      })\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:36:35.331-05	2017-11-21 16:36:35.331-05
1277	16	templates	436	15	css	 \n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1282	16	templates	436	14	html	  <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n\n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1289	16	templates	436	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder\n        }\n      }\n    }\n  }\n\n\n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1302	17	templates	441	15	css	 .template-17 n\n	2017-11-21 15:26:50.931-05	2017-11-21 15:26:50.931-05
1304	17	templates	441	14	html	    <input type="text" :value="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n\n	2017-11-21 15:26:50.931-05	2017-11-21 15:26:50.931-05
1306	17	templates	441	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 15:26:50.931-05	2017-11-21 15:26:50.931-05
1508	15	templates	509	4	css	 \n	2017-11-21 16:38:00.493-05	2017-11-21 16:38:00.493-05
1509	15	templates	509	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:38:00.493-05	2017-11-21 16:38:00.493-05
1510	15	templates	509	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = $route.params.resource_name.charAt(0).toUpperCase() + $route.params.resource_name.slice(1);\n          this.$apolloClient.mutate({\n            mutation: this.$gql`\n              mutation {\n                create${this.name}Items(input:{\n                  name: "${this.inputValues.name}",\n                  path: "${this.inputValues.path}",\n                  template: "${this.inputValues.template}"\n                }) {\n                  clientMutationId\n                } \n              }\n            `\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:38:00.493-05	2017-11-21 16:38:00.493-05
1278	6	templates	434	4	css	 \n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1296	6	templates	434	3	html	              <router-link :to="path" class="p-4 hover:text-red text-center">{{title}}</router-link>\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1299	6	templates	434	5	js	module.exports = {\n    name: 'adminMenuItem',\n    props: ['title', 'path']\n  }\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1511	15	templates	510	4	css	 \n	2017-11-21 16:38:55.599-05	2017-11-21 16:38:55.599-05
1512	15	templates	510	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:38:55.599-05	2017-11-21 16:38:55.599-05
1513	15	templates	510	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = $route.params.resource_name.charAt(0).toUpperCase() + $route.params.resource_name.slice(1);\n\n          this.$apolloClient.mutate({\n            mutation: this.$gql`\n              mutation {\n                create${this.name}Items(input:{${JSON.stringify(this.inputValues)}}) {\n                  clientMutationId\n                } \n              }\n            `\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:38:55.599-05	2017-11-21 16:38:55.599-05
1517	15	templates	512	4	css	 \n	2017-11-21 16:39:20.642-05	2017-11-21 16:39:20.642-05
1518	15	templates	512	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:39:20.642-05	2017-11-21 16:39:20.642-05
1519	15	templates	512	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          this.$apolloClient.mutate({\n            mutation: this.$gql`\n              mutation {\n                create${this.name}Items(input:{${JSON.stringify(this.inputValues)}}) {\n                  clientMutationId\n                } \n              }\n            `\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:39:20.642-05	2017-11-21 16:39:20.642-05
1279	11	templates	432	9	css	 \n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1284	11	templates	432	8	html	                <h1>Welcome Home/h1&gt;\n    <router-view></router-view>\n</h1>\n\n\n\n\n\n\n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1291	11	templates	432	10	js	module.exports={"name": 'defaultPage'}\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.911-05	2017-11-21 15:26:50.911-05
1301	15	templates	440	4	css	 \n	2017-11-21 15:26:50.929-05	2017-11-21 15:26:50.929-05
1303	15	templates	440	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n        </admin-input-field></div>\n        \n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:26:50.929-05	2017-11-21 15:26:50.929-05
1305	15	templates	440	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:26:50.929-05	2017-11-21 15:26:50.929-05
1514	15	templates	511	4	css	 \n	2017-11-21 16:39:15.634-05	2017-11-21 16:39:15.634-05
1515	15	templates	511	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:39:15.634-05	2017-11-21 16:39:15.634-05
1516	15	templates	511	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n\n          this.$apolloClient.mutate({\n            mutation: this.$gql`\n              mutation {\n                create${this.name}Items(input:{${JSON.stringify(this.inputValues)}}) {\n                  clientMutationId\n                } \n              }\n            `\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:39:15.634-05	2017-11-21 16:39:15.634-05
1520	15	templates	513	4	css	 \n	2017-11-21 16:39:35.669-05	2017-11-21 16:39:35.669-05
1521	15	templates	513	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:39:35.669-05	2017-11-21 16:39:35.669-05
1522	15	templates	513	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          this.$apolloClient.mutate({\n            mutation: this.$gql`\n              mutation {\n                create${this.name}Items(input:${JSON.stringify(this.inputValues)}) {\n                  clientMutationId\n                } \n              }\n            `\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:39:35.669-05	2017-11-21 16:39:35.669-05
1280	2	templates	437	4	css	 \n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1285	2	templates	437	3	html	                <div class="flex">\n      <admin-menu class="flex items-center bg-grey-darkest text-white"></admin-menu>\n      <div class="p-4">\n        <router-view></router-view>\n      </div>\n    </div>\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1292	2	templates	437	5	js	module.exports = {\n    name: "defaultAdminPage"\n  }\n\n\n\n\n\n\n\n	2017-11-21 15:26:50.91-05	2017-11-21 15:26:50.91-05
1523	15	templates	514	4	css	 \n	2017-11-21 16:40:40.788-05	2017-11-21 16:40:40.788-05
1524	15	templates	514	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:40:40.788-05	2017-11-21 16:40:40.788-05
1525	15	templates	514	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${this.name}Items(input:${JSON.stringify(this.inputValues)}) {\n                  clientMutationId\n                } \n              }\n            `\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:40:40.788-05	2017-11-21 16:40:40.788-05
1529	15	templates	516	4	css	 \n	2017-11-21 16:41:20.856-05	2017-11-21 16:41:20.856-05
1530	15	templates	516	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:41:20.856-05	2017-11-21 16:41:20.856-05
1531	15	templates	516	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${this.name}Items(input:${JSON.stringify(this.inputValues)}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:41:20.856-05	2017-11-21 16:41:20.856-05
1307	15	templates	442	4	css	 \n	2017-11-21 15:27:45.983-05	2017-11-21 15:27:45.983-05
1308	15	templates	442	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n        </admin-input-field></div>\n        <admin-input-field type="submit" name="submit" label="Save your data!" :value="inputValues[field.name]"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:27:45.983-05	2017-11-21 15:27:45.983-05
1309	15	templates	442	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:27:45.983-05	2017-11-21 15:27:45.983-05
1310	15	templates	443	4	css	 \n	2017-11-21 15:28:11.008-05	2017-11-21 15:28:11.008-05
1311	15	templates	443	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!" :value="inputValues[field.name]"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:28:11.008-05	2017-11-21 15:28:11.008-05
1312	15	templates	443	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:28:11.008-05	2017-11-21 15:28:11.008-05
1316	17	templates	445	15	css	 .template-17 n\n	2017-11-21 15:28:36.053-05	2017-11-21 15:28:36.053-05
1317	17	templates	445	14	html	    <input type="text" :value="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:28:36.053-05	2017-11-21 15:28:36.053-05
1318	17	templates	445	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 15:28:36.053-05	2017-11-21 15:28:36.053-05
1322	18	templates	447	15	css	 \n	2017-11-21 15:28:46.074-05	2017-11-21 15:28:46.074-05
1323	18	templates	447	14	html	  <input type="submit" :value="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:28:46.074-05	2017-11-21 15:28:46.074-05
1324	18	templates	447	16	js	module.exports = {\n    name: 'adminInputSubmit'\n  }\n	2017-11-21 15:28:46.074-05	2017-11-21 15:28:46.074-05
1526	15	templates	515	4	css	 \n	2017-11-21 16:41:00.818-05	2017-11-21 16:41:00.818-05
1527	15	templates	515	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:41:00.818-05	2017-11-21 16:41:00.818-05
1528	15	templates	515	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${this.name}Items(input:${JSON.stringify(this.inputValues)}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(muate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:41:00.818-05	2017-11-21 16:41:00.818-05
1313	15	templates	444	4	css	 \n	2017-11-21 15:28:21.026-05	2017-11-21 15:28:21.026-05
1314	15	templates	444	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form>\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:28:21.026-05	2017-11-21 15:28:21.026-05
1315	15	templates	444	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:28:21.026-05	2017-11-21 15:28:21.026-05
1319	18	templates	446	15	css	 \n	2017-11-21 15:28:36.059-05	2017-11-21 15:28:36.059-05
1320	18	templates	446	14	html	  <input type="text" :value="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:28:36.059-05	2017-11-21 15:28:36.059-05
1321	18	templates	446	16	js	module.exports = {\n    name: 'adminInputSubmit'\n  }\n	2017-11-21 15:28:36.059-05	2017-11-21 15:28:36.059-05
1325	18	templates	448	15	css	 \n	2017-11-21 15:29:16.124-05	2017-11-21 15:29:16.124-05
1326	18	templates	448	14	html	  <input type="submit" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:29:16.124-05	2017-11-21 15:29:16.124-05
1327	18	templates	448	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n\n  }\n	2017-11-21 15:29:16.124-05	2017-11-21 15:29:16.124-05
1532	15	templates	517	4	css	 \n	2017-11-21 16:42:20.992-05	2017-11-21 16:42:20.992-05
1533	15	templates	517	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:42:20.992-05	2017-11-21 16:42:20.992-05
1534	15	templates	517	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${name}Items(input:${JSON.stringify(this.inputValues)}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:42:20.992-05	2017-11-21 16:42:20.992-05
1328	15	templates	449	4	css	 \n	2017-11-21 15:29:36.159-05	2017-11-21 15:29:36.159-05
1329	15	templates	449	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:29:36.159-05	2017-11-21 15:29:36.159-05
1330	15	templates	449	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:29:36.159-05	2017-11-21 15:29:36.159-05
1331	15	templates	450	4	css	 \n	2017-11-21 15:30:06.215-05	2017-11-21 15:30:06.215-05
1332	15	templates	450	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:30:06.215-05	2017-11-21 15:30:06.215-05
1333	15	templates	450	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(inputValues)\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:30:06.215-05	2017-11-21 15:30:06.215-05
1337	15	templates	452	4	css	 \n	2017-11-21 15:30:31.26-05	2017-11-21 15:30:31.26-05
1338	15	templates	452	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:30:31.26-05	2017-11-21 15:30:31.26-05
1339	15	templates	452	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:30:31.26-05	2017-11-21 15:30:31.26-05
1535	12	items	518	6	path	/about-us	2017-11-21 16:43:45.801-05	2017-11-21 16:43:45.801-05
1536	12	items	518	7	template	aboutUs	2017-11-21 16:43:45.801-05	2017-11-21 16:43:45.801-05
1334	15	templates	451	4	css	 \n	2017-11-21 15:30:26.252-05	2017-11-21 15:30:26.252-05
1335	15	templates	451	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 15:30:26.252-05	2017-11-21 15:30:26.252-05
1336	15	templates	451	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(inputValues)\n      }\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 15:30:26.252-05	2017-11-21 15:30:26.252-05
1537	15	templates	519	4	css	 \n	2017-11-21 16:46:46.461-05	2017-11-21 16:46:46.461-05
1538	15	templates	519	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:46:46.461-05	2017-11-21 16:46:46.461-05
1539	15	templates	519	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${name}Items(input:${Object.Keys(this.inputValues).map(key => key+)}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:46:46.461-05	2017-11-21 16:46:46.461-05
1540	15	templates	520	4	css	 \n	2017-11-21 16:47:11.501-05	2017-11-21 16:47:11.501-05
1541	15	templates	520	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:47:11.501-05	2017-11-21 16:47:11.501-05
1542	15	templates	520	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${name}Items(input:${Object.Keys(this.inputValues).map(key => key+':'+'"'+this.inputValues[key]+'"')}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:47:11.501-05	2017-11-21 16:47:11.501-05
1546	15	templates	522	4	css	 \n	2017-11-21 16:48:11.623-05	2017-11-21 16:48:11.623-05
1547	15	templates	522	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:48:11.623-05	2017-11-21 16:48:11.623-05
1340	16	templates	453	15	css	 \n	2017-11-21 15:31:41.383-05	2017-11-21 15:31:41.383-05
1341	16	templates	453	14	html	  <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n\n	2017-11-21 15:31:41.383-05	2017-11-21 15:31:41.383-05
1342	16	templates	453	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        console.log(this.value)\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder\n        }\n      }\n    }\n  }\n\n\n	2017-11-21 15:31:41.383-05	2017-11-21 15:31:41.383-05
1543	15	templates	521	4	css	 \n	2017-11-21 16:47:41.559-05	2017-11-21 16:47:41.559-05
1544	15	templates	521	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:47:41.559-05	2017-11-21 16:47:41.559-05
1545	15	templates	521	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${name}Items(input:${Object.keys(this.inputValues).map(key => key+':'+'"'+this.inputValues[key]+'"')}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:47:41.559-05	2017-11-21 16:47:41.559-05
1552	13	items	524	6	path	/about-us	2017-11-21 16:48:47.902-05	2017-11-21 16:48:47.902-05
1553	13	items	524	7	template	aboutUs	2017-11-21 16:48:47.902-05	2017-11-21 16:48:47.902-05
1554	14	items	525	1	path	/admin/22	2017-11-21 16:49:29.963-05	2017-11-21 16:49:29.963-05
1555	14	items	525	2	template	adminHome	2017-11-21 16:49:29.963-05	2017-11-21 16:49:29.963-05
1343	17	templates	454	15	css	n	2017-11-21 15:32:21.456-05	2017-11-21 15:32:21.456-05
1344	17	templates	454	14	html	    <input type="text" :value="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:32:21.456-05	2017-11-21 15:32:21.456-05
1345	17	templates	454	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 15:32:21.456-05	2017-11-21 15:32:21.456-05
1548	15	templates	522	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${name}Items(input:{${Object.keys(this.inputValues).map(key => key+':'+'"'+this.inputValues[key]+'"')}}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:48:11.623-05	2017-11-21 16:48:11.623-05
1549	15	templates	523	4	css	 \n	2017-11-21 16:48:31.694-05	2017-11-21 16:48:31.694-05
1550	15	templates	523	3	html	    <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n\n	2017-11-21 16:48:31.694-05	2017-11-21 16:48:31.694-05
1551	15	templates	523	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n          const name = this.$route.params.resource_name.charAt(0).toUpperCase() + this.$route.params.resource_name.slice(1);\n          const mutate = `\n              mutation {\n                create${name}Items(input:{${Object.keys(this.inputValues).map(key => key+':'+'"'+this.inputValues[key]+'"')}}) {\n                  clientMutationId\n                } \n              }\n            `\n            console.log(mutate)\n          this.$apolloClient.mutate({\n            mutation: this.$gql`${mutate}`\n        })\n      }\n    },\n    mounted() {\n      this.$on('inputEvent', (data) => {\n        this.inputValues[data.name] = data.value\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n\n	2017-11-21 16:48:31.694-05	2017-11-21 16:48:31.694-05
1346	17	templates	455	15	css	n	2017-11-21 15:32:56.516-05	2017-11-21 15:32:56.516-05
1347	17	templates	455	14	html	    <input type="text" :v-model="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:32:56.516-05	2017-11-21 15:32:56.516-05
1348	17	templates	455	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 15:32:56.516-05	2017-11-21 15:32:56.516-05
1556	15	items	526	1	path	/admin/home	2017-11-22 12:40:03.247-05	2017-11-22 12:40:03.247-05
1557	15	items	526	2	template	adminHome	2017-11-22 12:40:03.247-05	2017-11-22 12:40:03.247-05
1558	16	items	527	1	path	/admin/home2	2017-11-22 12:40:06.821-05	2017-11-22 12:40:06.821-05
1559	16	items	527	2	template	adminHome	2017-11-22 12:40:06.821-05	2017-11-22 12:40:06.821-05
1349	17	templates	456	15	css	n	2017-11-21 15:33:01.525-05	2017-11-21 15:33:01.525-05
1350	17	templates	456	14	html	    <input type="text" v-model="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 15:33:01.525-05	2017-11-21 15:33:01.525-05
1351	17	templates	456	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 15:33:01.525-05	2017-11-21 15:33:01.525-05
1560	17	items	528	6	path	\N	2017-11-25 09:35:43.043-05	2017-11-25 09:35:43.043-05
1561	17	items	528	7	template	\N	2017-11-25 09:35:43.043-05	2017-11-25 09:35:43.043-05
1352	16	templates	457	15	css	 \n	2017-11-21 16:12:17.244-05	2017-11-21 16:12:17.244-05
1353	16	templates	457	14	html	  <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 16:12:17.244-05	2017-11-21 16:12:17.244-05
1354	16	templates	457	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        console.log(this.value)\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder\n        }\n      }\n    }\n  }\n\n\n	2017-11-21 16:12:17.244-05	2017-11-21 16:12:17.244-05
1355	16	templates	458	15	css	 \n	2017-11-21 16:12:27.23-05	2017-11-21 16:12:27.23-05
1356	16	templates	458	14	html	  <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 16:12:27.23-05	2017-11-21 16:12:27.23-05
1357	16	templates	458	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        console.log(this.value)\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder,\n          form: this.$parent\n        }\n      }\n    }\n  }\n\n\n	2017-11-21 16:12:27.23-05	2017-11-21 16:12:27.23-05
1358	17	templates	459	15	css	n	2017-11-21 16:15:47.6-05	2017-11-21 16:15:47.6-05
1359	17	templates	459	14	html	    <input type="text" v-model="value" :name="name" :placeholder="placeholder" class="template-17 appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:15:47.6-05	2017-11-21 16:15:47.6-05
1360	17	templates	459	16	js	module.exports = {\n    name: 'adminInputText',\n    props: ['value', 'placeholder', 'name']\n  }\n\n	2017-11-21 16:15:47.6-05	2017-11-21 16:15:47.6-05
1361	16	templates	460	15	css	 \n	2017-11-21 16:16:02.628-05	2017-11-21 16:16:02.628-05
1362	16	templates	460	14	html	  <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="" v-on-c="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 16:16:02.628-05	2017-11-21 16:16:02.628-05
1363	16	templates	460	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        console.log(this.value)\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder,\n          form: this.$parent\n        }\n      }\n    }\n  }\n\n\n	2017-11-21 16:16:02.628-05	2017-11-21 16:16:02.628-05
1364	16	templates	461	15	css	 \n	2017-11-21 16:16:22.662-05	2017-11-21 16:16:22.662-05
1365	16	templates	461	14	html	  <div class="md:w-1/2 px-3 mb-6 md:mb-0">\n      <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="grid-first-name">\n        {{label}}\n      </label>\n      <component :is="componentName(type)" v-bind="inputProps" class="">\n      <p class="text-red text-xs italic">Please fill out this field.</p>\n    </component></div>\n	2017-11-21 16:16:22.662-05	2017-11-21 16:16:22.662-05
1366	16	templates	461	16	js	module.exports = {\n    name: 'adminInputField',\n    props: [\n      'type', 'name', 'placeholder', 'label', 'value'\n    ],\n    methods: {\n      componentName(type){\n        return `adminInput${type.charAt(0).toUpperCase() + type.slice(1)}`\n      },\n    },\n    computed: {\n      inputProps() {\n        console.log(this.value)\n        return {\n          name: this.name,\n          value: this.value,\n          placeholder: this.placeholder,\n          form: this.$parent\n        }\n      }\n    }\n  }\n\n\n	2017-11-21 16:16:22.662-05	2017-11-21 16:16:22.662-05
1367	18	templates	462	15	css	 \n	2017-11-21 16:17:12.763-05	2017-11-21 16:17:12.763-05
1368	18	templates	462	14	html	  <input type="submit" v-modal="value" v-on:change="form.emit(&apos;inputEvent&apos;, {name, value}" class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3"> \n	2017-11-21 16:17:12.763-05	2017-11-21 16:17:12.763-05
1369	18	templates	462	16	js	module.exports = {\n    name: 'adminInputSubmit',\n    props: ['value', 'placeholder', 'name']\n  }\n	2017-11-21 16:17:12.763-05	2017-11-21 16:17:12.763-05
1370	15	templates	463	4	css	 \n	2017-11-21 16:18:22.899-05	2017-11-21 16:18:22.899-05
1371	15	templates	463	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 16:18:22.899-05	2017-11-21 16:18:22.899-05
1372	15	templates	463	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    beforeCreate() {\n      this.$on('inputEvent' (data) => {\n        this.inputValues[data.name] = data.value;\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 16:18:22.899-05	2017-11-21 16:18:22.899-05
1373	15	templates	464	4	css	 \n	2017-11-21 16:18:27.905-05	2017-11-21 16:18:27.905-05
1374	15	templates	464	3	html	  <div>\n      <h1>Create New {{$route.params.resource_name}}</h1>\n      <form v-on:submit.prevent="submitForm">\n        <div v-for="field in fields">\n          <admin-input-field :type="field.type" :name="field.name" :placholder="field.name" :label="field.name" :value="inputValues[field.name]">\n          </admin-input-field>\n        </div>\n        <admin-input-field type="submit" name="submit" label="Save your data!"></admin-input-field>\n      </form>\n      \n  </div>\n\n\n\n	2017-11-21 16:18:27.905-05	2017-11-21 16:18:27.905-05
1375	15	templates	464	5	js	module.exports = {\n    name: 'adminCreateResource',\n    data() {\n      return {\n        inputValues: {}\n      }\n    },\n    methods: {\n      submitForm() {\n        console.log(this.inputValues)\n      }\n    },\n    beforeCreate() {\n      this.$on('inputEvent' (data) => {\n        this.inputValues[data.name] = data.value;\n      })\n    },\n    asyncComputed: {\n      fields: async function () {\n        console.log('this', this)\n        console.log(this.$route.params.resource_name)\n        const resource_name = this.$decamelize(this.$route.params.resource_name)\n        const resource = await this.$apolloClient.query({\n          query: this.$gql`\n          {\n            resourceByName(name: "${resource_name}"){\n              name\n              id\n            }\n          }`\n        })\n        const fields = await this.$apolloClient.query({\n          query: this.$gql`{\n            fieldSetAsArray(fieldSetTable: "items", resourceIdValue: ${resource.data.resourceByName.id}){\n              nodes{\n                name\n                id\n                type\n              }\n            } \n          }`\n        })\n        console.log('fields')\n        return [{name: "name", type: "text"}, ...fields.data.fieldSetAsArray.nodes]\n      }\n    }\n  }\n\n\n\n	2017-11-21 16:18:27.905-05	2017-11-21 16:18:27.905-05
1153	9	templates	388	5	js	module.exports = {\n    name: 'adminPageList',\n    data() {\n      return {\n        allPages: []\n      }\n    },\n    beforeMount() {\n      this.$apolloClient.query({\n        query: this.$gql`\n          {\n            page {\n              nodes {\n                items {\n                  nodes {\n                    name\n                    path\n                    template\n                  }\n                }\n              }\n            }\n          }`\n      }).then(r => {\n        this.allPages = r.data.page.nodes[0].items.nodes\n      })\n    }\n  }\n\n\n\n\n\n\n\n\n	2017-11-21 14:51:01.893-05	2017-11-21 14:51:01.893-05
\.


--
-- Data for Name: items; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY items (id, resource_id, name, created_at, updated_at) FROM stdin;
1	1	admin-home	2017-11-20 12:22:53.945-05	2017-11-20 12:22:53.945-05
6	1	pageList	2017-11-20 16:26:59.228-05	2017-11-20 16:26:59.228-05
7	3	homePage	2017-11-20 16:37:39.307-05	2017-11-20 16:37:39.307-05
10	1	adminResourceList	2017-11-21 11:28:45.421-05	2017-11-21 11:28:45.421-05
11	1	createResource	2017-11-21 13:23:54.207-05	2017-11-21 13:23:54.207-05
12	3	About Us	2017-11-21 16:43:45.801-05	2017-11-21 16:43:45.801-05
13	3	About Us	2017-11-21 16:48:47.902-05	2017-11-21 16:48:47.902-05
14	1	AdminFakePage	2017-11-21 16:49:29.963-05	2017-11-21 16:49:29.963-05
15	1	AdminHome2	2017-11-22 12:40:03.247-05	2017-11-22 12:40:03.247-05
16	1	AdminHome3	2017-11-22 12:40:06.821-05	2017-11-22 12:40:06.821-05
17	3	\N	2017-11-25 09:35:43.043-05	2017-11-25 09:35:43.043-05
\.


--
-- Data for Name: templates; Type: TABLE DATA; Schema: public; Owner: smartsiterole
--

COPY templates (id, resource_id, name, created_at, updated_at, default_fields) FROM stdin;
1	1	adminHome	2017-11-20 12:28:44.927062-05	2017-11-20 12:28:44.927062-05	\N
2	1	defaultAdminPage	2017-11-20 12:52:38.565244-05	2017-11-20 12:52:38.565244-05	\N
3	1	adminMenu	2017-11-20 14:58:39.032661-05	2017-11-20 14:58:39.032661-05	\N
6	1	adminMenuItem	2017-11-20 15:13:26.324505-05	2017-11-20 15:13:26.324505-05	\N
8	1	adminList	2017-11-20 16:13:26.773457-05	2017-11-20 16:13:26.773457-05	\N
9	1	adminPageList	2017-11-20 16:15:47.63796-05	2017-11-20 16:15:47.63796-05	\N
10	3	homePage	2017-11-20 16:37:39.30728-05	2017-11-20 16:37:39.30728-05	\N
11	3	defaultPage	2017-11-20 16:38:09.974158-05	2017-11-20 16:38:09.974158-05	\N
13	1	adminResourceList	2017-11-21 11:24:59.740006-05	2017-11-21 11:24:59.740006-05	\N
14	4	adminButton	2017-11-21 12:31:27.5281-05	2017-11-21 12:31:27.5281-05	\N
12	4	adminCard	2017-11-21 10:33:53.8591-05	2017-11-21 10:33:53.8591-05	\N
15	1	adminCreateResource	2017-11-21 13:03:17.09148-05	2017-11-21 13:03:17.09148-05	\N
16	4	adminInputField	2017-11-21 14:50:59.866608-05	2017-11-21 14:50:59.866608-05	\N
17	4	adminInputText	2017-11-21 14:51:35.814129-05	2017-11-21 14:51:35.814129-05	\N
18	4	adminInputSubmit	2017-11-21 15:26:50.55511-05	2017-11-21 15:26:50.55511-05	\N
\.


--
-- Name: admin_settings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('admin_settings_id_seq', 1, false);


--
-- Name: content_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('content_id_seq', 1561, true);


--
-- Name: fields_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('fields_id_seq', 20, true);


--
-- Name: items_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('items_id_seq', 17, true);


--
-- Name: resources_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('resources_id_seq', 4, true);


--
-- Name: templates_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('templates_id_seq', 19, true);


--
-- Name: versions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: smartsiterole
--

SELECT pg_catalog.setval('versions_id_seq', 528, true);


--
-- PostgreSQL database dump complete
--

